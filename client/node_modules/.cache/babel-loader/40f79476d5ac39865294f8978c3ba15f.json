{"remainingRequest":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\src\\components\\BaseTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\src\\components\\BaseTable.vue","mtime":1606920603941},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'base-table',\n  props: {\n    columns: {\n      type: Array,\n      default: function _default() {\n        return [];\n      },\n      description: 'Table columns'\n    },\n    data: {\n      type: Array,\n      default: function _default() {\n        return [];\n      },\n      description: 'Table data'\n    },\n    type: {\n      type: String,\n      // striped | hover\n      default: '',\n      description: 'Whether table is striped or hover type'\n    },\n    theadClasses: {\n      type: String,\n      default: '',\n      description: '<thead> css classes'\n    },\n    tbodyClasses: {\n      type: String,\n      default: '',\n      description: '<tbody> css classes'\n    }\n  },\n  computed: {\n    tableClass: function tableClass() {\n      return this.type && \"table-\".concat(this.type);\n    },\n    colsWithValue: function colsWithValue() {\n      var _this = this;\n\n      return function (row) {\n        return _this.columns.filter(function (column) {\n          return _this.hasValue(row, column);\n        });\n      };\n    }\n  },\n  methods: {\n    hasValue: function hasValue(item, column) {\n      return item[column.toLowerCase()] !== 'undefined';\n    },\n    itemValue: function itemValue(item, column) {\n      return item[column.toLowerCase()];\n    }\n  }\n};",{"version":3,"sources":["BaseTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAuBA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA,OAFA;AAGA,MAAA,WAAA,EAAA;AAHA,KADA;AAMA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA,OAFA;AAGA,MAAA,WAAA,EAAA;AAHA,KANA;AAWA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AACA;AACA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,WAAA,EAAA;AAHA,KAXA;AAgBA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,WAAA,EAAA;AAHA,KAhBA;AAqBA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,WAAA,EAAA;AAHA;AArBA,GAFA;AA6BA,EAAA,QAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,aAAA,KAAA,IAAA,oBAAA,KAAA,IAAA,CAAA;AACA,KAHA;AAIA,IAAA,aAJA,2BAIA;AAAA;;AACA,aAAA,UAAA,GAAA,EAAA;AACA,eAAA,KAAA,CAAA,OAAA,CAAA,MAAA,CAAA,UAAA,MAAA;AAAA,iBAAA,KAAA,CAAA,QAAA,CAAA,GAAA,EAAA,MAAA,CAAA;AAAA,SAAA,CAAA;AACA,OAFA;AAGA;AARA,GA7BA;AAuCA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,oBACA,IADA,EACA,MADA,EACA;AACA,aAAA,IAAA,CAAA,MAAA,CAAA,WAAA,EAAA,CAAA,KAAA,WAAA;AACA,KAHA;AAIA,IAAA,SAJA,qBAIA,IAJA,EAIA,MAJA,EAIA;AACA,aAAA,IAAA,CAAA,MAAA,CAAA,WAAA,EAAA,CAAA;AACA;AANA;AAvCA,CAAA","sourcesContent":["<template>\r\n  <table class=\"table tablesorter\" :class=\"tableClass\">\r\n    <thead :class=\"theadClasses\">\r\n      <tr>\r\n        <slot name=\"columns\" :columns=\"columns\">\r\n          <th v-for=\"column in columns\" :key=\"column\">{{ column }}</th>\r\n        </slot>\r\n      </tr>\r\n    </thead>\r\n    <tbody :class=\"tbodyClasses\">\r\n      <tr v-for=\"(item, index) in data\" :key=\"index\">\r\n        <slot :row=\"item\" :index=\"index\">\r\n          <td\r\n            v-for=\"(column, index) in colsWithValue(item)\"\r\n            :key=\"index\">\r\n            {{ itemValue(item, column) }}\r\n          </td>\r\n        </slot>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'base-table',\r\n  props: {\r\n    columns: {\r\n      type: Array,\r\n      default: () => [],\r\n      description: 'Table columns'\r\n    },\r\n    data: {\r\n      type: Array,\r\n      default: () => [],\r\n      description: 'Table data'\r\n    },\r\n    type: {\r\n      type: String, // striped | hover\r\n      default: '',\r\n      description: 'Whether table is striped or hover type'\r\n    },\r\n    theadClasses: {\r\n      type: String,\r\n      default: '',\r\n      description: '<thead> css classes'\r\n    },\r\n    tbodyClasses: {\r\n      type: String,\r\n      default: '',\r\n      description: '<tbody> css classes'\r\n    }\r\n  },\r\n  computed: {\r\n    tableClass() {\r\n      return this.type && `table-${this.type}`;\r\n    },\r\n    colsWithValue() {\r\n      return (row) => {\r\n        return this.columns.filter(column => this.hasValue(row, column))\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    hasValue(item, column) {\r\n      return item[column.toLowerCase()] !== 'undefined';\r\n    },\r\n    itemValue(item, column) {\r\n      return item[column.toLowerCase()];\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style></style>\r\n"],"sourceRoot":"src/components"}]}