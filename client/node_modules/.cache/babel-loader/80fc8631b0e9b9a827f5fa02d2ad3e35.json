{"remainingRequest":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\src\\components\\Charts\\config.js","dependencies":[{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\src\\components\\Charts\\config.js","mtime":1606941780274},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"C:/Users/sally/OneDrive/Documents/GitHub/cis550-jeopardy/client_vF/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"core-js/modules/web.dom.iterable\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { parseOptions } from \"@/components/Charts/optionHelpers\";\nexport var Charts = {\n  mode: 'light',\n  //(themeMode) ? themeMode : 'light';\n  fonts: {\n    base: 'Open Sans'\n  },\n  colors: {\n    gray: {\n      100: '#f6f9fc',\n      200: '#e9ecef',\n      300: '#dee2e6',\n      400: '#ced4da',\n      500: '#adb5bd',\n      600: '#8898aa',\n      700: '#525f7f',\n      800: '#32325d',\n      900: '#212529'\n    },\n    theme: {\n      'default': '#172b4d',\n      'primary': '#5e72e4',\n      'secondary': '#f4f5f7',\n      'info': '#11cdef',\n      'success': '#2dce89',\n      'danger': '#f5365c',\n      'warning': '#fb6340'\n    },\n    black: '#12263F',\n    white: '#FFFFFF',\n    transparent: 'transparent'\n  }\n};\n\nfunction chartOptions(Chart) {\n  var colors = Charts.colors,\n      mode = Charts.mode,\n      fonts = Charts.fonts; // Options\n\n  var options = {\n    defaults: {\n      global: {\n        responsive: true,\n        maintainAspectRatio: false,\n        defaultColor: mode == 'dark' ? colors.gray[700] : colors.gray[600],\n        defaultFontColor: mode == 'dark' ? colors.gray[700] : colors.gray[600],\n        defaultFontFamily: fonts.base,\n        defaultFontSize: 16,\n        layout: {\n          padding: 0\n        },\n        legend: {\n          display: false,\n          position: 'bottom',\n          labels: {\n            usePointStyle: true,\n            padding: 16\n          }\n        },\n        elements: {\n          point: {\n            radius: 0,\n            backgroundColor: colors.theme['primary']\n          },\n          line: {\n            tension: .4,\n            borderWidth: 4,\n            borderColor: colors.theme['primary'],\n            backgroundColor: colors.transparent,\n            borderCapStyle: 'rounded'\n          },\n          rectangle: {\n            backgroundColor: colors.theme['warning'],\n            borderWidth: 2\n          },\n          arc: {\n            backgroundColor: colors.theme['primary'],\n            borderColor: mode == 'dark' ? colors.gray[800] : colors.white,\n            borderWidth: 4\n          }\n        },\n        tooltips: {\n          enabled: true,\n          mode: 'index',\n          intersect: false\n        }\n      },\n      doughnut: {\n        cutoutPercentage: 83,\n        legendCallback: function legendCallback(chart) {\n          var data = chart.data;\n          var content = '';\n          data.labels.forEach(function (label, index) {\n            var bgColor = data.datasets[0].backgroundColor[index];\n            content += '<span class=\"chart-legend-item\">';\n            content += '<i class=\"chart-legend-indicator\" style=\"background-color: ' + bgColor + '\"></i>';\n            content += label;\n            content += '</span>';\n          });\n          return content;\n        }\n      }\n    }\n  }; // yAxes\n\n  Chart.scaleService.updateScaleDefaults('linear', {\n    gridLines: {\n      borderDash: [2],\n      borderDashOffset: [2],\n      color: mode == 'dark' ? colors.gray[900] : colors.gray[300],\n      drawBorder: false,\n      drawTicks: false,\n      lineWidth: 0,\n      zeroLineWidth: 0,\n      zeroLineColor: mode == 'dark' ? colors.gray[900] : colors.gray[300],\n      zeroLineBorderDash: [2],\n      zeroLineBorderDashOffset: [2]\n    },\n    ticks: {\n      beginAtZero: true,\n      padding: 10,\n      callback: function callback(value) {\n        if (!(value % 10)) {\n          return value;\n        }\n      }\n    }\n  }); // xAxes\n\n  Chart.scaleService.updateScaleDefaults('category', {\n    gridLines: {\n      drawBorder: false,\n      drawOnChartArea: false,\n      drawTicks: false\n    },\n    ticks: {\n      padding: 20\n    },\n    maxBarThickness: 30\n  });\n  return options;\n}\n\nexport function initGlobalOptions(Chart) {\n  parseOptions(Chart, chartOptions(Chart));\n}\nexport var basicOptions = {\n  maintainAspectRatio: false,\n  legend: {\n    display: false\n  },\n  responsive: true\n};\nexport var blueChartOptions = {\n  scales: {\n    yAxes: [{\n      gridLines: {\n        color: Charts.colors.gray[700],\n        zeroLineColor: Charts.colors.gray[700]\n      },\n      ticks: {\n        callback: function callback(value) {\n          if (!(value % 10)) {\n            return '$' + value + 'k';\n          }\n        }\n      }\n    }]\n  }\n};\nexport var lineChartOptionsBlue = _objectSpread(_objectSpread({}, basicOptions), {}, {\n  tooltips: {\n    backgroundColor: '#f5f5f5',\n    titleFontColor: '#333',\n    bodyFontColor: '#666',\n    bodySpacing: 4,\n    xPadding: 12,\n    mode: 'nearest',\n    intersect: 0,\n    position: 'nearest'\n  },\n  responsive: true,\n  scales: {\n    yAxes: [{\n      barPercentage: 1.6,\n      gridLines: {\n        drawBorder: false,\n        color: 'rgba(29,140,248,0.0)',\n        zeroLineColor: 'transparent'\n      },\n      ticks: {\n        suggestedMin: 60,\n        suggestedMax: 125,\n        padding: 20,\n        fontColor: '#9e9e9e'\n      }\n    }],\n    xAxes: [{\n      barPercentage: 1.6,\n      gridLines: {\n        drawBorder: false,\n        color: 'rgba(29,140,248,0.1)',\n        zeroLineColor: 'transparent'\n      },\n      ticks: {\n        padding: 20,\n        fontColor: '#9e9e9e'\n      }\n    }]\n  }\n});\nexport var barChartOptionsGradient = _objectSpread(_objectSpread({}, basicOptions), {}, {\n  tooltips: {\n    backgroundColor: '#f5f5f5',\n    titleFontColor: '#333',\n    bodyFontColor: '#666',\n    bodySpacing: 4,\n    xPadding: 12,\n    mode: 'nearest',\n    intersect: 0,\n    position: 'nearest'\n  },\n  responsive: true,\n  scales: {\n    yAxes: [{\n      gridLines: {\n        drawBorder: false,\n        color: 'rgba(253,93,147,0.1)',\n        zeroLineColor: 'transparent'\n      },\n      ticks: {\n        suggestedMin: 60,\n        suggestedMax: 125,\n        padding: 20,\n        fontColor: '#9e9e9e'\n      }\n    }],\n    xAxes: [{\n      gridLines: {\n        drawBorder: false,\n        color: 'rgba(253,93,147,0.1)',\n        zeroLineColor: 'transparent'\n      },\n      ticks: {\n        padding: 20,\n        fontColor: '#9e9e9e'\n      }\n    }]\n  }\n});\nexport var pieChartOptions = _objectSpread(_objectSpread({}, basicOptions), {}, {\n  cutoutPercentage: 70,\n  tooltips: {\n    backgroundColor: '#f5f5f5',\n    titleFontColor: '#333',\n    bodyFontColor: '#666',\n    bodySpacing: 4,\n    xPadding: 12,\n    mode: 'nearest',\n    intersect: 0,\n    position: 'nearest'\n  },\n  scales: {\n    yAxes: [{\n      display: 0,\n      ticks: {\n        display: false\n      },\n      gridLines: {\n        drawBorder: false,\n        zeroLineColor: 'transparent',\n        color: 'rgba(255,255,255,0.05)'\n      }\n    }],\n    xAxes: [{\n      display: 0,\n      barPercentage: 1.6,\n      gridLines: {\n        drawBorder: false,\n        color: 'rgba(255,255,255,0.1)',\n        zeroLineColor: 'transparent'\n      },\n      ticks: {\n        display: false\n      }\n    }]\n  }\n});\nexport var purpleChartOptions = _objectSpread(_objectSpread({}, basicOptions), {}, {\n  tooltips: {\n    backgroundColor: '#f5f5f5',\n    titleFontColor: '#333',\n    bodyFontColor: '#666',\n    bodySpacing: 4,\n    xPadding: 12,\n    mode: 'nearest',\n    intersect: 0,\n    position: 'nearest'\n  },\n  scales: {\n    yAxes: [{\n      barPercentage: 1.6,\n      gridLines: {\n        drawBorder: false,\n        color: 'rgba(29,140,248,0.0)',\n        zeroLineColor: 'transparent'\n      },\n      ticks: {\n        suggestedMin: 60,\n        suggestedMax: 125,\n        padding: 20,\n        fontColor: '#9a9a9a'\n      }\n    }],\n    xAxes: [{\n      barPercentage: 1.6,\n      gridLines: {\n        drawBorder: false,\n        color: 'rgba(225,78,202,0.1)',\n        zeroLineColor: 'transparent'\n      },\n      ticks: {\n        padding: 20,\n        fontColor: '#9a9a9a'\n      }\n    }]\n  }\n});\nexport var orangeChartOptions = _objectSpread(_objectSpread({}, basicOptions), {}, {\n  tooltips: {\n    backgroundColor: '#f5f5f5',\n    titleFontColor: '#333',\n    bodyFontColor: '#666',\n    bodySpacing: 4,\n    xPadding: 12,\n    mode: 'nearest',\n    intersect: 0,\n    position: 'nearest'\n  },\n  scales: {\n    yAxes: [{\n      barPercentage: 1.6,\n      gridLines: {\n        drawBorder: false,\n        color: 'rgba(29,140,248,0.0)',\n        zeroLineColor: 'transparent'\n      },\n      ticks: {\n        suggestedMin: 50,\n        suggestedMax: 110,\n        padding: 20,\n        fontColor: '#ff8a76'\n      }\n    }],\n    xAxes: [{\n      barPercentage: 1.6,\n      gridLines: {\n        drawBorder: false,\n        color: 'rgba(220,53,69,0.1)',\n        zeroLineColor: 'transparent'\n      },\n      ticks: {\n        padding: 20,\n        fontColor: '#ff8a76'\n      }\n    }]\n  }\n});\nexport var greenChartOptions = _objectSpread(_objectSpread({}, basicOptions), {}, {\n  tooltips: {\n    backgroundColor: '#f5f5f5',\n    titleFontColor: '#333',\n    bodyFontColor: '#666',\n    bodySpacing: 4,\n    xPadding: 12,\n    mode: 'nearest',\n    intersect: 0,\n    position: 'nearest'\n  },\n  scales: {\n    yAxes: [{\n      barPercentage: 1.6,\n      gridLines: {\n        drawBorder: false,\n        color: 'rgba(29,140,248,0.0)',\n        zeroLineColor: 'transparent'\n      },\n      ticks: {\n        suggestedMin: 50,\n        suggestedMax: 125,\n        padding: 20,\n        fontColor: '#9e9e9e'\n      }\n    }],\n    xAxes: [{\n      barPercentage: 1.6,\n      gridLines: {\n        drawBorder: false,\n        color: 'rgba(0,242,195,0.1)',\n        zeroLineColor: 'transparent'\n      },\n      ticks: {\n        padding: 20,\n        fontColor: '#9e9e9e'\n      }\n    }]\n  }\n});\nexport var barChartOptions = _objectSpread(_objectSpread({}, basicOptions), {}, {\n  tooltips: {\n    backgroundColor: '#f5f5f5',\n    titleFontColor: '#333',\n    bodyFontColor: '#666',\n    bodySpacing: 4,\n    xPadding: 12,\n    mode: 'nearest',\n    intersect: 0,\n    position: 'nearest'\n  },\n  scales: {\n    yAxes: [{\n      gridLines: {\n        drawBorder: false,\n        color: 'rgba(29,140,248,0.1)',\n        zeroLineColor: 'transparent'\n      },\n      ticks: {\n        suggestedMin: 60,\n        suggestedMax: 120,\n        padding: 20,\n        fontColor: '#9e9e9e'\n      }\n    }],\n    xAxes: [{\n      gridLines: {\n        drawBorder: false,\n        color: 'rgba(29,140,248,0.1)',\n        zeroLineColor: 'transparent'\n      },\n      ticks: {\n        padding: 20,\n        fontColor: '#9e9e9e'\n      }\n    }]\n  }\n});",{"version":3,"sources":["C:/Users/sally/OneDrive/Documents/GitHub/cis550-jeopardy/client_vF/src/components/Charts/config.js"],"names":["parseOptions","Charts","mode","fonts","base","colors","gray","theme","black","white","transparent","chartOptions","Chart","options","defaults","global","responsive","maintainAspectRatio","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","layout","padding","legend","display","position","labels","usePointStyle","elements","point","radius","backgroundColor","line","tension","borderWidth","borderColor","borderCapStyle","rectangle","arc","tooltips","enabled","intersect","doughnut","cutoutPercentage","legendCallback","chart","data","content","forEach","label","index","bgColor","datasets","scaleService","updateScaleDefaults","gridLines","borderDash","borderDashOffset","color","drawBorder","drawTicks","lineWidth","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","ticks","beginAtZero","callback","value","drawOnChartArea","maxBarThickness","initGlobalOptions","basicOptions","blueChartOptions","scales","yAxes","lineChartOptionsBlue","titleFontColor","bodyFontColor","bodySpacing","xPadding","barPercentage","suggestedMin","suggestedMax","fontColor","xAxes","barChartOptionsGradient","pieChartOptions","purpleChartOptions","orangeChartOptions","greenChartOptions","barChartOptions"],"mappings":"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","sourcesContent":["import { parseOptions } from \"@/components/Charts/optionHelpers\";\r\n\r\nexport const Charts = {\r\n  mode: 'light',//(themeMode) ? themeMode : 'light';\r\n  fonts: {\r\n    base: 'Open Sans'\r\n  },\r\n  colors: {\r\n    gray: {\r\n      100: '#f6f9fc',\r\n      200: '#e9ecef',\r\n      300: '#dee2e6',\r\n      400: '#ced4da',\r\n      500: '#adb5bd',\r\n      600: '#8898aa',\r\n      700: '#525f7f',\r\n      800: '#32325d',\r\n      900: '#212529'\r\n    },\r\n    theme: {\r\n      'default': '#172b4d',\r\n      'primary': '#5e72e4',\r\n      'secondary': '#f4f5f7',\r\n      'info': '#11cdef',\r\n      'success': '#2dce89',\r\n      'danger': '#f5365c',\r\n      'warning': '#fb6340'\r\n    },\r\n    black: '#12263F',\r\n    white: '#FFFFFF',\r\n    transparent: 'transparent',\r\n  }\r\n};\r\n\r\nfunction chartOptions(Chart) {\r\n  let { colors, mode, fonts } = Charts;\r\n  // Options\r\n  let options = {\r\n    defaults: {\r\n      global: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        defaultColor: (mode == 'dark') ? colors.gray[700] : colors.gray[600],\r\n        defaultFontColor: (mode == 'dark') ? colors.gray[700] : colors.gray[600],\r\n        defaultFontFamily: fonts.base,\r\n        defaultFontSize: 16,\r\n        layout: {\r\n          padding: 0\r\n        },\r\n        legend: {\r\n          display: false,\r\n          position: 'bottom',\r\n          labels: {\r\n            usePointStyle: true,\r\n            padding: 16\r\n          }\r\n        },\r\n        elements: {\r\n          point: {\r\n            radius: 0,\r\n            backgroundColor: colors.theme['primary']\r\n          },\r\n          line: {\r\n            tension: .4,\r\n            borderWidth: 4,\r\n            borderColor: colors.theme['primary'],\r\n            backgroundColor: colors.transparent,\r\n            borderCapStyle: 'rounded'\r\n          },\r\n          rectangle: {\r\n            backgroundColor: colors.theme['warning'],\r\n            borderWidth: 2\r\n          },\r\n          arc: {\r\n            backgroundColor: colors.theme['primary'],\r\n            borderColor: (mode == 'dark') ? colors.gray[800] : colors.white,\r\n            borderWidth: 4\r\n          }\r\n        },\r\n        tooltips: {\r\n          enabled: true,\r\n          mode: 'index',\r\n          intersect: false,\r\n        }\r\n      },\r\n      doughnut: {\r\n        cutoutPercentage: 83,\r\n        legendCallback: function (chart) {\r\n          let data = chart.data;\r\n          let content = '';\r\n\r\n          data.labels.forEach(function (label, index) {\r\n            let bgColor = data.datasets[0].backgroundColor[index];\r\n\r\n            content += '<span class=\"chart-legend-item\">';\r\n            content += '<i class=\"chart-legend-indicator\" style=\"background-color: ' + bgColor + '\"></i>';\r\n            content += label;\r\n            content += '</span>';\r\n          });\r\n\r\n          return content;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // yAxes\r\n  Chart.scaleService.updateScaleDefaults('linear', {\r\n    gridLines: {\r\n      borderDash: [2],\r\n      borderDashOffset: [2],\r\n      color: (mode == 'dark') ? colors.gray[900] : colors.gray[300],\r\n      drawBorder: false,\r\n      drawTicks: false,\r\n      lineWidth: 0,\r\n      zeroLineWidth: 0,\r\n      zeroLineColor: (mode == 'dark') ? colors.gray[900] : colors.gray[300],\r\n      zeroLineBorderDash: [2],\r\n      zeroLineBorderDashOffset: [2]\r\n    },\r\n    ticks: {\r\n      beginAtZero: true,\r\n      padding: 10,\r\n      callback: function (value) {\r\n        if (!(value % 10)) {\r\n          return value\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  // xAxes\r\n  Chart.scaleService.updateScaleDefaults('category', {\r\n    gridLines: {\r\n      drawBorder: false,\r\n      drawOnChartArea: false,\r\n      drawTicks: false\r\n    },\r\n    ticks: {\r\n      padding: 20\r\n    },\r\n    maxBarThickness: 30\r\n  });\r\n\r\n  return options;\r\n}\r\n\r\nexport function initGlobalOptions(Chart) {\r\n  parseOptions(Chart, chartOptions(Chart));\r\n}\r\n\r\nexport const basicOptions = {\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false\r\n  },\r\n  responsive: true\r\n};\r\nexport let blueChartOptions = {\r\n  scales: {\r\n    yAxes: [{\r\n      gridLines: {\r\n        color: Charts.colors.gray[700],\r\n        zeroLineColor: Charts.colors.gray[700]\r\n      },\r\n      ticks: {\r\n        callback: function(value) {\r\n          if (!(value % 10)) {\r\n            return '$' + value + 'k';\r\n          }\r\n        }\r\n      }\r\n    }]\r\n  }\r\n};\r\n\r\nexport let lineChartOptionsBlue = {\r\n  ...basicOptions,\r\n  tooltips: {\r\n    backgroundColor: '#f5f5f5',\r\n    titleFontColor: '#333',\r\n    bodyFontColor: '#666',\r\n    bodySpacing: 4,\r\n    xPadding: 12,\r\n    mode: 'nearest',\r\n    intersect: 0,\r\n    position: 'nearest'\r\n  },\r\n  responsive: true,\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        barPercentage: 1.6,\r\n        gridLines: {\r\n          drawBorder: false,\r\n          color: 'rgba(29,140,248,0.0)',\r\n          zeroLineColor: 'transparent'\r\n        },\r\n        ticks: {\r\n          suggestedMin: 60,\r\n          suggestedMax: 125,\r\n          padding: 20,\r\n          fontColor: '#9e9e9e'\r\n        }\r\n      }\r\n    ],\r\n\r\n    xAxes: [\r\n      {\r\n        barPercentage: 1.6,\r\n        gridLines: {\r\n          drawBorder: false,\r\n          color: 'rgba(29,140,248,0.1)',\r\n          zeroLineColor: 'transparent'\r\n        },\r\n        ticks: {\r\n          padding: 20,\r\n          fontColor: '#9e9e9e'\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nexport let barChartOptionsGradient = {\r\n  ...basicOptions,\r\n  tooltips: {\r\n    backgroundColor: '#f5f5f5',\r\n    titleFontColor: '#333',\r\n    bodyFontColor: '#666',\r\n    bodySpacing: 4,\r\n    xPadding: 12,\r\n    mode: 'nearest',\r\n    intersect: 0,\r\n    position: 'nearest'\r\n  },\r\n  responsive: true,\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          drawBorder: false,\r\n          color: 'rgba(253,93,147,0.1)',\r\n          zeroLineColor: 'transparent'\r\n        },\r\n        ticks: {\r\n          suggestedMin: 60,\r\n          suggestedMax: 125,\r\n          padding: 20,\r\n          fontColor: '#9e9e9e'\r\n        }\r\n      }\r\n    ],\r\n\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          drawBorder: false,\r\n          color: 'rgba(253,93,147,0.1)',\r\n          zeroLineColor: 'transparent'\r\n        },\r\n        ticks: {\r\n          padding: 20,\r\n          fontColor: '#9e9e9e'\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nexport let pieChartOptions = {\r\n  ...basicOptions,\r\n  cutoutPercentage: 70,\r\n  tooltips: {\r\n    backgroundColor: '#f5f5f5',\r\n    titleFontColor: '#333',\r\n    bodyFontColor: '#666',\r\n    bodySpacing: 4,\r\n    xPadding: 12,\r\n    mode: 'nearest',\r\n    intersect: 0,\r\n    position: 'nearest'\r\n  },\r\n\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        display: 0,\r\n        ticks: {\r\n          display: false\r\n        },\r\n        gridLines: {\r\n          drawBorder: false,\r\n          zeroLineColor: 'transparent',\r\n          color: 'rgba(255,255,255,0.05)'\r\n        }\r\n      }\r\n    ],\r\n\r\n    xAxes: [\r\n      {\r\n        display: 0,\r\n        barPercentage: 1.6,\r\n        gridLines: {\r\n          drawBorder: false,\r\n          color: 'rgba(255,255,255,0.1)',\r\n          zeroLineColor: 'transparent'\r\n        },\r\n        ticks: {\r\n          display: false\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nexport let purpleChartOptions = {\r\n  ...basicOptions,\r\n  tooltips: {\r\n    backgroundColor: '#f5f5f5',\r\n    titleFontColor: '#333',\r\n    bodyFontColor: '#666',\r\n    bodySpacing: 4,\r\n    xPadding: 12,\r\n    mode: 'nearest',\r\n    intersect: 0,\r\n    position: 'nearest'\r\n  },\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        barPercentage: 1.6,\r\n        gridLines: {\r\n          drawBorder: false,\r\n          color: 'rgba(29,140,248,0.0)',\r\n          zeroLineColor: 'transparent'\r\n        },\r\n        ticks: {\r\n          suggestedMin: 60,\r\n          suggestedMax: 125,\r\n          padding: 20,\r\n          fontColor: '#9a9a9a'\r\n        }\r\n      }\r\n    ],\r\n\r\n    xAxes: [\r\n      {\r\n        barPercentage: 1.6,\r\n        gridLines: {\r\n          drawBorder: false,\r\n          color: 'rgba(225,78,202,0.1)',\r\n          zeroLineColor: 'transparent'\r\n        },\r\n        ticks: {\r\n          padding: 20,\r\n          fontColor: '#9a9a9a'\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nexport let orangeChartOptions = {\r\n  ...basicOptions,\r\n  tooltips: {\r\n    backgroundColor: '#f5f5f5',\r\n    titleFontColor: '#333',\r\n    bodyFontColor: '#666',\r\n    bodySpacing: 4,\r\n    xPadding: 12,\r\n    mode: 'nearest',\r\n    intersect: 0,\r\n    position: 'nearest'\r\n  },\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        barPercentage: 1.6,\r\n        gridLines: {\r\n          drawBorder: false,\r\n          color: 'rgba(29,140,248,0.0)',\r\n          zeroLineColor: 'transparent'\r\n        },\r\n        ticks: {\r\n          suggestedMin: 50,\r\n          suggestedMax: 110,\r\n          padding: 20,\r\n          fontColor: '#ff8a76'\r\n        }\r\n      }\r\n    ],\r\n\r\n    xAxes: [\r\n      {\r\n        barPercentage: 1.6,\r\n        gridLines: {\r\n          drawBorder: false,\r\n          color: 'rgba(220,53,69,0.1)',\r\n          zeroLineColor: 'transparent'\r\n        },\r\n        ticks: {\r\n          padding: 20,\r\n          fontColor: '#ff8a76'\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\nexport let greenChartOptions = {\r\n  ...basicOptions,\r\n  tooltips: {\r\n    backgroundColor: '#f5f5f5',\r\n    titleFontColor: '#333',\r\n    bodyFontColor: '#666',\r\n    bodySpacing: 4,\r\n    xPadding: 12,\r\n    mode: 'nearest',\r\n    intersect: 0,\r\n    position: 'nearest'\r\n  },\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        barPercentage: 1.6,\r\n        gridLines: {\r\n          drawBorder: false,\r\n          color: 'rgba(29,140,248,0.0)',\r\n          zeroLineColor: 'transparent'\r\n        },\r\n        ticks: {\r\n          suggestedMin: 50,\r\n          suggestedMax: 125,\r\n          padding: 20,\r\n          fontColor: '#9e9e9e'\r\n        }\r\n      }\r\n    ],\r\n\r\n    xAxes: [\r\n      {\r\n        barPercentage: 1.6,\r\n        gridLines: {\r\n          drawBorder: false,\r\n          color: 'rgba(0,242,195,0.1)',\r\n          zeroLineColor: 'transparent'\r\n        },\r\n        ticks: {\r\n          padding: 20,\r\n          fontColor: '#9e9e9e'\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nexport let barChartOptions = {\r\n  ...basicOptions,\r\n  tooltips: {\r\n    backgroundColor: '#f5f5f5',\r\n    titleFontColor: '#333',\r\n    bodyFontColor: '#666',\r\n    bodySpacing: 4,\r\n    xPadding: 12,\r\n    mode: 'nearest',\r\n    intersect: 0,\r\n    position: 'nearest'\r\n  },\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          drawBorder: false,\r\n          color: 'rgba(29,140,248,0.1)',\r\n          zeroLineColor: 'transparent'\r\n        },\r\n        ticks: {\r\n          suggestedMin: 60,\r\n          suggestedMax: 120,\r\n          padding: 20,\r\n          fontColor: '#9e9e9e'\r\n        }\r\n      }\r\n    ],\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          drawBorder: false,\r\n          color: 'rgba(29,140,248,0.1)',\r\n          zeroLineColor: 'transparent'\r\n        },\r\n        ticks: {\r\n          padding: 20,\r\n          fontColor: '#9e9e9e'\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n"]}]}