{"remainingRequest":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\src\\views\\Play.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\src\\views\\Play.vue","mtime":1606920603981},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport BaseComponent from \"../mixins/BaseComponent.js\";\nimport DateUtils from \"../mixins/DateUtils.js\";\nimport PlayService from \"../services/PlayService.js\";\nexport default {\n  name: \"play\",\n  mixins: [BaseComponent, DateUtils],\n  data: function data() {\n    return {\n      listSeasons: [],\n      listAirDates: [{}],\n      listRounds: [{\n        name: \"Jeopardy!\"\n      }, {\n        name: \"Double Jeopardy!\"\n      }, {\n        name: \"Final Jeopardy!\"\n      }],\n      seasonSearch: null,\n      airDateSearch: null,\n      roundSearch: null,\n      question: \"\",\n      data: [],\n      isClickStart: false,\n      isChooseQuestion: true,\n      isDisplayOverride: false,\n      times: 3,\n      answer: \"\",\n      value: 0,\n      score: 0,\n      id: null,\n      trueAnswer: \"\"\n    };\n  },\n  created: function created() {\n    this.getListSeasons();\n  },\n  methods: {\n    getListSeasons: function getListSeasons() {\n      for (var i = 37; i >= 1; i--) {\n        this.listSeasons.push({\n          id: i,\n          name: \"Season \" + i\n        });\n      }\n    },\n    getListAirDates: function getListAirDates() {\n      var _this = this;\n\n      this.listAirDates = [{}];\n      this.airDateSearch = null;\n      var params = {\n        season: this.seasonSearch\n      };\n      PlayService.getListAirDates(params).then(function (response) {\n        if (response) {\n          _this.listAirDates = [];\n\n          for (var i = 0; i < response.data.list.length; i++) {\n            _this.listAirDates.push({\n              id: response.data.list[i].showNum,\n              name: _this.convertDateDbToDateClient(response.data.list[i].airDate)\n            });\n          }\n        }\n      }).catch(function () {\n        _this.listAirDates = [{}];\n      });\n    },\n    submit: function submit() {\n      var _this2 = this;\n\n      if (this.isChooseQuestion) {\n        this.$notify({\n          type: \"danger\",\n          message: \"Please choose the question\"\n        });\n        return;\n      }\n\n      var body = {\n        id: this.id,\n        answer: this.answer\n      };\n      PlayService.checkAnswer(body).then(function (response) {\n        if (response) {\n          if (response.data.status == 1) {\n            _this2.$notify({\n              type: \"success\",\n              message: response.data.message\n            });\n\n            _this2.score += _this2.value;\n            _this2.isDisplayOverride = false;\n          } else {\n            _this2.$notify({\n              type: \"danger\",\n              message: response.data.message\n            });\n\n            _this2.score -= _this2.value;\n            _this2.isDisplayOverride = true;\n          }\n\n          _this2.trueAnswer = response.data.answer;\n          _this2.isChooseQuestion = true;\n        }\n      }).catch(function () {\n        _this2.listAirDates = [{}];\n      });\n    },\n    pass: function pass() {\n      if (this.isChooseQuestion) {\n        this.$notify({\n          type: \"danger\",\n          message: \"Please choose the question\"\n        });\n        return;\n      }\n\n      this.isChooseQuestion = true;\n      this.score -= this.value;\n    },\n    override: function override() {\n      this.score += this.value * 2;\n      this.times--;\n      this.isDisplayOverride = false;\n    },\n    start: function start() {\n      var _this3 = this;\n\n      if (this.seasonSearch == null || this.airDateSearch == null || this.roundSearch == null) {\n        this.$notify({\n          type: \"danger\",\n          message: \"Please fill the information\"\n        });\n        return;\n      }\n\n      var params = {\n        showNum: this.airDateSearch,\n        round: this.roundSearch\n      };\n      PlayService.getQuestions(params).then(function (response) {\n        var result = response.data.list;\n        _this3.data = _this3.groupBy(result, function (item) {\n          return [item.category];\n        });\n        _this3.isClickStart = true;\n        _this3.question = null;\n        _this3.value = null;\n        _this3.isChooseQuestion = true;\n        _this3.isDisplayOverride = false;\n        _this3.times = 3;\n        _this3.answer = \"\";\n        _this3.value = 0;\n        _this3.score = 0;\n        _this3.id = null;\n      }).catch(function () {});\n    },\n    groupBy: function groupBy(array, f) {\n      var fields = {};\n      array.forEach(function (o) {\n        o.isClick = false;\n        var field = JSON.stringify(f(o));\n        fields[field] = fields[field] || [];\n        fields[field].push(o);\n      });\n      return Object.keys(fields).map(function (field) {\n        var json = JSON.parse(field);\n        var catName = json[0];\n        return {\n          catName: catName,\n          questions: fields[field]\n        };\n      });\n    },\n    clickQuestion: function clickQuestion(item) {\n      if (item.isClick) return;\n\n      if (!this.isChooseQuestion) {\n        this.$notify({\n          type: \"danger\",\n          message: \"Please submit or pass the question\"\n        });\n        return;\n      }\n\n      this.answer = \"\";\n      this.isDisplayOverride = false;\n      this.isChooseQuestion = false;\n      item.isClick = true;\n      this.question = item.question;\n      this.value = item.value;\n      this.id = item.id;\n    }\n  }\n};",{"version":3,"sources":["Play.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div\r\n    class=\"container-fluid\"\r\n    style=\"background-color: rgb(0, 31, 146); height: 94vh; width: 100%\"\r\n  >\r\n    <div class=\"col-12 pt-4\" style=\"text-align: center\">\r\n      <div v-if=\"!isClickStart\">\r\n        <h2 class=\"color-white\">Let's Play Jeopardy!</h2>\r\n        <h4 class=\"color-white\">\r\n          Choose a Season, Airdate, and Round to Start\r\n        </h4>\r\n      </div>\r\n      <div class=\"row mt-4\">\r\n        <div class=\"col-3\"></div>\r\n        <div class=\"col-6 row\">\r\n          <div class=\"col-3\">\r\n            <diV class=\"form-group-row\">\r\n              <el-select\r\n                class=\"select-danger select-custom font-italic col-sm-12 rounded-0\"\r\n                v-model=\"seasonSearch\"\r\n                :placeholder=\"'Season'\"\r\n                :clearable=\"true\"\r\n                :filterable=\"true\"\r\n                @change=\"getListAirDates()\"\r\n              >\r\n                <el-option\r\n                  v-for=\"item in listSeasons\"\r\n                  class=\"select-danger\"\r\n                  :value=\"item.id\"\r\n                  :label=\"item.name\"\r\n                  :key=\"item.id\"\r\n                ></el-option>\r\n              </el-select>\r\n            </diV>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <diV class=\"form-group-row\">\r\n              <el-select\r\n                class=\"select-danger select-custom font-italic col-sm-12 rounded-0\"\r\n                v-model=\"airDateSearch\"\r\n                :placeholder=\"'Airdate'\"\r\n                :clearable=\"true\"\r\n                :filterable=\"true\"\r\n              >\r\n                <el-option\r\n                  v-for=\"item in listAirDates\"\r\n                  class=\"select-danger\"\r\n                  :value=\"item.id\"\r\n                  :label=\"item.name\"\r\n                  :key=\"item.id\"\r\n                ></el-option>\r\n              </el-select>\r\n            </diV>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <diV class=\"form-group-row\">\r\n              <el-select\r\n                class=\"select-danger select-custom font-italic col-sm-12 rounded-0\"\r\n                v-model=\"roundSearch\"\r\n                :placeholder=\"'Round'\"\r\n                :clearable=\"true\"\r\n                :filterable=\"true\"\r\n              >\r\n                <el-option\r\n                  v-for=\"item in listRounds\"\r\n                  class=\"select-danger\"\r\n                  :value=\"item.name\"\r\n                  :label=\"item.name\"\r\n                  :key=\"item.name\"\r\n                ></el-option>\r\n              </el-select>\r\n            </diV>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <base-button\r\n              type=\"primary\"\r\n              style=\"\r\n              width: 100px;\r\n              background-color: #eb7a04 !important;\r\n              color: black !important;\r\n            \"\r\n              @click=\"start()\"\r\n              class=\"border-0 btn-custom color-white\"\r\n              >Let's Go!</base-button\r\n            >\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <br />\r\n    <div class=\"row ml-0 mr-0\" v-if=\"isClickStart\">\r\n      <div class=\"col-2\"></div>\r\n      <div class=\"col-8\" style=\"background-color: black; height: 435px\">\r\n        <div class=\"row\">\r\n          <div\r\n            class=\"col-2 p-2 mr-0 ml-0\"\r\n            v-for=\"(item, index) in data\"\r\n            :key=\"index\"\r\n          >\r\n            <div class=\"col-12\">\r\n              <div class=\"box\">{{ item.catName }}</div>\r\n            </div>\r\n            <br />\r\n            <div v-for=\"(question, index2) in item.questions\" :key=\"index2\">\r\n              <div\r\n                class=\"col-12\"\r\n                @click=\"clickQuestion(question)\"\r\n                :class=\"{ disable: question.isClick }\"\r\n              >\r\n                <div class=\"box-value\">$ {{ question.value }}</div>\r\n                <br />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <br />\r\n    <div style=\"text-align: center\" v-if=\"isClickStart\">\r\n      <h2 class=\"pt-3 pl-3 color-white\" style=\"height: 80px\">\r\n        {{ question }}\r\n      </h2>\r\n      <br />\r\n\r\n      <div class=\"color-white ml-2\" v-if=\"isDisplayOverride && times > 0\">\r\n        Your answer, <span class=\"font-weight-bold\">{{ answer }}</span> was\r\n        incorrect. The correct answer was:\r\n        <span class=\"font-weight-bold\">{{ trueAnswer }}</span\r\n        >. If your answer is actually correct, please click the\r\n        <span class=\"font-weight-bold\">OVERRIDE</span> button below. You lost\r\n        <span class=\"font-weight-bold\">{{ value }}</span> points. Pick a new\r\n        question when you're ready.\r\n      </div>\r\n      <base-button\r\n        v-if=\"isDisplayOverride && times > 0\"\r\n        type=\"primary\"\r\n        style=\"\r\n          min-width: 120px;\r\n          background-color: #eb7a04 !important;\r\n          color: black !important;\r\n        \"\r\n        @click=\"override()\"\r\n        class=\"border-0 btn-custom color-white ml-2\"\r\n        >Override ({{ times }})</base-button\r\n      >\r\n      <br />\r\n      <div class=\"col-12 row\">\r\n        <div class=\"col-md-5\"></div>\r\n        <div class=\"col-md-2 text-center\">\r\n          <h3 class=\"color-white\">Score: {{ score }}</h3>\r\n        </div>\r\n        <div class=\"col-md-5\"></div>\r\n        <div class=\"col-md-5\"></div>\r\n        <div class=\"col-md-2\">\r\n          <base-input\r\n            class=\"input-group-alternative\"\r\n            placeholder=\"Enter your answer\"\r\n            v-model=\"answer\"\r\n          ></base-input>\r\n          <br />\r\n        </div>\r\n        <div class=\"col-md-5\"></div>\r\n        <div class=\"col-md-4\"></div>\r\n        <div class=\"col-md-4 text-center\">\r\n          <base-button\r\n            type=\"primary\"\r\n            style=\"\r\n              min-width: 120px;\r\n              background-color: #eb7a04 !important;\r\n              color: black !important;\r\n            \"\r\n            @click=\"submit()\"\r\n            class=\"border-0 btn-custom color-white\"\r\n            >Submit</base-button\r\n          >\r\n          <base-button\r\n            type=\"primary\"\r\n            style=\"\r\n              min-width: 120px;\r\n              background-color: #eb7a04 !important;\r\n              color: black !important;\r\n            \"\r\n            @click=\"pass()\"\r\n            class=\"border-0 btn-custom color-white\"\r\n            >Pass</base-button\r\n          >\r\n        </div>\r\n        <div class=\"col-md-4\"></div>\r\n      </div>\r\n    </div>\r\n    <br />\r\n  </div>\r\n</template>\r\n<script>\r\nimport BaseComponent from \"../mixins/BaseComponent.js\";\r\nimport DateUtils from \"../mixins/DateUtils.js\";\r\nimport PlayService from \"../services/PlayService.js\";\r\n\r\nexport default {\r\n  name: \"play\",\r\n  mixins: [BaseComponent, DateUtils],\r\n  data() {\r\n    return {\r\n      listSeasons: [],\r\n      listAirDates: [{}],\r\n      listRounds: [\r\n        { name: \"Jeopardy!\" },\r\n        { name: \"Double Jeopardy!\" },\r\n        { name: \"Final Jeopardy!\" },\r\n      ],\r\n      seasonSearch: null,\r\n      airDateSearch: null,\r\n      roundSearch: null,\r\n      question: \"\",\r\n      data: [],\r\n      isClickStart: false,\r\n      isChooseQuestion: true,\r\n      isDisplayOverride: false,\r\n      times: 3,\r\n      answer: \"\",\r\n      value: 0,\r\n      score: 0,\r\n      id: null,\r\n      trueAnswer: \"\",\r\n    };\r\n  },\r\n  created() {\r\n    this.getListSeasons();\r\n  },\r\n  methods: {\r\n    getListSeasons() {\r\n      for (let i = 37; i >= 1; i--) {\r\n        this.listSeasons.push({\r\n          id: i,\r\n          name: \"Season \" + i,\r\n        });\r\n      }\r\n    },\r\n\r\n    getListAirDates() {\r\n      this.listAirDates = [{}];\r\n      this.airDateSearch = null;\r\n\r\n      let params = {\r\n        season: this.seasonSearch,\r\n      };\r\n\r\n      PlayService.getListAirDates(params)\r\n        .then((response) => {\r\n          if (response) {\r\n            this.listAirDates = [];\r\n            for (let i = 0; i < response.data.list.length; i++) {\r\n              this.listAirDates.push({\r\n                id: response.data.list[i].showNum,\r\n                name: this.convertDateDbToDateClient(\r\n                  response.data.list[i].airDate\r\n                ),\r\n              });\r\n            }\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.listAirDates = [{}];\r\n        });\r\n    },\r\n\r\n    submit() {\r\n      if (this.isChooseQuestion) {\r\n        this.$notify({\r\n          type: \"danger\",\r\n          message: \"Please choose the question\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      let body = {\r\n        id: this.id,\r\n        answer: this.answer,\r\n      };\r\n\r\n      PlayService.checkAnswer(body)\r\n        .then((response) => {\r\n          if (response) {\r\n            if (response.data.status == 1) {\r\n              this.$notify({\r\n                type: \"success\",\r\n                message: response.data.message,\r\n              });\r\n              this.score += this.value;\r\n              this.isDisplayOverride = false;\r\n            } else {\r\n              this.$notify({\r\n                type: \"danger\",\r\n                message: response.data.message,\r\n              });\r\n              this.score -= this.value;\r\n              this.isDisplayOverride = true;\r\n            }\r\n            this.trueAnswer = response.data.answer;\r\n            this.isChooseQuestion = true;\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.listAirDates = [{}];\r\n        });\r\n    },\r\n\r\n    pass() {\r\n      if (this.isChooseQuestion) {\r\n        this.$notify({\r\n          type: \"danger\",\r\n          message: \"Please choose the question\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      this.isChooseQuestion = true;\r\n      this.score -= this.value;\r\n    },\r\n\r\n    override() {\r\n      this.score += this.value * 2;\r\n      this.times--;\r\n      this.isDisplayOverride = false;\r\n    },\r\n\r\n    start() {\r\n      if (\r\n        this.seasonSearch == null ||\r\n        this.airDateSearch == null ||\r\n        this.roundSearch == null\r\n      ) {\r\n        this.$notify({\r\n          type: \"danger\",\r\n          message: \"Please fill the information\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      let params = {\r\n        showNum: this.airDateSearch,\r\n        round: this.roundSearch,\r\n      };\r\n\r\n      PlayService.getQuestions(params)\r\n        .then((response) => {\r\n          var result = response.data.list;\r\n          this.data = this.groupBy(result, function(item) {\r\n            return [item.category];\r\n          });\r\n\r\n          this.isClickStart = true;\r\n          this.question = null;\r\n          this.value = null;\r\n          this.isChooseQuestion = true;\r\n          this.isDisplayOverride = false;\r\n          this.times = 3;\r\n          this.answer = \"\";\r\n          this.value = 0;\r\n          this.score = 0;\r\n          this.id = null;\r\n        })\r\n        .catch(() => {});\r\n    },\r\n\r\n    groupBy(array, f) {\r\n      var fields = {};\r\n      array.forEach(function(o) {\r\n        o.isClick = false;\r\n        var field = JSON.stringify(f(o));\r\n        fields[field] = fields[field] || [];\r\n        fields[field].push(o);\r\n      });\r\n\r\n      return Object.keys(fields).map(function(field) {\r\n        var json = JSON.parse(field);\r\n        var catName = json[0];\r\n\r\n        return {\r\n          catName: catName,\r\n          questions: fields[field],\r\n        };\r\n      });\r\n    },\r\n\r\n    clickQuestion(item) {\r\n      if (item.isClick) return;\r\n      if (!this.isChooseQuestion) {\r\n        this.$notify({\r\n          type: \"danger\",\r\n          message: \"Please submit or pass the question\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      this.answer = \"\";\r\n      this.isDisplayOverride = false;\r\n      this.isChooseQuestion = false;\r\n      item.isClick = true;\r\n      this.question = item.question;\r\n      this.value = item.value;\r\n      this.id = item.id;\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.box {\r\n  text-align: center;\r\n  font-size: 15px;\r\n  height: 70px;\r\n  width: 100%;\r\n  color: white;\r\n  background-color: rgb(0, 31, 146);\r\n  border: 1px solid white;\r\n  padding: 2px;\r\n}\r\n\r\n.box-value {\r\n  cursor: pointer;\r\n  align-content: middle;\r\n  text-align: center;\r\n  font-size: 33px;\r\n  height: 50px;\r\n  width: 100%;\r\n  color: yellow;\r\n  background-color: rgb(0, 31, 146);\r\n  border: 1px solid white;\r\n  padding: 2px;\r\n}\r\n\r\n.disable {\r\n  opacity: 0.3;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views"}]}