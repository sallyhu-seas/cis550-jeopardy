{"remainingRequest":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\src\\components\\ButtonHeader.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\src\\components\\ButtonHeader.vue","mtime":1606920603943},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"C:/Users/sally/OneDrive/Documents/GitHub/cis550-jeopardy/client_vF/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"button-header\",\n  props: {\n    tag: {\n      type: String,\n      default: \"button\",\n      description: \"Button tag (default -> button)\"\n    },\n    type: {\n      type: String,\n      default: \"default\",\n      description: \"Button type (e,g primary, danger etc)\"\n    },\n    size: {\n      type: String,\n      default: \"\",\n      description: \"Button size lg|sm\"\n    },\n    textColor: {\n      type: String,\n      default: \"\",\n      description: \"Button text color (e.g primary, danger etc)\"\n    },\n    nativeType: {\n      type: String,\n      default: \"button\",\n      description: \"Button native type (e.g submit,button etc)\"\n    },\n    icon: {\n      default: \"\",\n      description: \"Button icon\"\n    },\n    text: {\n      type: String,\n      default: \"\",\n      description: \"Button text in case not provided via default slot\"\n    },\n    outline: {\n      type: Boolean,\n      default: false,\n      description: \"Whether button style is outline\"\n    },\n    rounded: {\n      type: Boolean,\n      default: false,\n      description: \"Whether button style is rounded\"\n    },\n    iconOnly: {\n      type: Boolean,\n      default: false,\n      description: \"Whether button contains only an icon\"\n    },\n    block: {\n      type: Boolean,\n      default: false,\n      description: \"Whether button is of block type\"\n    }\n  },\n  computed: {\n    classes: function classes() {\n      var btnClasses = [{\n        \"btn-block\": this.block\n      }, {\n        \"rounded-circle\": this.rounded\n      }, {\n        \"btn-icon-only\": this.iconOnly\n      }, _defineProperty({}, \"text-\".concat(this.textColor), this.textColor), {\n        \"btn-icon\": this.icon || this.$slots.icon\n      }, this.type && !this.outline ? \"btn-\".concat(this.type) : \"\", this.outline ? \"btn-outline-\".concat(this.type) : \"\"];\n\n      if (this.size) {\n        btnClasses.push(\"btn-\".concat(this.size));\n      }\n\n      return btnClasses;\n    }\n  },\n  methods: {\n    handleClick: function handleClick(evt) {\n      this.$emit(\"click\", evt);\n    }\n  }\n};",{"version":3,"sources":["ButtonHeader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,QAFA;AAGA,MAAA,WAAA,EAAA;AAHA,KADA;AAMA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,SAFA;AAGA,MAAA,WAAA,EAAA;AAHA,KANA;AAWA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,WAAA,EAAA;AAHA,KAXA;AAgBA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,WAAA,EAAA;AAHA,KAhBA;AAqBA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,QAFA;AAGA,MAAA,WAAA,EAAA;AAHA,KArBA;AA0BA,IAAA,IAAA,EAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,WAAA,EAAA;AAFA,KA1BA;AA8BA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,WAAA,EAAA;AAHA,KA9BA;AAmCA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA,KAFA;AAGA,MAAA,WAAA,EAAA;AAHA,KAnCA;AAwCA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA,KAFA;AAGA,MAAA,WAAA,EAAA;AAHA,KAxCA;AA6CA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA,KAFA;AAGA,MAAA,WAAA,EAAA;AAHA,KA7CA;AAkDA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA,KAFA;AAGA,MAAA,WAAA,EAAA;AAHA;AAlDA,GAFA;AA0DA,EAAA,QAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,UAAA,UAAA,GAAA,CACA;AAAA,qBAAA,KAAA;AAAA,OADA,EAEA;AAAA,0BAAA,KAAA;AAAA,OAFA,EAGA;AAAA,yBAAA,KAAA;AAAA,OAHA,qCAIA,KAAA,SAJA,GAIA,KAAA,SAJA,GAKA;AAAA,oBAAA,KAAA,IAAA,IAAA,KAAA,MAAA,CAAA;AAAA,OALA,EAMA,KAAA,IAAA,IAAA,CAAA,KAAA,OAAA,iBAAA,KAAA,IAAA,IAAA,EANA,EAOA,KAAA,OAAA,yBAAA,KAAA,IAAA,IAAA,EAPA,CAAA;;AASA,UAAA,KAAA,IAAA,EAAA;AACA,QAAA,UAAA,CAAA,IAAA,eAAA,KAAA,IAAA;AACA;;AACA,aAAA,UAAA;AACA;AAfA,GA1DA;AA2EA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,GADA,EACA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,GAAA;AACA;AAHA;AA3EA,CAAA","sourcesContent":["<template>\r\n    <component :is=\"tag\"\r\n               :type=\"tag === 'button' ? nativeType: ''\"\r\n               @click=\"handleClick\"\r\n               class=\"btn-header-custom\"\r\n               :class=\"classes\"\r\n               v-b-tooltip.hover.bottom\r\n               >\r\n    <span class=\"btn-header-icon-custom\" v-if=\"$slots.icon || icon && $slots.default\">\r\n      <slot name=\"icon\">\r\n        <i :class=\"icon\"></i>\r\n      </slot>\r\n    </span>\r\n        <i v-if=\"!$slots.default\" :class=\"icon\"></i>\r\n        <slot v-if=\"!$slots.icon && !icon\"></slot>\r\n    </component>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"button-header\",\r\n  props: {\r\n    tag: {\r\n      type: String,\r\n      default: \"button\",\r\n      description: \"Button tag (default -> button)\"\r\n    },\r\n    type: {\r\n      type: String,\r\n      default: \"default\",\r\n      description: \"Button type (e,g primary, danger etc)\"\r\n    },\r\n    size: {\r\n      type: String,\r\n      default: \"\",\r\n      description: \"Button size lg|sm\"\r\n    },\r\n    textColor: {\r\n      type: String,\r\n      default: \"\",\r\n      description: \"Button text color (e.g primary, danger etc)\"\r\n    },\r\n    nativeType: {\r\n      type: String,\r\n      default: \"button\",\r\n      description: \"Button native type (e.g submit,button etc)\"\r\n    },\r\n    icon: {\r\n      default: \"\",\r\n      description: \"Button icon\"\r\n    },\r\n    text: {\r\n      type: String,\r\n      default: \"\",\r\n      description: \"Button text in case not provided via default slot\"\r\n    },\r\n    outline: {\r\n      type: Boolean,\r\n      default: false,\r\n      description: \"Whether button style is outline\"\r\n    },\r\n    rounded: {\r\n      type: Boolean,\r\n      default: false,\r\n      description: \"Whether button style is rounded\"\r\n    },\r\n    iconOnly: {\r\n      type: Boolean,\r\n      default: false,\r\n      description: \"Whether button contains only an icon\"\r\n    },\r\n    block: {\r\n      type: Boolean,\r\n      default: false,\r\n      description: \"Whether button is of block type\"\r\n    }\r\n  },\r\n  computed: {\r\n    classes() {\r\n      let btnClasses = [\r\n        { \"btn-block\": this.block },\r\n        { \"rounded-circle\": this.rounded },\r\n        { \"btn-icon-only\": this.iconOnly },\r\n        { [`text-${this.textColor}`]: this.textColor },\r\n        { \"btn-icon\": this.icon || this.$slots.icon },\r\n        this.type && !this.outline ? `btn-${this.type}` : \"\",\r\n        this.outline ? `btn-outline-${this.type}` : \"\"\r\n      ];\r\n      if (this.size) {\r\n        btnClasses.push(`btn-${this.size}`);\r\n      }\r\n      return btnClasses;\r\n    }\r\n  },\r\n  methods: {\r\n    handleClick(evt) {\r\n      this.$emit(\"click\", evt);\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style>\r\n</style>\r\n"],"sourceRoot":"src/components"}]}