{"remainingRequest":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\src\\components\\BaseCheckbox.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\src\\components\\BaseCheckbox.vue","mtime":1606920603931},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { randomString } from \"./stringUtils\";\r\n\r\nexport default {\r\n  name: \"base-checkbox\",\r\n  model: {\r\n    prop: \"checked\",\r\n  },\r\n  props: {\r\n    value: {},\r\n    checked: {},\r\n    disabled: {\r\n      type: Boolean,\r\n      description: \"Whether checkbox is disabled\",\r\n    },\r\n    inline: {\r\n      type: Boolean,\r\n      description: \"Whether checkbox is inline\",\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      cbId: \"\",\r\n      touched: false,\r\n    };\r\n  },\r\n  computed: {\r\n    model: {\r\n      get() {\r\n        return this.checked;\r\n      },\r\n      set(check) {\r\n        if (!this.touched) {\r\n          this.touched = true;\r\n        }\r\n        this.$emit(\"input\", check);\r\n      },\r\n    },\r\n  },\r\n  mounted() {\r\n    this.cbId = randomString();\r\n  },\r\n};\r\n",{"version":3,"sources":["BaseCheckbox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BaseCheckbox.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"wapper-checkbox-custom\">\r\n    <div\r\n      class=\"custom-control custom-checkbox\"\r\n      :class=\"{'disabled': disabled, 'form-check-inline': inline}\"\r\n    >\r\n      <input\r\n        :id=\"cbId\"\r\n        class=\"custom-control-input\"\r\n        type=\"checkbox\"\r\n        :disabled=\"disabled\"\r\n        v-model=\"model\"\r\n      />\r\n      <label :for=\"cbId\" class=\"custom-control-label\">\r\n        <slot>\r\n          <span v-if=\"inline\">&nbsp;</span>\r\n        </slot>\r\n      </label>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { randomString } from \"./stringUtils\";\r\n\r\nexport default {\r\n  name: \"base-checkbox\",\r\n  model: {\r\n    prop: \"checked\",\r\n  },\r\n  props: {\r\n    value: {},\r\n    checked: {},\r\n    disabled: {\r\n      type: Boolean,\r\n      description: \"Whether checkbox is disabled\",\r\n    },\r\n    inline: {\r\n      type: Boolean,\r\n      description: \"Whether checkbox is inline\",\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      cbId: \"\",\r\n      touched: false,\r\n    };\r\n  },\r\n  computed: {\r\n    model: {\r\n      get() {\r\n        return this.checked;\r\n      },\r\n      set(check) {\r\n        if (!this.touched) {\r\n          this.touched = true;\r\n        }\r\n        this.$emit(\"input\", check);\r\n      },\r\n    },\r\n  },\r\n  mounted() {\r\n    this.cbId = randomString();\r\n  },\r\n};\r\n</script>\r\n"]}]}