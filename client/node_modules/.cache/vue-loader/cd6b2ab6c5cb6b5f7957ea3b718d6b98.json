{"remainingRequest":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\src\\views\\Database.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\src\\views\\Database.vue","mtime":1606936331874},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport BaseComponent from \"../mixins/BaseComponent.js\";\r\nimport DateUtils from \"../mixins/DateUtils.js\";\r\nimport DatabaseService from \"../services/DatabaseService.js\";\r\n\r\nexport default {\r\n  name: \"contestants\",\r\n  mixins: [BaseComponent, DateUtils],\r\n  data() {\r\n    return {\r\n      //Header\r\n      headers: [\r\n        {\r\n          text: \"No\",\r\n        },\r\n        {\r\n          text: \"Name\",\r\n        },\r\n        {\r\n          text: \"Occupation\",\r\n        },\r\n        {\r\n          text: \"State\",\r\n        },\r\n        {\r\n          text: \"Season\",\r\n        },\r\n        {\r\n          text: \"Show number\",\r\n        },\r\n        {\r\n          text: \"Airdate\",\r\n        },\r\n        {\r\n          text: \"Status\",\r\n        },\r\n      ],\r\n\r\n      // List\r\n      listContestants: [],\r\n      listStates: [\r\n        {\r\n          name: \"Alabama\",\r\n          abbreviation: \"AL\",\r\n        },\r\n        {\r\n          name: \"Alaska\",\r\n          abbreviation: \"AK\",\r\n        },\r\n        {\r\n          name: \"American Samoa\",\r\n          abbreviation: \"AS\",\r\n        },\r\n        {\r\n          name: \"Arizona\",\r\n          abbreviation: \"AZ\",\r\n        },\r\n        {\r\n          name: \"Arkansas\",\r\n          abbreviation: \"AR\",\r\n        },\r\n        {\r\n          name: \"California\",\r\n          abbreviation: \"CA\",\r\n        },\r\n        {\r\n          name: \"Colorado\",\r\n          abbreviation: \"CO\",\r\n        },\r\n        {\r\n          name: \"Connecticut\",\r\n          abbreviation: \"CT\",\r\n        },\r\n        {\r\n          name: \"Delaware\",\r\n          abbreviation: \"DE\",\r\n        },\r\n        {\r\n          name: \"District Of Columbia\",\r\n          abbreviation: \"DC\",\r\n        },\r\n        {\r\n          name: \"Federated States Of Micronesia\",\r\n          abbreviation: \"FM\",\r\n        },\r\n        {\r\n          name: \"Florida\",\r\n          abbreviation: \"FL\",\r\n        },\r\n        {\r\n          name: \"Georgia\",\r\n          abbreviation: \"GA\",\r\n        },\r\n        {\r\n          name: \"Guam\",\r\n          abbreviation: \"GU\",\r\n        },\r\n        {\r\n          name: \"Hawaii\",\r\n          abbreviation: \"HI\",\r\n        },\r\n        {\r\n          name: \"Idaho\",\r\n          abbreviation: \"ID\",\r\n        },\r\n        {\r\n          name: \"Illinois\",\r\n          abbreviation: \"IL\",\r\n        },\r\n        {\r\n          name: \"Indiana\",\r\n          abbreviation: \"IN\",\r\n        },\r\n        {\r\n          name: \"Iowa\",\r\n          abbreviation: \"IA\",\r\n        },\r\n        {\r\n          name: \"Kansas\",\r\n          abbreviation: \"KS\",\r\n        },\r\n        {\r\n          name: \"Kentucky\",\r\n          abbreviation: \"KY\",\r\n        },\r\n        {\r\n          name: \"Louisiana\",\r\n          abbreviation: \"LA\",\r\n        },\r\n        {\r\n          name: \"Maine\",\r\n          abbreviation: \"ME\",\r\n        },\r\n        {\r\n          name: \"Marshall Islands\",\r\n          abbreviation: \"MH\",\r\n        },\r\n        {\r\n          name: \"Maryland\",\r\n          abbreviation: \"MD\",\r\n        },\r\n        {\r\n          name: \"Massachusetts\",\r\n          abbreviation: \"MA\",\r\n        },\r\n        {\r\n          name: \"Michigan\",\r\n          abbreviation: \"MI\",\r\n        },\r\n        {\r\n          name: \"Minnesota\",\r\n          abbreviation: \"MN\",\r\n        },\r\n        {\r\n          name: \"Mississippi\",\r\n          abbreviation: \"MS\",\r\n        },\r\n        {\r\n          name: \"Missouri\",\r\n          abbreviation: \"MO\",\r\n        },\r\n        {\r\n          name: \"Montana\",\r\n          abbreviation: \"MT\",\r\n        },\r\n        {\r\n          name: \"Nebraska\",\r\n          abbreviation: \"NE\",\r\n        },\r\n        {\r\n          name: \"Nevada\",\r\n          abbreviation: \"NV\",\r\n        },\r\n        {\r\n          name: \"New Hampshire\",\r\n          abbreviation: \"NH\",\r\n        },\r\n        {\r\n          name: \"New Jersey\",\r\n          abbreviation: \"NJ\",\r\n        },\r\n        {\r\n          name: \"New Mexico\",\r\n          abbreviation: \"NM\",\r\n        },\r\n        {\r\n          name: \"New York\",\r\n          abbreviation: \"NY\",\r\n        },\r\n        {\r\n          name: \"North Carolina\",\r\n          abbreviation: \"NC\",\r\n        },\r\n        {\r\n          name: \"North Dakota\",\r\n          abbreviation: \"ND\",\r\n        },\r\n        {\r\n          name: \"Northern Mariana Islands\",\r\n          abbreviation: \"MP\",\r\n        },\r\n        {\r\n          name: \"Ohio\",\r\n          abbreviation: \"OH\",\r\n        },\r\n        {\r\n          name: \"Oklahoma\",\r\n          abbreviation: \"OK\",\r\n        },\r\n        {\r\n          name: \"Oregon\",\r\n          abbreviation: \"OR\",\r\n        },\r\n        {\r\n          name: \"Palau\",\r\n          abbreviation: \"PW\",\r\n        },\r\n        {\r\n          name: \"Pennsylvania\",\r\n          abbreviation: \"PA\",\r\n        },\r\n        {\r\n          name: \"Puerto Rico\",\r\n          abbreviation: \"PR\",\r\n        },\r\n        {\r\n          name: \"Rhode Island\",\r\n          abbreviation: \"RI\",\r\n        },\r\n        {\r\n          name: \"South Carolina\",\r\n          abbreviation: \"SC\",\r\n        },\r\n        {\r\n          name: \"South Dakota\",\r\n          abbreviation: \"SD\",\r\n        },\r\n        {\r\n          name: \"Tennessee\",\r\n          abbreviation: \"TN\",\r\n        },\r\n        {\r\n          name: \"Texas\",\r\n          abbreviation: \"TX\",\r\n        },\r\n        {\r\n          name: \"Utah\",\r\n          abbreviation: \"UT\",\r\n        },\r\n        {\r\n          name: \"Vermont\",\r\n          abbreviation: \"VT\",\r\n        },\r\n        {\r\n          name: \"Virgin Islands\",\r\n          abbreviation: \"VI\",\r\n        },\r\n        {\r\n          name: \"Virginia\",\r\n          abbreviation: \"VA\",\r\n        },\r\n        {\r\n          name: \"Washington\",\r\n          abbreviation: \"WA\",\r\n        },\r\n        {\r\n          name: \"West Virginia\",\r\n          abbreviation: \"WV\",\r\n        },\r\n        {\r\n          name: \"Wisconsin\",\r\n          abbreviation: \"WI\",\r\n        },\r\n        {\r\n          name: \"Wyoming\",\r\n          abbreviation: \"WY\",\r\n        },\r\n      ],\r\n      listSeasons: [],\r\n      listAirDates: [{}],\r\n      listIsWinners: [\r\n        {\r\n          id: 0,\r\n          name: \"LOSE\",\r\n        },\r\n        {\r\n          id: 1,\r\n          name: \"WIN\",\r\n        },\r\n      ],\r\n\r\n      stateSearch: null,\r\n      seasonSearch: null,\r\n      airDateSearch: null,\r\n      isWinnerSearch: null,\r\n    };\r\n  },\r\n  created() {\r\n    this.getList();\r\n    this.getListSeasons();\r\n  },\r\n\r\n  methods: {\r\n    // -------------------------------------- VIEW ------------------------------------------//\r\n    commonSearch() {\r\n      this.currentPage = 1;\r\n      this.getList();\r\n    },\r\n\r\n    getList() {\r\n      let params = {\r\n        state: this.stateSearch,\r\n        season: this.seasonSearch,\r\n        airDate: this.airDateSearch,\r\n        isWinner: this.isWinnerSearch,\r\n        skip: (this.currentPage - 1) * this.perPage,\r\n        take: this.perPage,\r\n      };\r\n\r\n      this.showLoading();\r\n      DatabaseService.getList(params)\r\n        .then((response) => {\r\n          if (response) {\r\n            this.listContestants = response.data.list;\r\n            this.totalRecords = response.data.totalRecords;\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.listContestants = [];\r\n          this.$notify({\r\n            type: \"danger\",\r\n            message: this.$i18n.t(\"common.error_connection\"),\r\n          });\r\n        })\r\n        .finally(() => {\r\n          this.hideLoading();\r\n        });\r\n    },\r\n\r\n    getListSeasons() {\r\n      for (let i = 37; i >= 1; i--) {\r\n        this.listSeasons.push({\r\n          id: i,\r\n          name: \"Season \" + i,\r\n        });\r\n      }\r\n    },\r\n\r\n    getListAirDates() {\r\n      this.listAirDates = [{}];\r\n      this.airDateSearch = null;\r\n\r\n      let params = {\r\n        season: this.seasonSearch,\r\n      };\r\n\r\n      DatabaseService.getListAirDates(params)\r\n        .then((response) => {\r\n          if (response) {\r\n            this.listAirDates = [];\r\n            for (let i = 0; i < response.data.list.length; i++) {\r\n              this.listAirDates.push({\r\n                id: this.convertDateDbToDateClient(\r\n                  response.data.list[i].airDate\r\n                ),\r\n              });\r\n            }\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.listAirDates = [{}];\r\n        });\r\n    },\r\n\r\n    removeFilter() {\r\n      this.stateSearch = null;\r\n      this.seasonSearch = null;\r\n      this.airDateSearch = null;\r\n      this.isWinnerSearch = null;\r\n    },\r\n\r\n    convertIsWinner(item) {\r\n      switch (item) {\r\n        case 0:\r\n          return \"LOSE\";\r\n        case 1:\r\n          return \"WIN\";\r\n        default:\r\n          return \"undefined\";\r\n      }\r\n    },\r\n\r\n    onPageChange(page) {\r\n      this.currentPage = page;\r\n      this.getList();\r\n    },\r\n\r\n    onChangeRowsPerPage(rowsPerPage) {\r\n      this.currentPage = 1;\r\n      this.perPage = rowsPerPage;\r\n      this.getList();\r\n    },\r\n\r\n    // ------------------------------------END VIEW ------------------------------------------//\r\n  },\r\n};\r\n",{"version":3,"sources":["Database.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgKA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Database.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row ml-0 mr-0 bg-banner\" style=\"height: 250px\"></div>\r\n\r\n      <br />\r\n      <div class=\"col-md-12\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-3\">\r\n            <diV class=\"form-group-row\">\r\n              <label class=\"col-sm-4 mt-1\">States</label>\r\n              <el-select\r\n                class=\"select-danger select-custom font-italic col-sm-8 rounded-0\"\r\n                v-model=\"stateSearch\"\r\n                :placeholder=\"'State'\"\r\n                :clearable=\"true\"\r\n                :filterable=\"true\"\r\n              >\r\n                <el-option\r\n                  v-for=\"item in listStates\"\r\n                  class=\"select-danger\"\r\n                  :value=\"item.name\"\r\n                  :label=\"item.name\"\r\n                  :key=\"item.name\"\r\n                ></el-option>\r\n              </el-select>\r\n            </diV>\r\n          </div>\r\n          <div class=\"col-md-3\">\r\n            <diV class=\"form-group-row\">\r\n              <label class=\"col-sm-4 mt-1\">Season</label>\r\n              <el-select\r\n                class=\"select-danger select-custom font-italic col-sm-8 rounded-0\"\r\n                v-model=\"seasonSearch\"\r\n                :placeholder=\"'Season'\"\r\n                :clearable=\"true\"\r\n                :filterable=\"true\"\r\n                @change=\"getListAirDates()\"\r\n              >\r\n                <el-option\r\n                  v-for=\"item in listSeasons\"\r\n                  class=\"select-danger\"\r\n                  :value=\"item.id\"\r\n                  :label=\"item.name\"\r\n                  :key=\"item.id\"\r\n                ></el-option>\r\n              </el-select>\r\n            </diV>\r\n          </div>\r\n          <div class=\"col-md-3\">\r\n            <diV class=\"form-group-row\">\r\n              <label class=\"col-sm-4 mt-1\">Airdate</label>\r\n              <el-select\r\n                class=\"select-danger select-custom font-italic col-sm-8 rounded-0\"\r\n                v-model=\"airDateSearch\"\r\n                :placeholder=\"'Airdate'\"\r\n                :clearable=\"true\"\r\n                :filterable=\"true\"\r\n              >\r\n                <el-option\r\n                  v-for=\"item in listAirDates\"\r\n                  class=\"select-danger\"\r\n                  :value=\"item.id\"\r\n                  :label=\"item.id\"\r\n                  :key=\"item.id\"\r\n                ></el-option>\r\n              </el-select>\r\n            </diV>\r\n          </div>\r\n          <div class=\"col-md-3\">\r\n            <diV class=\"form-group-row\">\r\n              <label class=\"col-sm-4 mt-1\">Status</label>\r\n              <el-select\r\n                class=\"select-danger select-custom font-italic col-sm-8 rounded-0\"\r\n                v-model=\"isWinnerSearch\"\r\n                :placeholder=\"'Status'\"\r\n                :clearable=\"true\"\r\n                :filterable=\"true\"\r\n              >\r\n                <el-option\r\n                  v-for=\"item in listIsWinners\"\r\n                  class=\"select-danger\"\r\n                  :value=\"item.id\"\r\n                  :label=\"item.name\"\r\n                  :key=\"item.id\"\r\n                ></el-option>\r\n              </el-select>\r\n            </diV>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <div class=\"row\">\r\n          <div class=\"col-md-4\"></div>\r\n          <div class=\"col-md-4 text-center\">\r\n            <base-button\r\n              type=\"primary\"\r\n              style=\"min-width: 120px\"\r\n              @click=\"commonSearch()\"\r\n              class=\"border-0 rounded-0 btn-custom\"\r\n              >{{ $t(\"grid.search\") }}</base-button\r\n            >\r\n            <base-button\r\n              type=\"primary\"\r\n              style=\"min-width: 120px\"\r\n              @click=\"removeFilter()\"\r\n              class=\"border-0 rounded-0 btn-custom\"\r\n              >{{ $t(\"grid.reset_filter\") }}</base-button\r\n            >\r\n          </div>\r\n        </div>\r\n        <br />\r\n      </div>\r\n\r\n      <div class=\"scrollbar-table\">\r\n        <base-table-custom :headers=\"headers\" :items=\"listContestants\">\r\n          <template v-slot:headers=\"props\">\r\n            <tr>\r\n              <th\r\n                v-for=\"(header, index) in props.headers\"\r\n                :key=\"index\"\r\n                class=\"text-center bg-primary-line text-white\"\r\n              >\r\n                {{ header.text }}\r\n              </th>\r\n            </tr>\r\n          </template>\r\n\r\n          <template v-slot:item=\"props\">\r\n            <td class=\"text-center\">\r\n              {{ (currentPage - 1) * perPage + (props.index + 1) }}\r\n            </td>\r\n            <td>{{ props.item.name }}</td>\r\n            <td>{{ props.item.occupation }}</td>\r\n            <td>{{ props.item.state }}</td>\r\n            <td class=\"text-right\">{{ props.item.season }}</td>\r\n            <td class=\"text-right\">{{ props.item.showNum }}</td>\r\n            <td class=\"text-center\">\r\n              {{ convertDateDbToDateClient(props.item.airDate) }}\r\n            </td>\r\n            <td>{{ convertIsWinner(props.item.isWinner) }}</td>\r\n          </template>\r\n          <template v-slot:noRecord v-if=\"totalRecords == 0\">\r\n            <td :colspan=\"headers.length\" class=\"text-center no-records\">\r\n              {{ $t(\"grid.no_records\") }}\r\n            </td>\r\n          </template>\r\n        </base-table-custom>\r\n      </div>\r\n\r\n      <base-pagination-custom\r\n        v-show=\"listContestants.length > 0\"\r\n        :total=\"totalRecords\"\r\n        :current-page=\"currentPage\"\r\n        @pagechanged=\"onPageChange\"\r\n        @changerowsperpage=\"onChangeRowsPerPage\"\r\n      ></base-pagination-custom>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport BaseComponent from \"../mixins/BaseComponent.js\";\r\nimport DateUtils from \"../mixins/DateUtils.js\";\r\nimport DatabaseService from \"../services/DatabaseService.js\";\r\n\r\nexport default {\r\n  name: \"contestants\",\r\n  mixins: [BaseComponent, DateUtils],\r\n  data() {\r\n    return {\r\n      //Header\r\n      headers: [\r\n        {\r\n          text: \"No\",\r\n        },\r\n        {\r\n          text: \"Name\",\r\n        },\r\n        {\r\n          text: \"Occupation\",\r\n        },\r\n        {\r\n          text: \"State\",\r\n        },\r\n        {\r\n          text: \"Season\",\r\n        },\r\n        {\r\n          text: \"Show number\",\r\n        },\r\n        {\r\n          text: \"Airdate\",\r\n        },\r\n        {\r\n          text: \"Status\",\r\n        },\r\n      ],\r\n\r\n      // List\r\n      listContestants: [],\r\n      listStates: [\r\n        {\r\n          name: \"Alabama\",\r\n          abbreviation: \"AL\",\r\n        },\r\n        {\r\n          name: \"Alaska\",\r\n          abbreviation: \"AK\",\r\n        },\r\n        {\r\n          name: \"American Samoa\",\r\n          abbreviation: \"AS\",\r\n        },\r\n        {\r\n          name: \"Arizona\",\r\n          abbreviation: \"AZ\",\r\n        },\r\n        {\r\n          name: \"Arkansas\",\r\n          abbreviation: \"AR\",\r\n        },\r\n        {\r\n          name: \"California\",\r\n          abbreviation: \"CA\",\r\n        },\r\n        {\r\n          name: \"Colorado\",\r\n          abbreviation: \"CO\",\r\n        },\r\n        {\r\n          name: \"Connecticut\",\r\n          abbreviation: \"CT\",\r\n        },\r\n        {\r\n          name: \"Delaware\",\r\n          abbreviation: \"DE\",\r\n        },\r\n        {\r\n          name: \"District Of Columbia\",\r\n          abbreviation: \"DC\",\r\n        },\r\n        {\r\n          name: \"Federated States Of Micronesia\",\r\n          abbreviation: \"FM\",\r\n        },\r\n        {\r\n          name: \"Florida\",\r\n          abbreviation: \"FL\",\r\n        },\r\n        {\r\n          name: \"Georgia\",\r\n          abbreviation: \"GA\",\r\n        },\r\n        {\r\n          name: \"Guam\",\r\n          abbreviation: \"GU\",\r\n        },\r\n        {\r\n          name: \"Hawaii\",\r\n          abbreviation: \"HI\",\r\n        },\r\n        {\r\n          name: \"Idaho\",\r\n          abbreviation: \"ID\",\r\n        },\r\n        {\r\n          name: \"Illinois\",\r\n          abbreviation: \"IL\",\r\n        },\r\n        {\r\n          name: \"Indiana\",\r\n          abbreviation: \"IN\",\r\n        },\r\n        {\r\n          name: \"Iowa\",\r\n          abbreviation: \"IA\",\r\n        },\r\n        {\r\n          name: \"Kansas\",\r\n          abbreviation: \"KS\",\r\n        },\r\n        {\r\n          name: \"Kentucky\",\r\n          abbreviation: \"KY\",\r\n        },\r\n        {\r\n          name: \"Louisiana\",\r\n          abbreviation: \"LA\",\r\n        },\r\n        {\r\n          name: \"Maine\",\r\n          abbreviation: \"ME\",\r\n        },\r\n        {\r\n          name: \"Marshall Islands\",\r\n          abbreviation: \"MH\",\r\n        },\r\n        {\r\n          name: \"Maryland\",\r\n          abbreviation: \"MD\",\r\n        },\r\n        {\r\n          name: \"Massachusetts\",\r\n          abbreviation: \"MA\",\r\n        },\r\n        {\r\n          name: \"Michigan\",\r\n          abbreviation: \"MI\",\r\n        },\r\n        {\r\n          name: \"Minnesota\",\r\n          abbreviation: \"MN\",\r\n        },\r\n        {\r\n          name: \"Mississippi\",\r\n          abbreviation: \"MS\",\r\n        },\r\n        {\r\n          name: \"Missouri\",\r\n          abbreviation: \"MO\",\r\n        },\r\n        {\r\n          name: \"Montana\",\r\n          abbreviation: \"MT\",\r\n        },\r\n        {\r\n          name: \"Nebraska\",\r\n          abbreviation: \"NE\",\r\n        },\r\n        {\r\n          name: \"Nevada\",\r\n          abbreviation: \"NV\",\r\n        },\r\n        {\r\n          name: \"New Hampshire\",\r\n          abbreviation: \"NH\",\r\n        },\r\n        {\r\n          name: \"New Jersey\",\r\n          abbreviation: \"NJ\",\r\n        },\r\n        {\r\n          name: \"New Mexico\",\r\n          abbreviation: \"NM\",\r\n        },\r\n        {\r\n          name: \"New York\",\r\n          abbreviation: \"NY\",\r\n        },\r\n        {\r\n          name: \"North Carolina\",\r\n          abbreviation: \"NC\",\r\n        },\r\n        {\r\n          name: \"North Dakota\",\r\n          abbreviation: \"ND\",\r\n        },\r\n        {\r\n          name: \"Northern Mariana Islands\",\r\n          abbreviation: \"MP\",\r\n        },\r\n        {\r\n          name: \"Ohio\",\r\n          abbreviation: \"OH\",\r\n        },\r\n        {\r\n          name: \"Oklahoma\",\r\n          abbreviation: \"OK\",\r\n        },\r\n        {\r\n          name: \"Oregon\",\r\n          abbreviation: \"OR\",\r\n        },\r\n        {\r\n          name: \"Palau\",\r\n          abbreviation: \"PW\",\r\n        },\r\n        {\r\n          name: \"Pennsylvania\",\r\n          abbreviation: \"PA\",\r\n        },\r\n        {\r\n          name: \"Puerto Rico\",\r\n          abbreviation: \"PR\",\r\n        },\r\n        {\r\n          name: \"Rhode Island\",\r\n          abbreviation: \"RI\",\r\n        },\r\n        {\r\n          name: \"South Carolina\",\r\n          abbreviation: \"SC\",\r\n        },\r\n        {\r\n          name: \"South Dakota\",\r\n          abbreviation: \"SD\",\r\n        },\r\n        {\r\n          name: \"Tennessee\",\r\n          abbreviation: \"TN\",\r\n        },\r\n        {\r\n          name: \"Texas\",\r\n          abbreviation: \"TX\",\r\n        },\r\n        {\r\n          name: \"Utah\",\r\n          abbreviation: \"UT\",\r\n        },\r\n        {\r\n          name: \"Vermont\",\r\n          abbreviation: \"VT\",\r\n        },\r\n        {\r\n          name: \"Virgin Islands\",\r\n          abbreviation: \"VI\",\r\n        },\r\n        {\r\n          name: \"Virginia\",\r\n          abbreviation: \"VA\",\r\n        },\r\n        {\r\n          name: \"Washington\",\r\n          abbreviation: \"WA\",\r\n        },\r\n        {\r\n          name: \"West Virginia\",\r\n          abbreviation: \"WV\",\r\n        },\r\n        {\r\n          name: \"Wisconsin\",\r\n          abbreviation: \"WI\",\r\n        },\r\n        {\r\n          name: \"Wyoming\",\r\n          abbreviation: \"WY\",\r\n        },\r\n      ],\r\n      listSeasons: [],\r\n      listAirDates: [{}],\r\n      listIsWinners: [\r\n        {\r\n          id: 0,\r\n          name: \"LOSE\",\r\n        },\r\n        {\r\n          id: 1,\r\n          name: \"WIN\",\r\n        },\r\n      ],\r\n\r\n      stateSearch: null,\r\n      seasonSearch: null,\r\n      airDateSearch: null,\r\n      isWinnerSearch: null,\r\n    };\r\n  },\r\n  created() {\r\n    this.getList();\r\n    this.getListSeasons();\r\n  },\r\n\r\n  methods: {\r\n    // -------------------------------------- VIEW ------------------------------------------//\r\n    commonSearch() {\r\n      this.currentPage = 1;\r\n      this.getList();\r\n    },\r\n\r\n    getList() {\r\n      let params = {\r\n        state: this.stateSearch,\r\n        season: this.seasonSearch,\r\n        airDate: this.airDateSearch,\r\n        isWinner: this.isWinnerSearch,\r\n        skip: (this.currentPage - 1) * this.perPage,\r\n        take: this.perPage,\r\n      };\r\n\r\n      this.showLoading();\r\n      DatabaseService.getList(params)\r\n        .then((response) => {\r\n          if (response) {\r\n            this.listContestants = response.data.list;\r\n            this.totalRecords = response.data.totalRecords;\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.listContestants = [];\r\n          this.$notify({\r\n            type: \"danger\",\r\n            message: this.$i18n.t(\"common.error_connection\"),\r\n          });\r\n        })\r\n        .finally(() => {\r\n          this.hideLoading();\r\n        });\r\n    },\r\n\r\n    getListSeasons() {\r\n      for (let i = 37; i >= 1; i--) {\r\n        this.listSeasons.push({\r\n          id: i,\r\n          name: \"Season \" + i,\r\n        });\r\n      }\r\n    },\r\n\r\n    getListAirDates() {\r\n      this.listAirDates = [{}];\r\n      this.airDateSearch = null;\r\n\r\n      let params = {\r\n        season: this.seasonSearch,\r\n      };\r\n\r\n      DatabaseService.getListAirDates(params)\r\n        .then((response) => {\r\n          if (response) {\r\n            this.listAirDates = [];\r\n            for (let i = 0; i < response.data.list.length; i++) {\r\n              this.listAirDates.push({\r\n                id: this.convertDateDbToDateClient(\r\n                  response.data.list[i].airDate\r\n                ),\r\n              });\r\n            }\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.listAirDates = [{}];\r\n        });\r\n    },\r\n\r\n    removeFilter() {\r\n      this.stateSearch = null;\r\n      this.seasonSearch = null;\r\n      this.airDateSearch = null;\r\n      this.isWinnerSearch = null;\r\n    },\r\n\r\n    convertIsWinner(item) {\r\n      switch (item) {\r\n        case 0:\r\n          return \"LOSE\";\r\n        case 1:\r\n          return \"WIN\";\r\n        default:\r\n          return \"undefined\";\r\n      }\r\n    },\r\n\r\n    onPageChange(page) {\r\n      this.currentPage = page;\r\n      this.getList();\r\n    },\r\n\r\n    onChangeRowsPerPage(rowsPerPage) {\r\n      this.currentPage = 1;\r\n      this.perPage = rowsPerPage;\r\n      this.getList();\r\n    },\r\n\r\n    // ------------------------------------END VIEW ------------------------------------------//\r\n  },\r\n};\r\n</script>\r\n<style></style>\r\n"]}]}