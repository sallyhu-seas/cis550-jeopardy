{"remainingRequest":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\src\\components\\BaseDropdown.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\src\\components\\BaseDropdown.vue","mtime":1606920603932},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.dropdown {\n    list-style-type: none;\n}\n\n.dropdown .dropdown-toggle {\n    cursor: pointer;\n}\n",{"version":3,"sources":["BaseDropdown.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwFA;AACA;AACA;;AAEA;AACA;AACA","file":"BaseDropdown.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <component\r\n            class=\"dropdown\"\r\n            :is=\"tag\"\r\n            :class=\"[{show: isOpen}, {'dropdown': direction === 'down'}, {'dropup': direction ==='up'}]\"\r\n            aria-haspopup=\"true\"\r\n            :aria-expanded=\"isOpen\"\r\n            @click=\"toggleDropDown\"\r\n            v-click-outside=\"closeDropDown\"\r\n    >\r\n        <slot name=\"title\">\r\n            <a class=\"dropdown-toggle nav-link\" :class=\"{'no-caret': hideArrow}\" data-toggle=\"dropdown\">\r\n                <i :class=\"icon\"></i>\r\n                <img :src=\"img\"/>\r\n                <span class=\"no-icon\">{{title}}</span>\r\n            </a>\r\n        </slot>\r\n        <ul\r\n                class=\"dropdown-menu width-max-content\"\r\n                ref=\"menu\"\r\n                :class=\"[{'dropdown-menu-right': position === 'right'}, {show: isOpen}, menuClasses,{'bg-primary-line text-white': bgPrimaryLine}]\"\r\n        >\r\n            <slot></slot>\r\n        </ul>\r\n    </component>\r\n</template>\r\n<script>\r\n    export default {\r\n        name: \"base-dropdown\",\r\n        props: {\r\n            img: {\r\n                type: String,\r\n                description: \"img for dropdown title\",\r\n            },\r\n            direction: {\r\n                type: String,\r\n                default: \"down\",\r\n            },\r\n            title: {\r\n                type: String,\r\n                description: \"Dropdown title\",\r\n            },\r\n            icon: {\r\n                type: String,\r\n                description: \"Icon for dropdown title\",\r\n            },\r\n            position: {\r\n                type: String,\r\n                description: \"Position of dropdown menu (e.g right|left)\",\r\n            },\r\n            menuClasses: {\r\n                type: [String, Object],\r\n                description: \"Dropdown menu classes\",\r\n            },\r\n            hideArrow: {\r\n                type: Boolean,\r\n                description: \"Whether dropdown arrow should be hidden\",\r\n            },\r\n            appendToBody: {\r\n                type: Boolean,\r\n                default: true,\r\n                description: \"Whether dropdown should be appended to document body\",\r\n            },\r\n            tag: {\r\n                type: String,\r\n                default: \"li\",\r\n                description: \"Dropdown html tag (e.g div, li etc)\",\r\n            },\r\n            bgPrimaryLine: {}\r\n        },\r\n        data() {\r\n            return {\r\n                isOpen: false,\r\n            };\r\n        },\r\n        methods: {\r\n            toggleDropDown() {\r\n                this.isOpen = !this.isOpen;\r\n                this.$emit(\"change\", this.isOpen);\r\n            },\r\n            closeDropDown() {\r\n                this.isOpen = false;\r\n                this.$emit(\"change\", this.isOpen);\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style>\r\n    .dropdown {\r\n        list-style-type: none;\r\n    }\r\n\r\n    .dropdown .dropdown-toggle {\r\n        cursor: pointer;\r\n    }\r\n</style>\r\n"]}]}