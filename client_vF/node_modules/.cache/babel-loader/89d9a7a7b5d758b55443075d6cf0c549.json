{"remainingRequest":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/babel-loader/lib/index.js!/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/datnguyen/Documents/GitHub/cis550project/client/src/components/TextBasedCaptcha.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/src/components/TextBasedCaptcha.vue","mtime":1606886486777},{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"text-based-captcha\",\n  data: function data() {\n    return {\n      generatedCaptcha: \"\"\n    };\n  },\n  mounted: function mounted() {\n    this.initCaptcha();\n  },\n  methods: {\n    initCaptcha: function initCaptcha() {\n      document.getElementById(\"text-based-captcha\").innerHTML = \"\";\n      var charsArray = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n      var lengthOtp = 6;\n      var captcha = [];\n\n      for (var i = 0; i < lengthOtp; i++) {\n        // if (this.$root.shouldStopExecution(0)) break;\n        //below code will not allow Repetition of Characters\n        var index = Math.floor(Math.random() * charsArray.length + 1); //get the next character from the array\n\n        if (captcha.indexOf(charsArray[index]) == -1) captcha.push(charsArray[index]);else i--;\n      } // this.$windowCP.exitedLoop(0);\n\n\n      var canv = document.createElement(\"canvas\");\n      canv.id = \"canvasCaptcha\";\n      canv.width = 120;\n      canv.height = 50;\n      var ctx = canv.getContext(\"2d\");\n      ctx.font = \"25px Georgia\";\n      ctx.strokeText(captcha.join(\"\"), 0, 30); //storing captcha so that can validate you can save it somewhere else according to your specific requirements\n\n      this.generatedCaptcha = captcha.join(\"\");\n      document.getElementById(\"text-based-captcha\").appendChild(canv); // adds the canvas to the body element\n    }\n  }\n};",{"version":3,"sources":["TextBasedCaptcha.vue"],"names":[],"mappings":";;;;;;;;;;;;AAaA,eAAA;AACA,EAAA,IAAA,EAAA,oBADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,gBAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,OAAA,EAAA,mBAAA;AACA,SAAA,WAAA;AACA,GATA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,WAAA,EAAA,uBAAA;AACA,MAAA,QAAA,CAAA,cAAA,CAAA,oBAAA,EAAA,SAAA,GAAA,EAAA;AACA,UAAA,UAAA,GAAA,sDAAA;AACA,UAAA,SAAA,GAAA,CAAA;AACA,UAAA,OAAA,GAAA,EAAA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,SAAA,EAAA,CAAA,EAAA,EAAA;AACA;AACA;AACA,YAAA,KAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,UAAA,CAAA,MAAA,GAAA,CAAA,CAAA,CAHA,CAGA;;AACA,YAAA,OAAA,CAAA,OAAA,CAAA,UAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,EACA,OAAA,CAAA,IAAA,CAAA,UAAA,CAAA,KAAA,CAAA,EADA,KAEA,CAAA;AACA,OAZA,CAaA;;;AACA,UAAA,IAAA,GAAA,QAAA,CAAA,aAAA,CAAA,QAAA,CAAA;AACA,MAAA,IAAA,CAAA,EAAA,GAAA,eAAA;AACA,MAAA,IAAA,CAAA,KAAA,GAAA,GAAA;AACA,MAAA,IAAA,CAAA,MAAA,GAAA,EAAA;AACA,UAAA,GAAA,GAAA,IAAA,CAAA,UAAA,CAAA,IAAA,CAAA;AACA,MAAA,GAAA,CAAA,IAAA,GAAA,cAAA;AACA,MAAA,GAAA,CAAA,UAAA,CAAA,OAAA,CAAA,IAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA,EApBA,CAqBA;;AACA,WAAA,gBAAA,GAAA,OAAA,CAAA,IAAA,CAAA,EAAA,CAAA;AACA,MAAA,QAAA,CAAA,cAAA,CAAA,oBAAA,EAAA,WAAA,CAAA,IAAA,EAvBA,CAuBA;AACA;AAzBA;AAVA,CAAA","sourcesContent":["<template>\n  <div class=\"form-control\" style=\"height: 50px; width: 150px; display: flex\">\n    <div id=\"text-based-captcha\" style=\"padding-left: 20px\"></div>\n    <div style=\"font-size: 20px; padding-left: 20px\">\n      <i\n        @click=\"initCaptcha()\"\n        class=\"fa fa-sync-alt cursor-pointer\"\n        aria-hidden=\"true\"\n      ></i>\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"text-based-captcha\",\n  data() {\n    return {\n      generatedCaptcha: \"\",\n    };\n  },\n  mounted: function () {\n    this.initCaptcha();\n  },\n  methods: {\n    initCaptcha: function () {\n      document.getElementById(\"text-based-captcha\").innerHTML = \"\";\n      var charsArray = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n      var lengthOtp = 6;\n      var captcha = [];\n      for (var i = 0; i < lengthOtp; i++) {\n        // if (this.$root.shouldStopExecution(0)) break;\n        //below code will not allow Repetition of Characters\n        var index = Math.floor(Math.random() * charsArray.length + 1); //get the next character from the array\n        if (captcha.indexOf(charsArray[index]) == -1)\n          captcha.push(charsArray[index]);\n        else i--;\n      }\n      // this.$windowCP.exitedLoop(0);\n      var canv = document.createElement(\"canvas\");\n      canv.id = \"canvasCaptcha\";\n      canv.width = 120;\n      canv.height = 50;\n      var ctx = canv.getContext(\"2d\");\n      ctx.font = \"25px Georgia\";\n      ctx.strokeText(captcha.join(\"\"), 0, 30);\n      //storing captcha so that can validate you can save it somewhere else according to your specific requirements\n      this.generatedCaptcha = captcha.join(\"\");\n      document.getElementById(\"text-based-captcha\").appendChild(canv); // adds the canvas to the body element\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/components"}]}