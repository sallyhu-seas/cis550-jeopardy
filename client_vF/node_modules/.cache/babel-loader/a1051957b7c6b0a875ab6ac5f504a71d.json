{"remainingRequest":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/babel-loader/lib/index.js!/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/datnguyen/Documents/GitHub/cis550project/client/src/components/BaseDropdown.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/src/components/BaseDropdown.vue","mtime":1606886486769},{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"base-dropdown\",\n  props: {\n    img: {\n      type: String,\n      description: \"img for dropdown title\"\n    },\n    direction: {\n      type: String,\n      default: \"down\"\n    },\n    title: {\n      type: String,\n      description: \"Dropdown title\"\n    },\n    icon: {\n      type: String,\n      description: \"Icon for dropdown title\"\n    },\n    position: {\n      type: String,\n      description: \"Position of dropdown menu (e.g right|left)\"\n    },\n    menuClasses: {\n      type: [String, Object],\n      description: \"Dropdown menu classes\"\n    },\n    hideArrow: {\n      type: Boolean,\n      description: \"Whether dropdown arrow should be hidden\"\n    },\n    appendToBody: {\n      type: Boolean,\n      default: true,\n      description: \"Whether dropdown should be appended to document body\"\n    },\n    tag: {\n      type: String,\n      default: \"li\",\n      description: \"Dropdown html tag (e.g div, li etc)\"\n    },\n    bgPrimaryLine: {}\n  },\n  data: function data() {\n    return {\n      isOpen: false\n    };\n  },\n  methods: {\n    toggleDropDown: function toggleDropDown() {\n      this.isOpen = !this.isOpen;\n      this.$emit(\"change\", this.isOpen);\n    },\n    closeDropDown: function closeDropDown() {\n      this.isOpen = false;\n      this.$emit(\"change\", this.isOpen);\n    }\n  }\n};",{"version":3,"sources":["BaseDropdown.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,WAAA,EAAA;AAFA,KADA;AAKA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,WAAA,EAAA;AAFA,KATA;AAaA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,WAAA,EAAA;AAFA,KAbA;AAiBA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,WAAA,EAAA;AAFA,KAjBA;AAqBA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA,CADA;AAEA,MAAA,WAAA,EAAA;AAFA,KArBA;AAyBA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,WAAA,EAAA;AAFA,KAzBA;AA6BA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA,IAFA;AAGA,MAAA,WAAA,EAAA;AAHA,KA7BA;AAkCA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,IAFA;AAGA,MAAA,WAAA,EAAA;AAHA,KAlCA;AAuCA,IAAA,aAAA,EAAA;AAvCA,GAFA;AA2CA,EAAA,IA3CA,kBA2CA;AACA,WAAA;AACA,MAAA,MAAA,EAAA;AADA,KAAA;AAGA,GA/CA;AAgDA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,4BACA;AACA,WAAA,MAAA,GAAA,CAAA,KAAA,MAAA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,KAAA,MAAA;AACA,KAJA;AAKA,IAAA,aALA,2BAKA;AACA,WAAA,MAAA,GAAA,KAAA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,KAAA,MAAA;AACA;AARA;AAhDA,CAAA","sourcesContent":["<template>\n    <component\n            class=\"dropdown\"\n            :is=\"tag\"\n            :class=\"[{show: isOpen}, {'dropdown': direction === 'down'}, {'dropup': direction ==='up'}]\"\n            aria-haspopup=\"true\"\n            :aria-expanded=\"isOpen\"\n            @click=\"toggleDropDown\"\n            v-click-outside=\"closeDropDown\"\n    >\n        <slot name=\"title\">\n            <a class=\"dropdown-toggle nav-link\" :class=\"{'no-caret': hideArrow}\" data-toggle=\"dropdown\">\n                <i :class=\"icon\"></i>\n                <img :src=\"img\"/>\n                <span class=\"no-icon\">{{title}}</span>\n            </a>\n        </slot>\n        <ul\n                class=\"dropdown-menu width-max-content\"\n                ref=\"menu\"\n                :class=\"[{'dropdown-menu-right': position === 'right'}, {show: isOpen}, menuClasses,{'bg-primary-line text-white': bgPrimaryLine}]\"\n        >\n            <slot></slot>\n        </ul>\n    </component>\n</template>\n<script>\n    export default {\n        name: \"base-dropdown\",\n        props: {\n            img: {\n                type: String,\n                description: \"img for dropdown title\",\n            },\n            direction: {\n                type: String,\n                default: \"down\",\n            },\n            title: {\n                type: String,\n                description: \"Dropdown title\",\n            },\n            icon: {\n                type: String,\n                description: \"Icon for dropdown title\",\n            },\n            position: {\n                type: String,\n                description: \"Position of dropdown menu (e.g right|left)\",\n            },\n            menuClasses: {\n                type: [String, Object],\n                description: \"Dropdown menu classes\",\n            },\n            hideArrow: {\n                type: Boolean,\n                description: \"Whether dropdown arrow should be hidden\",\n            },\n            appendToBody: {\n                type: Boolean,\n                default: true,\n                description: \"Whether dropdown should be appended to document body\",\n            },\n            tag: {\n                type: String,\n                default: \"li\",\n                description: \"Dropdown html tag (e.g div, li etc)\",\n            },\n            bgPrimaryLine: {}\n        },\n        data() {\n            return {\n                isOpen: false,\n            };\n        },\n        methods: {\n            toggleDropDown() {\n                this.isOpen = !this.isOpen;\n                this.$emit(\"change\", this.isOpen);\n            },\n            closeDropDown() {\n                this.isOpen = false;\n                this.$emit(\"change\", this.isOpen);\n            },\n        },\n    };\n</script>\n<style>\n    .dropdown {\n        list-style-type: none;\n    }\n\n    .dropdown .dropdown-toggle {\n        cursor: pointer;\n    }\n</style>\n"],"sourceRoot":"src/components"}]}