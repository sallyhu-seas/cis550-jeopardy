{"remainingRequest":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\src\\components\\BaseNav.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\src\\components\\BaseNav.vue","mtime":1606920603935},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport NavbarToggleButton from \"./NavbarToggleButton\";\nexport default {\n  name: \"base-nav\",\n  components: {\n    NavbarToggleButton: NavbarToggleButton\n  },\n  props: {\n    type: {\n      type: String,\n      default: \"\",\n      description: \"Navbar type (e.g default, primary etc)\"\n    },\n    title: {\n      type: String,\n      default: \"\",\n      description: \"Title of navbar\"\n    },\n    contentId: {\n      type: [String, Number],\n      default: Math.random().toString(),\n      description: \"Explicit id for the menu. By default it's a generated random number\"\n    },\n    containerClasses: {\n      type: [String, Object, Array],\n      default: \"container-fluid\"\n    },\n    transparent: {\n      type: Boolean,\n      default: false,\n      description: \"Whether navbar is transparent\"\n    },\n    expand: {\n      type: Boolean,\n      default: false,\n      description: \"Whether navbar should contain `navbar-expand-lg` class\"\n    },\n    showToggleButton: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      toggled: true\n    };\n  },\n  methods: {\n    closeMenu: function closeMenu() {\n      this.toggled = false;\n    }\n  }\n};",{"version":3,"sources":["BaseNav.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,OAAA,kBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,kBAAA,EAAA;AADA,GAFA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,WAAA,EAAA;AAHA,KADA;AAMA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,WAAA,EAAA;AAHA,KANA;AAWA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA,CADA;AAEA,MAAA,OAAA,EAAA,IAAA,CAAA,MAAA,GAAA,QAAA,EAFA;AAGA,MAAA,WAAA,EACA;AAJA,KAXA;AAiBA,IAAA,gBAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA,EAAA,KAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAjBA;AAqBA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA,KAFA;AAGA,MAAA,WAAA,EAAA;AAHA,KArBA;AA0BA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA,KAFA;AAGA,MAAA,WAAA,EAAA;AAHA,KA1BA;AA+BA,IAAA,gBAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AA/BA,GALA;AAyCA,EAAA,IAzCA,kBAyCA;AACA,WAAA;AACA,MAAA,OAAA,EAAA;AADA,KAAA;AAGA,GA7CA;AA8CA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,WAAA,OAAA,GAAA,KAAA;AACA;AAHA;AA9CA,CAAA","sourcesContent":["<template>\r\n  <nav\r\n    class=\"navbar\"\r\n    :class=\"[\r\n            {'navbar-expand-md': expand},\r\n            {'navbar-transparent': transparent},\r\n            {[`bg-${type}`]: type}\r\n         ]\"\r\n  >\r\n    <div :class=\"containerClasses\">\r\n      <navbar-toggle-button v-if=\"showToggleButton\" :toggled=\"toggled\" :target=\"contentId\"\r\n     >\r\n        <slot :close-menu=\"closeMenu\"></slot>\r\n      </navbar-toggle-button>\r\n      <navbar-toggle-button v-if=\"showToggleButton\" >\r\n        <slot name=\"user-info\"></slot>\r\n      </navbar-toggle-button>\r\n\r\n\r\n      <!-- Quan edit -->\r\n      <!-- <slot name=\"brand\">\r\n                <router-link\r\n                        :to=\"$route.path\"\r\n                        class=\"h4 mb-0 text-white text-uppercase d-none d-lg-inline-block\"\r\n                >\r\n                    {{$route.name}}\r\n                </router-link>\r\n      </slot>-->\r\n      <!-- end Quan edit -->\r\n      <div class=\"collapse navbar-collapse\" :id=\"contentId\" v-click-outside=\"closeMenu\">\r\n        <slot :close-menu=\"closeMenu\"></slot>\r\n        <!-- <i class=\"fa fa-user text-white\"></i> -->\r\n      </div>\r\n    </div>\r\n  </nav>\r\n</template>\r\n<script>\r\nimport NavbarToggleButton from \"./NavbarToggleButton\";\r\n\r\nexport default {\r\n  name: \"base-nav\",\r\n  components: {\r\n    NavbarToggleButton,\r\n  },\r\n  props: {\r\n    type: {\r\n      type: String,\r\n      default: \"\",\r\n      description: \"Navbar type (e.g default, primary etc)\",\r\n    },\r\n    title: {\r\n      type: String,\r\n      default: \"\",\r\n      description: \"Title of navbar\",\r\n    },\r\n    contentId: {\r\n      type: [String, Number],\r\n      default: Math.random().toString(),\r\n      description:\r\n        \"Explicit id for the menu. By default it's a generated random number\",\r\n    },\r\n    containerClasses: {\r\n      type: [String, Object, Array],\r\n      default: \"container-fluid\",\r\n    },\r\n    transparent: {\r\n      type: Boolean,\r\n      default: false,\r\n      description: \"Whether navbar is transparent\",\r\n    },\r\n    expand: {\r\n      type: Boolean,\r\n      default: false,\r\n      description: \"Whether navbar should contain `navbar-expand-lg` class\",\r\n    },\r\n    showToggleButton: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      toggled: true,\r\n    };\r\n  },\r\n  methods: {\r\n    closeMenu() {\r\n      this.toggled = false;\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style>\r\n</style>"],"sourceRoot":"src/components"}]}