{"remainingRequest":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\src\\mixins\\ValidatorUtils.js","dependencies":[{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\src\\mixins\\ValidatorUtils.js","mtime":1606920603971},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nexport default {\n  methods: {\n    addError: function addError(field, isValid, errorMessage, obj) {\n      obj[field] = Object.assign({}, obj[field], {\n        isValid: isValid,\n        errorMessage: errorMessage\n      });\n    },\n    removeError: function removeError(field, obj) {\n      for (var property in obj) {\n        if (field == property) {\n          obj[property] = {};\n        }\n      }\n    },\n    removeErrors: function removeErrors(obj) {\n      for (var property in obj) {\n        obj[property] = {};\n      }\n    },\n    hasErrors: function hasErrors(obj) {\n      for (var property in obj) {\n        if (Object.keys(obj[property]).length !== 0) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }\n};",{"version":3,"sources":["C:/Users/sally/OneDrive/Documents/GitHub/cis550-jeopardy/client_vF/src/mixins/ValidatorUtils.js"],"names":["methods","addError","field","isValid","errorMessage","obj","Object","assign","removeError","property","removeErrors","hasErrors","keys","length"],"mappings":";;AAAA,eAAe;AACbA,EAAAA,OAAO,EAAE;AACPC,IAAAA,QADO,oBACEC,KADF,EACSC,OADT,EACkBC,YADlB,EACgCC,GADhC,EACqC;AAC1CA,MAAAA,GAAG,CAACH,KAAD,CAAH,GAAaI,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,GAAG,CAACH,KAAD,CAArB,EAA8B;AACzCC,QAAAA,OAAO,EAAEA,OADgC;AAEzCC,QAAAA,YAAY,EAAEA;AAF2B,OAA9B,CAAb;AAID,KANM;AAOPI,IAAAA,WAPO,uBAOKN,KAPL,EAOYG,GAPZ,EAOiB;AACtB,WAAK,IAAMI,QAAX,IAAuBJ,GAAvB,EAA4B;AAC1B,YAAIH,KAAK,IAAIO,QAAb,EAAuB;AACrBJ,UAAAA,GAAG,CAACI,QAAD,CAAH,GAAgB,EAAhB;AACD;AACF;AACF,KAbM;AAcPC,IAAAA,YAdO,wBAcML,GAdN,EAcW;AAChB,WAAK,IAAMI,QAAX,IAAuBJ,GAAvB,EAA4B;AAC1BA,QAAAA,GAAG,CAACI,QAAD,CAAH,GAAgB,EAAhB;AACD;AACF,KAlBM;AAmBPE,IAAAA,SAnBO,qBAmBGN,GAnBH,EAmBQ;AACb,WAAK,IAAMI,QAAX,IAAuBJ,GAAvB,EAA4B;AAC1B,YAAIC,MAAM,CAACM,IAAP,CAAYP,GAAG,CAACI,QAAD,CAAf,EAA2BI,MAA3B,KAAsC,CAA1C,EAA6C;AAC3C,iBAAO,IAAP;AACD;AACF;;AACD,aAAO,KAAP;AACD;AA1BM;AADI,CAAf","sourcesContent":["export default {\r\n  methods: {\r\n    addError(field, isValid, errorMessage, obj) {\r\n      obj[field] = Object.assign({}, obj[field], {\r\n        isValid: isValid,\r\n        errorMessage: errorMessage,\r\n      });\r\n    },\r\n    removeError(field, obj) {\r\n      for (const property in obj) {\r\n        if (field == property) {\r\n          obj[property] = {};\r\n        }\r\n      }\r\n    },\r\n    removeErrors(obj) {\r\n      for (const property in obj) {\r\n        obj[property] = {};\r\n      }\r\n    },\r\n    hasErrors(obj) {\r\n      for (const property in obj) {\r\n        if (Object.keys(obj[property]).length !== 0) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n  },\r\n};\r\n"]}]}