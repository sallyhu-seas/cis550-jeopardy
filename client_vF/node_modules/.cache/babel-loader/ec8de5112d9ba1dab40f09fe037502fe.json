{"remainingRequest":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/babel-loader/lib/index.js!/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/datnguyen/Documents/GitHub/cis550project/client/src/views/Database.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/src/views/Database.vue","mtime":1606886486785},{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport BaseComponent from \"../mixins/BaseComponent.js\";\nimport DateUtils from \"../mixins/DateUtils.js\";\nimport DatabaseService from \"../services/DatabaseService.js\";\nexport default {\n  name: \"contestants\",\n  mixins: [BaseComponent, DateUtils],\n  data: function data() {\n    return {\n      //Header\n      headers: [{\n        text: \"No\"\n      }, {\n        text: \"Name\"\n      }, {\n        text: \"Occupation\"\n      }, {\n        text: \"State\"\n      }, {\n        text: \"Season\"\n      }, {\n        text: \"Show number\"\n      }, {\n        text: \"Air date\"\n      }, {\n        text: \"Status\"\n      }],\n      // List\n      listContestants: [],\n      listStates: [{\n        name: \"Alabama\",\n        abbreviation: \"AL\"\n      }, {\n        name: \"Alaska\",\n        abbreviation: \"AK\"\n      }, {\n        name: \"American Samoa\",\n        abbreviation: \"AS\"\n      }, {\n        name: \"Arizona\",\n        abbreviation: \"AZ\"\n      }, {\n        name: \"Arkansas\",\n        abbreviation: \"AR\"\n      }, {\n        name: \"California\",\n        abbreviation: \"CA\"\n      }, {\n        name: \"Colorado\",\n        abbreviation: \"CO\"\n      }, {\n        name: \"Connecticut\",\n        abbreviation: \"CT\"\n      }, {\n        name: \"Delaware\",\n        abbreviation: \"DE\"\n      }, {\n        name: \"District Of Columbia\",\n        abbreviation: \"DC\"\n      }, {\n        name: \"Federated States Of Micronesia\",\n        abbreviation: \"FM\"\n      }, {\n        name: \"Florida\",\n        abbreviation: \"FL\"\n      }, {\n        name: \"Georgia\",\n        abbreviation: \"GA\"\n      }, {\n        name: \"Guam\",\n        abbreviation: \"GU\"\n      }, {\n        name: \"Hawaii\",\n        abbreviation: \"HI\"\n      }, {\n        name: \"Idaho\",\n        abbreviation: \"ID\"\n      }, {\n        name: \"Illinois\",\n        abbreviation: \"IL\"\n      }, {\n        name: \"Indiana\",\n        abbreviation: \"IN\"\n      }, {\n        name: \"Iowa\",\n        abbreviation: \"IA\"\n      }, {\n        name: \"Kansas\",\n        abbreviation: \"KS\"\n      }, {\n        name: \"Kentucky\",\n        abbreviation: \"KY\"\n      }, {\n        name: \"Louisiana\",\n        abbreviation: \"LA\"\n      }, {\n        name: \"Maine\",\n        abbreviation: \"ME\"\n      }, {\n        name: \"Marshall Islands\",\n        abbreviation: \"MH\"\n      }, {\n        name: \"Maryland\",\n        abbreviation: \"MD\"\n      }, {\n        name: \"Massachusetts\",\n        abbreviation: \"MA\"\n      }, {\n        name: \"Michigan\",\n        abbreviation: \"MI\"\n      }, {\n        name: \"Minnesota\",\n        abbreviation: \"MN\"\n      }, {\n        name: \"Mississippi\",\n        abbreviation: \"MS\"\n      }, {\n        name: \"Missouri\",\n        abbreviation: \"MO\"\n      }, {\n        name: \"Montana\",\n        abbreviation: \"MT\"\n      }, {\n        name: \"Nebraska\",\n        abbreviation: \"NE\"\n      }, {\n        name: \"Nevada\",\n        abbreviation: \"NV\"\n      }, {\n        name: \"New Hampshire\",\n        abbreviation: \"NH\"\n      }, {\n        name: \"New Jersey\",\n        abbreviation: \"NJ\"\n      }, {\n        name: \"New Mexico\",\n        abbreviation: \"NM\"\n      }, {\n        name: \"New York\",\n        abbreviation: \"NY\"\n      }, {\n        name: \"North Carolina\",\n        abbreviation: \"NC\"\n      }, {\n        name: \"North Dakota\",\n        abbreviation: \"ND\"\n      }, {\n        name: \"Northern Mariana Islands\",\n        abbreviation: \"MP\"\n      }, {\n        name: \"Ohio\",\n        abbreviation: \"OH\"\n      }, {\n        name: \"Oklahoma\",\n        abbreviation: \"OK\"\n      }, {\n        name: \"Oregon\",\n        abbreviation: \"OR\"\n      }, {\n        name: \"Palau\",\n        abbreviation: \"PW\"\n      }, {\n        name: \"Pennsylvania\",\n        abbreviation: \"PA\"\n      }, {\n        name: \"Puerto Rico\",\n        abbreviation: \"PR\"\n      }, {\n        name: \"Rhode Island\",\n        abbreviation: \"RI\"\n      }, {\n        name: \"South Carolina\",\n        abbreviation: \"SC\"\n      }, {\n        name: \"South Dakota\",\n        abbreviation: \"SD\"\n      }, {\n        name: \"Tennessee\",\n        abbreviation: \"TN\"\n      }, {\n        name: \"Texas\",\n        abbreviation: \"TX\"\n      }, {\n        name: \"Utah\",\n        abbreviation: \"UT\"\n      }, {\n        name: \"Vermont\",\n        abbreviation: \"VT\"\n      }, {\n        name: \"Virgin Islands\",\n        abbreviation: \"VI\"\n      }, {\n        name: \"Virginia\",\n        abbreviation: \"VA\"\n      }, {\n        name: \"Washington\",\n        abbreviation: \"WA\"\n      }, {\n        name: \"West Virginia\",\n        abbreviation: \"WV\"\n      }, {\n        name: \"Wisconsin\",\n        abbreviation: \"WI\"\n      }, {\n        name: \"Wyoming\",\n        abbreviation: \"WY\"\n      }],\n      listSeasons: [],\n      listAirDates: [{}],\n      listIsWinners: [{\n        id: 0,\n        name: \"LOSE\"\n      }, {\n        id: 1,\n        name: \"WIN\"\n      }],\n      stateSearch: null,\n      seasonSearch: null,\n      airDateSearch: null,\n      isWinnerSearch: null\n    };\n  },\n  created: function created() {\n    this.getList();\n    this.getListSeasons();\n  },\n  methods: {\n    // -------------------------------------- VIEW ------------------------------------------//\n    commonSearch: function commonSearch() {\n      this.currentPage = 1;\n      this.getList();\n    },\n    getList: function getList() {\n      var _this = this;\n\n      var params = {\n        state: this.stateSearch,\n        season: this.seasonSearch,\n        airDate: this.airDateSearch,\n        isWinner: this.isWinnerSearch,\n        skip: (this.currentPage - 1) * this.perPage,\n        take: this.perPage\n      };\n      this.showLoading();\n      DatabaseService.getList(params).then(function (response) {\n        if (response) {\n          _this.listContestants = response.data.list;\n          _this.totalRecords = response.data.totalRecords;\n        }\n      }).catch(function () {\n        _this.listContestants = [];\n\n        _this.$notify({\n          type: \"danger\",\n          message: _this.$i18n.t(\"common.error_connection\")\n        });\n      }).finally(function () {\n        _this.hideLoading();\n      });\n    },\n    getListSeasons: function getListSeasons() {\n      for (var i = 37; i >= 1; i--) {\n        this.listSeasons.push({\n          id: i,\n          name: \"Season \" + i\n        });\n      }\n    },\n    getListAirDates: function getListAirDates() {\n      var _this2 = this;\n\n      this.listAirDates = [{}];\n      this.airDateSearch = null;\n      var params = {\n        season: this.seasonSearch\n      };\n      DatabaseService.getListAirDates(params).then(function (response) {\n        if (response) {\n          _this2.listAirDates = [];\n\n          for (var i = 0; i < response.data.list.length; i++) {\n            _this2.listAirDates.push({\n              id: _this2.convertDateDbToDateClient(response.data.list[i].airDate)\n            });\n          }\n        }\n      }).catch(function () {\n        _this2.listAirDates = [{}];\n      });\n    },\n    removeFilter: function removeFilter() {\n      this.stateSearch = null;\n      this.seasonSearch = null;\n      this.airDateSearch = null;\n      this.isWinnerSearch = null;\n    },\n    convertIsWinner: function convertIsWinner(item) {\n      switch (item) {\n        case 0:\n          return \"LOSE\";\n\n        case 1:\n          return \"WIN\";\n\n        default:\n          return \"undefined\";\n      }\n    },\n    onPageChange: function onPageChange(page) {\n      this.currentPage = page;\n      this.getList();\n    },\n    onChangeRowsPerPage: function onChangeRowsPerPage(rowsPerPage) {\n      this.currentPage = 1;\n      this.perPage = rowsPerPage;\n      this.getList();\n    } // ------------------------------------END VIEW ------------------------------------------//\n\n  }\n};",{"version":3,"sources":["Database.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgKA,OAAA,aAAA;AACA,OAAA,SAAA;AACA,OAAA,eAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,SAAA,CAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA;AACA,MAAA,OAAA,EAAA,CACA;AACA,QAAA,IAAA,EAAA;AADA,OADA,EAIA;AACA,QAAA,IAAA,EAAA;AADA,OAJA,EAOA;AACA,QAAA,IAAA,EAAA;AADA,OAPA,EAUA;AACA,QAAA,IAAA,EAAA;AADA,OAVA,EAaA;AACA,QAAA,IAAA,EAAA;AADA,OAbA,EAgBA;AACA,QAAA,IAAA,EAAA;AADA,OAhBA,EAmBA;AACA,QAAA,IAAA,EAAA;AADA,OAnBA,EAsBA;AACA,QAAA,IAAA,EAAA;AADA,OAtBA,CAFA;AA6BA;AACA,MAAA,eAAA,EAAA,EA9BA;AA+BA,MAAA,UAAA,EAAA,CACA;AACA,QAAA,IAAA,EAAA,SADA;AAEA,QAAA,YAAA,EAAA;AAFA,OADA,EAKA;AACA,QAAA,IAAA,EAAA,QADA;AAEA,QAAA,YAAA,EAAA;AAFA,OALA,EASA;AACA,QAAA,IAAA,EAAA,gBADA;AAEA,QAAA,YAAA,EAAA;AAFA,OATA,EAaA;AACA,QAAA,IAAA,EAAA,SADA;AAEA,QAAA,YAAA,EAAA;AAFA,OAbA,EAiBA;AACA,QAAA,IAAA,EAAA,UADA;AAEA,QAAA,YAAA,EAAA;AAFA,OAjBA,EAqBA;AACA,QAAA,IAAA,EAAA,YADA;AAEA,QAAA,YAAA,EAAA;AAFA,OArBA,EAyBA;AACA,QAAA,IAAA,EAAA,UADA;AAEA,QAAA,YAAA,EAAA;AAFA,OAzBA,EA6BA;AACA,QAAA,IAAA,EAAA,aADA;AAEA,QAAA,YAAA,EAAA;AAFA,OA7BA,EAiCA;AACA,QAAA,IAAA,EAAA,UADA;AAEA,QAAA,YAAA,EAAA;AAFA,OAjCA,EAqCA;AACA,QAAA,IAAA,EAAA,sBADA;AAEA,QAAA,YAAA,EAAA;AAFA,OArCA,EAyCA;AACA,QAAA,IAAA,EAAA,gCADA;AAEA,QAAA,YAAA,EAAA;AAFA,OAzCA,EA6CA;AACA,QAAA,IAAA,EAAA,SADA;AAEA,QAAA,YAAA,EAAA;AAFA,OA7CA,EAiDA;AACA,QAAA,IAAA,EAAA,SADA;AAEA,QAAA,YAAA,EAAA;AAFA,OAjDA,EAqDA;AACA,QAAA,IAAA,EAAA,MADA;AAEA,QAAA,YAAA,EAAA;AAFA,OArDA,EAyDA;AACA,QAAA,IAAA,EAAA,QADA;AAEA,QAAA,YAAA,EAAA;AAFA,OAzDA,EA6DA;AACA,QAAA,IAAA,EAAA,OADA;AAEA,QAAA,YAAA,EAAA;AAFA,OA7DA,EAiEA;AACA,QAAA,IAAA,EAAA,UADA;AAEA,QAAA,YAAA,EAAA;AAFA,OAjEA,EAqEA;AACA,QAAA,IAAA,EAAA,SADA;AAEA,QAAA,YAAA,EAAA;AAFA,OArEA,EAyEA;AACA,QAAA,IAAA,EAAA,MADA;AAEA,QAAA,YAAA,EAAA;AAFA,OAzEA,EA6EA;AACA,QAAA,IAAA,EAAA,QADA;AAEA,QAAA,YAAA,EAAA;AAFA,OA7EA,EAiFA;AACA,QAAA,IAAA,EAAA,UADA;AAEA,QAAA,YAAA,EAAA;AAFA,OAjFA,EAqFA;AACA,QAAA,IAAA,EAAA,WADA;AAEA,QAAA,YAAA,EAAA;AAFA,OArFA,EAyFA;AACA,QAAA,IAAA,EAAA,OADA;AAEA,QAAA,YAAA,EAAA;AAFA,OAzFA,EA6FA;AACA,QAAA,IAAA,EAAA,kBADA;AAEA,QAAA,YAAA,EAAA;AAFA,OA7FA,EAiGA;AACA,QAAA,IAAA,EAAA,UADA;AAEA,QAAA,YAAA,EAAA;AAFA,OAjGA,EAqGA;AACA,QAAA,IAAA,EAAA,eADA;AAEA,QAAA,YAAA,EAAA;AAFA,OArGA,EAyGA;AACA,QAAA,IAAA,EAAA,UADA;AAEA,QAAA,YAAA,EAAA;AAFA,OAzGA,EA6GA;AACA,QAAA,IAAA,EAAA,WADA;AAEA,QAAA,YAAA,EAAA;AAFA,OA7GA,EAiHA;AACA,QAAA,IAAA,EAAA,aADA;AAEA,QAAA,YAAA,EAAA;AAFA,OAjHA,EAqHA;AACA,QAAA,IAAA,EAAA,UADA;AAEA,QAAA,YAAA,EAAA;AAFA,OArHA,EAyHA;AACA,QAAA,IAAA,EAAA,SADA;AAEA,QAAA,YAAA,EAAA;AAFA,OAzHA,EA6HA;AACA,QAAA,IAAA,EAAA,UADA;AAEA,QAAA,YAAA,EAAA;AAFA,OA7HA,EAiIA;AACA,QAAA,IAAA,EAAA,QADA;AAEA,QAAA,YAAA,EAAA;AAFA,OAjIA,EAqIA;AACA,QAAA,IAAA,EAAA,eADA;AAEA,QAAA,YAAA,EAAA;AAFA,OArIA,EAyIA;AACA,QAAA,IAAA,EAAA,YADA;AAEA,QAAA,YAAA,EAAA;AAFA,OAzIA,EA6IA;AACA,QAAA,IAAA,EAAA,YADA;AAEA,QAAA,YAAA,EAAA;AAFA,OA7IA,EAiJA;AACA,QAAA,IAAA,EAAA,UADA;AAEA,QAAA,YAAA,EAAA;AAFA,OAjJA,EAqJA;AACA,QAAA,IAAA,EAAA,gBADA;AAEA,QAAA,YAAA,EAAA;AAFA,OArJA,EAyJA;AACA,QAAA,IAAA,EAAA,cADA;AAEA,QAAA,YAAA,EAAA;AAFA,OAzJA,EA6JA;AACA,QAAA,IAAA,EAAA,0BADA;AAEA,QAAA,YAAA,EAAA;AAFA,OA7JA,EAiKA;AACA,QAAA,IAAA,EAAA,MADA;AAEA,QAAA,YAAA,EAAA;AAFA,OAjKA,EAqKA;AACA,QAAA,IAAA,EAAA,UADA;AAEA,QAAA,YAAA,EAAA;AAFA,OArKA,EAyKA;AACA,QAAA,IAAA,EAAA,QADA;AAEA,QAAA,YAAA,EAAA;AAFA,OAzKA,EA6KA;AACA,QAAA,IAAA,EAAA,OADA;AAEA,QAAA,YAAA,EAAA;AAFA,OA7KA,EAiLA;AACA,QAAA,IAAA,EAAA,cADA;AAEA,QAAA,YAAA,EAAA;AAFA,OAjLA,EAqLA;AACA,QAAA,IAAA,EAAA,aADA;AAEA,QAAA,YAAA,EAAA;AAFA,OArLA,EAyLA;AACA,QAAA,IAAA,EAAA,cADA;AAEA,QAAA,YAAA,EAAA;AAFA,OAzLA,EA6LA;AACA,QAAA,IAAA,EAAA,gBADA;AAEA,QAAA,YAAA,EAAA;AAFA,OA7LA,EAiMA;AACA,QAAA,IAAA,EAAA,cADA;AAEA,QAAA,YAAA,EAAA;AAFA,OAjMA,EAqMA;AACA,QAAA,IAAA,EAAA,WADA;AAEA,QAAA,YAAA,EAAA;AAFA,OArMA,EAyMA;AACA,QAAA,IAAA,EAAA,OADA;AAEA,QAAA,YAAA,EAAA;AAFA,OAzMA,EA6MA;AACA,QAAA,IAAA,EAAA,MADA;AAEA,QAAA,YAAA,EAAA;AAFA,OA7MA,EAiNA;AACA,QAAA,IAAA,EAAA,SADA;AAEA,QAAA,YAAA,EAAA;AAFA,OAjNA,EAqNA;AACA,QAAA,IAAA,EAAA,gBADA;AAEA,QAAA,YAAA,EAAA;AAFA,OArNA,EAyNA;AACA,QAAA,IAAA,EAAA,UADA;AAEA,QAAA,YAAA,EAAA;AAFA,OAzNA,EA6NA;AACA,QAAA,IAAA,EAAA,YADA;AAEA,QAAA,YAAA,EAAA;AAFA,OA7NA,EAiOA;AACA,QAAA,IAAA,EAAA,eADA;AAEA,QAAA,YAAA,EAAA;AAFA,OAjOA,EAqOA;AACA,QAAA,IAAA,EAAA,WADA;AAEA,QAAA,YAAA,EAAA;AAFA,OArOA,EAyOA;AACA,QAAA,IAAA,EAAA,SADA;AAEA,QAAA,YAAA,EAAA;AAFA,OAzOA,CA/BA;AA6QA,MAAA,WAAA,EAAA,EA7QA;AA8QA,MAAA,YAAA,EAAA,CAAA,EAAA,CA9QA;AA+QA,MAAA,aAAA,EAAA,CACA;AACA,QAAA,EAAA,EAAA,CADA;AAEA,QAAA,IAAA,EAAA;AAFA,OADA,EAKA;AACA,QAAA,EAAA,EAAA,CADA;AAEA,QAAA,IAAA,EAAA;AAFA,OALA,CA/QA;AA0RA,MAAA,WAAA,EAAA,IA1RA;AA2RA,MAAA,YAAA,EAAA,IA3RA;AA4RA,MAAA,aAAA,EAAA,IA5RA;AA6RA,MAAA,cAAA,EAAA;AA7RA,KAAA;AA+RA,GAnSA;AAoSA,EAAA,OApSA,qBAoSA;AACA,SAAA,OAAA;AACA,SAAA,cAAA;AACA,GAvSA;AAySA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,YAFA,0BAEA;AACA,WAAA,WAAA,GAAA,CAAA;AACA,WAAA,OAAA;AACA,KALA;AAOA,IAAA,OAPA,qBAOA;AAAA;;AACA,UAAA,MAAA,GAAA;AACA,QAAA,KAAA,EAAA,KAAA,WADA;AAEA,QAAA,MAAA,EAAA,KAAA,YAFA;AAGA,QAAA,OAAA,EAAA,KAAA,aAHA;AAIA,QAAA,QAAA,EAAA,KAAA,cAJA;AAKA,QAAA,IAAA,EAAA,CAAA,KAAA,WAAA,GAAA,CAAA,IAAA,KAAA,OALA;AAMA,QAAA,IAAA,EAAA,KAAA;AANA,OAAA;AASA,WAAA,WAAA;AACA,MAAA,eAAA,CAAA,OAAA,CAAA,MAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,YAAA,QAAA,EAAA;AACA,UAAA,KAAA,CAAA,eAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA;AACA,UAAA,KAAA,CAAA,YAAA,GAAA,QAAA,CAAA,IAAA,CAAA,YAAA;AACA;AACA,OANA,EAOA,KAPA,CAOA,YAAA;AACA,QAAA,KAAA,CAAA,eAAA,GAAA,EAAA;;AACA,QAAA,KAAA,CAAA,OAAA,CAAA;AACA,UAAA,IAAA,EAAA,QADA;AAEA,UAAA,OAAA,EAAA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA,yBAAA;AAFA,SAAA;AAIA,OAbA,EAcA,OAdA,CAcA,YAAA;AACA,QAAA,KAAA,CAAA,WAAA;AACA,OAhBA;AAiBA,KAnCA;AAqCA,IAAA,cArCA,4BAqCA;AACA,WAAA,IAAA,CAAA,GAAA,EAAA,EAAA,CAAA,IAAA,CAAA,EAAA,CAAA,EAAA,EAAA;AACA,aAAA,WAAA,CAAA,IAAA,CAAA;AACA,UAAA,EAAA,EAAA,CADA;AAEA,UAAA,IAAA,EAAA,YAAA;AAFA,SAAA;AAIA;AACA,KA5CA;AA8CA,IAAA,eA9CA,6BA8CA;AAAA;;AACA,WAAA,YAAA,GAAA,CAAA,EAAA,CAAA;AACA,WAAA,aAAA,GAAA,IAAA;AAEA,UAAA,MAAA,GAAA;AACA,QAAA,MAAA,EAAA,KAAA;AADA,OAAA;AAIA,MAAA,eAAA,CAAA,eAAA,CAAA,MAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,YAAA,QAAA,EAAA;AACA,UAAA,MAAA,CAAA,YAAA,GAAA,EAAA;;AACA,eAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,MAAA,CAAA,YAAA,CAAA,IAAA,CAAA;AACA,cAAA,EAAA,EAAA,MAAA,CAAA,yBAAA,CACA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,EAAA,OADA;AADA,aAAA;AAKA;AACA;AACA,OAZA,EAaA,KAbA,CAaA,YAAA;AACA,QAAA,MAAA,CAAA,YAAA,GAAA,CAAA,EAAA,CAAA;AACA,OAfA;AAgBA,KAtEA;AAwEA,IAAA,YAxEA,0BAwEA;AACA,WAAA,WAAA,GAAA,IAAA;AACA,WAAA,YAAA,GAAA,IAAA;AACA,WAAA,aAAA,GAAA,IAAA;AACA,WAAA,cAAA,GAAA,IAAA;AACA,KA7EA;AA+EA,IAAA,eA/EA,2BA+EA,IA/EA,EA+EA;AACA,cAAA,IAAA;AACA,aAAA,CAAA;AACA,iBAAA,MAAA;;AACA,aAAA,CAAA;AACA,iBAAA,KAAA;;AACA;AACA,iBAAA,WAAA;AANA;AAQA,KAxFA;AA0FA,IAAA,YA1FA,wBA0FA,IA1FA,EA0FA;AACA,WAAA,WAAA,GAAA,IAAA;AACA,WAAA,OAAA;AACA,KA7FA;AA+FA,IAAA,mBA/FA,+BA+FA,WA/FA,EA+FA;AACA,WAAA,WAAA,GAAA,CAAA;AACA,WAAA,OAAA,GAAA,WAAA;AACA,WAAA,OAAA;AACA,KAnGA,CAqGA;;AArGA;AAzSA,CAAA","sourcesContent":["<template>\n  <div>\n    <div class=\"container-fluid\">\n      <div class=\"row ml-0 mr-0 bg-banner\" style=\"height: 500px\"></div>\n\n      <br />\n      <div class=\"col-md-12\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">\n            <diV class=\"form-group-row\">\n              <label class=\"col-sm-4 mt-1\">States</label>\n              <el-select\n                class=\"select-danger select-custom font-italic col-sm-8 rounded-0\"\n                v-model=\"stateSearch\"\n                :placeholder=\"'State'\"\n                :clearable=\"true\"\n                :filterable=\"true\"\n              >\n                <el-option\n                  v-for=\"item in listStates\"\n                  class=\"select-danger\"\n                  :value=\"item.name\"\n                  :label=\"item.name\"\n                  :key=\"item.name\"\n                ></el-option>\n              </el-select>\n            </diV>\n          </div>\n          <div class=\"col-md-3\">\n            <diV class=\"form-group-row\">\n              <label class=\"col-sm-4 mt-1\">Season</label>\n              <el-select\n                class=\"select-danger select-custom font-italic col-sm-8 rounded-0\"\n                v-model=\"seasonSearch\"\n                :placeholder=\"'Season'\"\n                :clearable=\"true\"\n                :filterable=\"true\"\n                @change=\"getListAirDates()\"\n              >\n                <el-option\n                  v-for=\"item in listSeasons\"\n                  class=\"select-danger\"\n                  :value=\"item.id\"\n                  :label=\"item.name\"\n                  :key=\"item.id\"\n                ></el-option>\n              </el-select>\n            </diV>\n          </div>\n          <div class=\"col-md-3\">\n            <diV class=\"form-group-row\">\n              <label class=\"col-sm-4 mt-1\">Air date</label>\n              <el-select\n                class=\"select-danger select-custom font-italic col-sm-8 rounded-0\"\n                v-model=\"airDateSearch\"\n                :placeholder=\"'Air date'\"\n                :clearable=\"true\"\n                :filterable=\"true\"\n              >\n                <el-option\n                  v-for=\"item in listAirDates\"\n                  class=\"select-danger\"\n                  :value=\"item.id\"\n                  :label=\"item.id\"\n                  :key=\"item.id\"\n                ></el-option>\n              </el-select>\n            </diV>\n          </div>\n          <div class=\"col-md-3\">\n            <diV class=\"form-group-row\">\n              <label class=\"col-sm-4 mt-1\">Status</label>\n              <el-select\n                class=\"select-danger select-custom font-italic col-sm-8 rounded-0\"\n                v-model=\"isWinnerSearch\"\n                :placeholder=\"'Status'\"\n                :clearable=\"true\"\n                :filterable=\"true\"\n              >\n                <el-option\n                  v-for=\"item in listIsWinners\"\n                  class=\"select-danger\"\n                  :value=\"item.id\"\n                  :label=\"item.name\"\n                  :key=\"item.id\"\n                ></el-option>\n              </el-select>\n            </diV>\n          </div>\n        </div>\n        <br />\n        <div class=\"row\">\n          <div class=\"col-md-4\"></div>\n          <div class=\"col-md-4 text-center\">\n            <base-button\n              type=\"primary\"\n              style=\"min-width: 120px\"\n              @click=\"commonSearch()\"\n              class=\"border-0 rounded-0 btn-custom\"\n              >{{ $t(\"grid.search\") }}</base-button\n            >\n            <base-button\n              type=\"primary\"\n              style=\"min-width: 120px\"\n              @click=\"removeFilter()\"\n              class=\"border-0 rounded-0 btn-custom\"\n              >{{ $t(\"grid.reset_filter\") }}</base-button\n            >\n          </div>\n        </div>\n        <br />\n      </div>\n\n      <div class=\"scrollbar-table\">\n        <base-table-custom :headers=\"headers\" :items=\"listContestants\">\n          <template v-slot:headers=\"props\">\n            <tr>\n              <th\n                v-for=\"(header, index) in props.headers\"\n                :key=\"index\"\n                class=\"text-center bg-primary-line text-white\"\n              >\n                {{ header.text }}\n              </th>\n            </tr>\n          </template>\n\n          <template v-slot:item=\"props\">\n            <td class=\"text-center\">\n              {{ (currentPage - 1) * perPage + (props.index + 1) }}\n            </td>\n            <td>{{ props.item.name }}</td>\n            <td>{{ props.item.occupation }}</td>\n            <td>{{ props.item.state }}</td>\n            <td class=\"text-right\">{{ props.item.season }}</td>\n            <td class=\"text-right\">{{ props.item.showNum }}</td>\n            <td class=\"text-center\">\n              {{ convertDateDbToDateClient(props.item.airDate) }}\n            </td>\n            <td>{{ convertIsWinner(props.item.isWinner) }}</td>\n          </template>\n          <template v-slot:noRecord v-if=\"totalRecords == 0\">\n            <td :colspan=\"headers.length\" class=\"text-center no-records\">\n              {{ $t(\"grid.no_records\") }}\n            </td>\n          </template>\n        </base-table-custom>\n      </div>\n\n      <base-pagination-custom\n        v-show=\"listContestants.length > 0\"\n        :total=\"totalRecords\"\n        :current-page=\"currentPage\"\n        @pagechanged=\"onPageChange\"\n        @changerowsperpage=\"onChangeRowsPerPage\"\n      ></base-pagination-custom>\n    </div>\n  </div>\n</template>\n<script>\nimport BaseComponent from \"../mixins/BaseComponent.js\";\nimport DateUtils from \"../mixins/DateUtils.js\";\nimport DatabaseService from \"../services/DatabaseService.js\";\n\nexport default {\n  name: \"contestants\",\n  mixins: [BaseComponent, DateUtils],\n  data() {\n    return {\n      //Header\n      headers: [\n        {\n          text: \"No\",\n        },\n        {\n          text: \"Name\",\n        },\n        {\n          text: \"Occupation\",\n        },\n        {\n          text: \"State\",\n        },\n        {\n          text: \"Season\",\n        },\n        {\n          text: \"Show number\",\n        },\n        {\n          text: \"Air date\",\n        },\n        {\n          text: \"Status\",\n        },\n      ],\n\n      // List\n      listContestants: [],\n      listStates: [\n        {\n          name: \"Alabama\",\n          abbreviation: \"AL\",\n        },\n        {\n          name: \"Alaska\",\n          abbreviation: \"AK\",\n        },\n        {\n          name: \"American Samoa\",\n          abbreviation: \"AS\",\n        },\n        {\n          name: \"Arizona\",\n          abbreviation: \"AZ\",\n        },\n        {\n          name: \"Arkansas\",\n          abbreviation: \"AR\",\n        },\n        {\n          name: \"California\",\n          abbreviation: \"CA\",\n        },\n        {\n          name: \"Colorado\",\n          abbreviation: \"CO\",\n        },\n        {\n          name: \"Connecticut\",\n          abbreviation: \"CT\",\n        },\n        {\n          name: \"Delaware\",\n          abbreviation: \"DE\",\n        },\n        {\n          name: \"District Of Columbia\",\n          abbreviation: \"DC\",\n        },\n        {\n          name: \"Federated States Of Micronesia\",\n          abbreviation: \"FM\",\n        },\n        {\n          name: \"Florida\",\n          abbreviation: \"FL\",\n        },\n        {\n          name: \"Georgia\",\n          abbreviation: \"GA\",\n        },\n        {\n          name: \"Guam\",\n          abbreviation: \"GU\",\n        },\n        {\n          name: \"Hawaii\",\n          abbreviation: \"HI\",\n        },\n        {\n          name: \"Idaho\",\n          abbreviation: \"ID\",\n        },\n        {\n          name: \"Illinois\",\n          abbreviation: \"IL\",\n        },\n        {\n          name: \"Indiana\",\n          abbreviation: \"IN\",\n        },\n        {\n          name: \"Iowa\",\n          abbreviation: \"IA\",\n        },\n        {\n          name: \"Kansas\",\n          abbreviation: \"KS\",\n        },\n        {\n          name: \"Kentucky\",\n          abbreviation: \"KY\",\n        },\n        {\n          name: \"Louisiana\",\n          abbreviation: \"LA\",\n        },\n        {\n          name: \"Maine\",\n          abbreviation: \"ME\",\n        },\n        {\n          name: \"Marshall Islands\",\n          abbreviation: \"MH\",\n        },\n        {\n          name: \"Maryland\",\n          abbreviation: \"MD\",\n        },\n        {\n          name: \"Massachusetts\",\n          abbreviation: \"MA\",\n        },\n        {\n          name: \"Michigan\",\n          abbreviation: \"MI\",\n        },\n        {\n          name: \"Minnesota\",\n          abbreviation: \"MN\",\n        },\n        {\n          name: \"Mississippi\",\n          abbreviation: \"MS\",\n        },\n        {\n          name: \"Missouri\",\n          abbreviation: \"MO\",\n        },\n        {\n          name: \"Montana\",\n          abbreviation: \"MT\",\n        },\n        {\n          name: \"Nebraska\",\n          abbreviation: \"NE\",\n        },\n        {\n          name: \"Nevada\",\n          abbreviation: \"NV\",\n        },\n        {\n          name: \"New Hampshire\",\n          abbreviation: \"NH\",\n        },\n        {\n          name: \"New Jersey\",\n          abbreviation: \"NJ\",\n        },\n        {\n          name: \"New Mexico\",\n          abbreviation: \"NM\",\n        },\n        {\n          name: \"New York\",\n          abbreviation: \"NY\",\n        },\n        {\n          name: \"North Carolina\",\n          abbreviation: \"NC\",\n        },\n        {\n          name: \"North Dakota\",\n          abbreviation: \"ND\",\n        },\n        {\n          name: \"Northern Mariana Islands\",\n          abbreviation: \"MP\",\n        },\n        {\n          name: \"Ohio\",\n          abbreviation: \"OH\",\n        },\n        {\n          name: \"Oklahoma\",\n          abbreviation: \"OK\",\n        },\n        {\n          name: \"Oregon\",\n          abbreviation: \"OR\",\n        },\n        {\n          name: \"Palau\",\n          abbreviation: \"PW\",\n        },\n        {\n          name: \"Pennsylvania\",\n          abbreviation: \"PA\",\n        },\n        {\n          name: \"Puerto Rico\",\n          abbreviation: \"PR\",\n        },\n        {\n          name: \"Rhode Island\",\n          abbreviation: \"RI\",\n        },\n        {\n          name: \"South Carolina\",\n          abbreviation: \"SC\",\n        },\n        {\n          name: \"South Dakota\",\n          abbreviation: \"SD\",\n        },\n        {\n          name: \"Tennessee\",\n          abbreviation: \"TN\",\n        },\n        {\n          name: \"Texas\",\n          abbreviation: \"TX\",\n        },\n        {\n          name: \"Utah\",\n          abbreviation: \"UT\",\n        },\n        {\n          name: \"Vermont\",\n          abbreviation: \"VT\",\n        },\n        {\n          name: \"Virgin Islands\",\n          abbreviation: \"VI\",\n        },\n        {\n          name: \"Virginia\",\n          abbreviation: \"VA\",\n        },\n        {\n          name: \"Washington\",\n          abbreviation: \"WA\",\n        },\n        {\n          name: \"West Virginia\",\n          abbreviation: \"WV\",\n        },\n        {\n          name: \"Wisconsin\",\n          abbreviation: \"WI\",\n        },\n        {\n          name: \"Wyoming\",\n          abbreviation: \"WY\",\n        },\n      ],\n      listSeasons: [],\n      listAirDates: [{}],\n      listIsWinners: [\n        {\n          id: 0,\n          name: \"LOSE\",\n        },\n        {\n          id: 1,\n          name: \"WIN\",\n        },\n      ],\n\n      stateSearch: null,\n      seasonSearch: null,\n      airDateSearch: null,\n      isWinnerSearch: null,\n    };\n  },\n  created() {\n    this.getList();\n    this.getListSeasons();\n  },\n\n  methods: {\n    // -------------------------------------- VIEW ------------------------------------------//\n    commonSearch() {\n      this.currentPage = 1;\n      this.getList();\n    },\n\n    getList() {\n      let params = {\n        state: this.stateSearch,\n        season: this.seasonSearch,\n        airDate: this.airDateSearch,\n        isWinner: this.isWinnerSearch,\n        skip: (this.currentPage - 1) * this.perPage,\n        take: this.perPage,\n      };\n\n      this.showLoading();\n      DatabaseService.getList(params)\n        .then((response) => {\n          if (response) {\n            this.listContestants = response.data.list;\n            this.totalRecords = response.data.totalRecords;\n          }\n        })\n        .catch(() => {\n          this.listContestants = [];\n          this.$notify({\n            type: \"danger\",\n            message: this.$i18n.t(\"common.error_connection\"),\n          });\n        })\n        .finally(() => {\n          this.hideLoading();\n        });\n    },\n\n    getListSeasons() {\n      for (let i = 37; i >= 1; i--) {\n        this.listSeasons.push({\n          id: i,\n          name: \"Season \" + i,\n        });\n      }\n    },\n\n    getListAirDates() {\n      this.listAirDates = [{}];\n      this.airDateSearch = null;\n\n      let params = {\n        season: this.seasonSearch,\n      };\n\n      DatabaseService.getListAirDates(params)\n        .then((response) => {\n          if (response) {\n            this.listAirDates = [];\n            for (let i = 0; i < response.data.list.length; i++) {\n              this.listAirDates.push({\n                id: this.convertDateDbToDateClient(\n                  response.data.list[i].airDate\n                ),\n              });\n            }\n          }\n        })\n        .catch(() => {\n          this.listAirDates = [{}];\n        });\n    },\n\n    removeFilter() {\n      this.stateSearch = null;\n      this.seasonSearch = null;\n      this.airDateSearch = null;\n      this.isWinnerSearch = null;\n    },\n\n    convertIsWinner(item) {\n      switch (item) {\n        case 0:\n          return \"LOSE\";\n        case 1:\n          return \"WIN\";\n        default:\n          return \"undefined\";\n      }\n    },\n\n    onPageChange(page) {\n      this.currentPage = page;\n      this.getList();\n    },\n\n    onChangeRowsPerPage(rowsPerPage) {\n      this.currentPage = 1;\n      this.perPage = rowsPerPage;\n      this.getList();\n    },\n\n    // ------------------------------------END VIEW ------------------------------------------//\n  },\n};\n</script>\n<style></style>\n"],"sourceRoot":"src/views"}]}