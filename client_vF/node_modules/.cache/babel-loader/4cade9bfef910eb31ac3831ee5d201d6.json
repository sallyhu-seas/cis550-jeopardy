{"remainingRequest":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/babel-loader/lib/index.js!/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/datnguyen/Documents/GitHub/cis550project/client/src/components/DropdownCustom.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/src/components/DropdownCustom.vue","mtime":1606886486773},{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"dropdown-custom\",\n  props: {\n    direction: {\n      type: String,\n      default: \"down\"\n    },\n    title: {\n      type: String,\n      description: \"Dropdown title\"\n    },\n    icon: {\n      type: String,\n      description: \"Icon for dropdown title\"\n    },\n    position: {\n      type: String,\n      description: \"Position of dropdown menu (e.g right|left)\"\n    },\n    menuClasses: {\n      type: [String, Object],\n      description: \"Dropdown menu classes\"\n    },\n    hideArrow: {\n      type: Boolean,\n      description: \"Whether dropdown arrow should be hidden\"\n    },\n    appendToBody: {\n      type: Boolean,\n      default: true,\n      description: \"Whether dropdown should be appended to document body\"\n    },\n    tag: {\n      type: String,\n      default: \"li\",\n      description: \"Dropdown html tag (e.g div, li etc)\"\n    }\n  },\n  data: function data() {\n    return {\n      isOpen: false\n    };\n  },\n  methods: {\n    toggleDropDown: function toggleDropDown() {\n      this.isOpen = !this.isOpen;\n      this.$emit(\"change\", this.isOpen);\n    },\n    closeDropDown: function closeDropDown() {\n      this.isOpen = false;\n      this.$emit(\"change\", this.isOpen);\n    }\n  }\n};",{"version":3,"sources":["DropdownCustom.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,eAAA;AACA,EAAA,IAAA,EAAA,iBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,WAAA,EAAA;AAFA,KALA;AASA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,WAAA,EAAA;AAFA,KATA;AAaA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,WAAA,EAAA;AAFA,KAbA;AAiBA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA,CADA;AAEA,MAAA,WAAA,EAAA;AAFA,KAjBA;AAqBA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,WAAA,EAAA;AAFA,KArBA;AAyBA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA,IAFA;AAGA,MAAA,WAAA,EAAA;AAHA,KAzBA;AA8BA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,IAFA;AAGA,MAAA,WAAA,EAAA;AAHA;AA9BA,GAFA;AAsCA,EAAA,IAtCA,kBAsCA;AACA,WAAA;AACA,MAAA,MAAA,EAAA;AADA,KAAA;AAGA,GA1CA;AA2CA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,4BACA;AACA,WAAA,MAAA,GAAA,CAAA,KAAA,MAAA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,KAAA,MAAA;AACA,KAJA;AAKA,IAAA,aALA,2BAKA;AACA,WAAA,MAAA,GAAA,KAAA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,KAAA,MAAA;AACA;AARA;AA3CA,CAAA","sourcesContent":["<template>\n  <component\n    class=\"dropdown font-size-13\"\n    :is=\"tag\"\n    :class=\"[\n      { show: isOpen },\n      { dropdown: direction === 'down' },\n      { dropup: direction === 'up' },\n    ]\"\n    aria-haspopup=\"true\"\n    :aria-expanded=\"isOpen\"\n    @click.stop=\"toggleDropDown\"\n    v-click-outside=\"closeDropDown\"\n  >\n    <slot name=\"title\"></slot>\n    <ul\n      class=\"dropdown-menu font-size-13\"\n      ref=\"menu\"\n      :class=\"[\n        { 'dropdown-menu-right': position === 'right' },\n        { show: isOpen },\n        menuClasses,\n      ]\"\n    >\n      <slot name=\"item\"> </slot>\n    </ul>\n  </component>\n</template>\n<script>\nexport default {\n  name: \"dropdown-custom\",\n  props: {\n    direction: {\n      type: String,\n      default: \"down\",\n    },\n    title: {\n      type: String,\n      description: \"Dropdown title\",\n    },\n    icon: {\n      type: String,\n      description: \"Icon for dropdown title\",\n    },\n    position: {\n      type: String,\n      description: \"Position of dropdown menu (e.g right|left)\",\n    },\n    menuClasses: {\n      type: [String, Object],\n      description: \"Dropdown menu classes\",\n    },\n    hideArrow: {\n      type: Boolean,\n      description: \"Whether dropdown arrow should be hidden\",\n    },\n    appendToBody: {\n      type: Boolean,\n      default: true,\n      description: \"Whether dropdown should be appended to document body\",\n    },\n    tag: {\n      type: String,\n      default: \"li\",\n      description: \"Dropdown html tag (e.g div, li etc)\",\n    },\n  },\n  data() {\n    return {\n      isOpen: false,\n    };\n  },\n  methods: {\n    toggleDropDown() {\n      this.isOpen = !this.isOpen;\n      this.$emit(\"change\", this.isOpen);\n    },\n    closeDropDown() {\n      this.isOpen = false;\n      this.$emit(\"change\", this.isOpen);\n    },\n  },\n};\n</script>\n<style>\n.dropdown {\n  list-style-type: none;\n}\n\n.dropdown .dropdown-toggle {\n  cursor: pointer;\n}\n</style>\n"],"sourceRoot":"src/components"}]}