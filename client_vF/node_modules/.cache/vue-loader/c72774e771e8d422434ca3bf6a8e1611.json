{"remainingRequest":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\src\\views\\Contestant.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\src\\views\\Contestant.vue","mtime":1606939597265},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport BarChart from \"@/components/Charts/BarChart\";\r\nimport ContestantService from \"../services/ContestantService.js\";\r\nimport \"vue-tableau\";\r\n\r\nexport default {\r\n  components: {\r\n    BarChart,\r\n  },\r\n  data() {\r\n    return {\r\n      occupation: {\r\n        chartData: {},\r\n      },\r\n      state: {\r\n        chartData: {},\r\n      },\r\n      mainText: \"\",\r\n      subText: \"\",\r\n      occupationText: \"\",\r\n      stateText: \"\"\r\n    };\r\n  },\r\n  created() {\r\n    this.getConfigurations();\r\n    this.getWinnersByOccupation();\r\n    this.getWinnersByState();\r\n  },\r\n  methods: {\r\n    getWinnersByOccupation() {\r\n      let params = {\r\n        take: 20,\r\n      };\r\n\r\n      ContestantService.getTopWinnersByOccupation(params)\r\n        .then((response) => {\r\n          if (response) {\r\n            let labels = [];\r\n            let data = [];\r\n\r\n            for (let i = 0; i < response.data.list.length; i++) {\r\n              labels.push(response.data.list[i].occupation);\r\n              data.push(response.data.list[i].totalWinners);\r\n            }\r\n\r\n            this.occupation = {\r\n              chartData: {\r\n                labels: labels,\r\n                datasets: [\r\n                  {\r\n                    label: \"Winners\",\r\n                    data: data,\r\n                  },\r\n                ],\r\n              },\r\n            };\r\n          }\r\n        })\r\n        .catch(() => {});\r\n    },\r\n\r\n    getWinnersByState() {\r\n      let params = {\r\n        take: 20,\r\n      };\r\n\r\n      ContestantService.getTopWinnersByState(params)\r\n        .then((response) => {\r\n          if (response) {\r\n            let labels = [];\r\n            let data = [];\r\n\r\n            for (let i = 0; i < response.data.list.length; i++) {\r\n              labels.push(response.data.list[i].state);\r\n              data.push(response.data.list[i].totalWinners);\r\n            }\r\n\r\n            this.state = {\r\n              chartData: {\r\n                labels: labels,\r\n                datasets: [\r\n                  {\r\n                    label: \"Winners\",\r\n                    data: data,\r\n                  },\r\n                ],\r\n              },\r\n            };\r\n          }\r\n        })\r\n        .catch(() => {});\r\n    },\r\n\r\n    getConfigurations() {\r\n      ContestantService.getConfigurations()\r\n        .then((response) => {\r\n          if (response) {\r\n            for (let i = 0; i < response.data.list.length; i++) {\r\n              if (response.data.list[i].code == \"MAIN-CONTESTANTS\") {\r\n                this.mainText = response.data.list[i].value;\r\n              }\r\n              if (response.data.list[i].code == \"SUB-CONTESTANTS\") {\r\n                this.subText = response.data.list[i].value;\r\n              }\r\n              if (response.data.list[i].code == \"WINNER-OCCUPATION\") {\r\n                this.occupationText = response.data.list[i].value;\r\n              }\r\n              if (response.data.list[i].code == \"WINNER-STATE\") {\r\n                this.stateText = response.data.list[i].value;\r\n              }\r\n            }\r\n          }\r\n        })\r\n        .catch(() => {});\r\n    },\r\n  },\r\n};\r\n",{"version":3,"sources":["Contestant.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"Contestant.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row ml-0 mr-0 bg-banner\" style=\"height: 250px\"></div>\r\n\r\n    <div class=\"row ml-0 mr-0\">\r\n      <div class=\"col-md-12 mt-2 mb-2\">\r\n        <center>\r\n          <h1>\r\n            {{ mainText }}\r\n              <h2>\r\n              {{ subText }}\r\n              </h2>\r\n          </h1>\r\n        </center>\r\n        <h3>\r\n          {{ occupationText }}\r\n        </h3>\r\n\r\n        <card header-classes=\"bg-transparent pt-3\">\r\n          <div slot=\"header\" class=\"row align-items-center\">\r\n            <div class=\"col\">\r\n              <h6 class=\"text-uppercase text-muted ls-1 mb-1\">Winners</h6>\r\n              <h5 class=\"h3 mb-0\">By Occupation</h5>\r\n            </div>\r\n          </div>\r\n\r\n          <bar-chart\r\n            :height=\"350\"\r\n            ref=\"barChart\"\r\n            :chart-data=\"occupation.chartData\"\r\n          >\r\n          </bar-chart>\r\n        </card>\r\n      </div>\r\n\r\n      <div class=\"col-md-12 mt-2 mb-2\">\r\n        <h3>\r\n          {{ stateText }}\r\n        </h3>\r\n\r\n        <card header-classes=\"bg-transparent pt-3\">\r\n          <div slot=\"header\" class=\"row align-items-center\">\r\n            <div class=\"col\">\r\n              <h6 class=\"text-uppercase text-muted ls-1 mb-1\">Top Winners</h6>\r\n              <h5 class=\"h3 mb-0\">By Longest, Consecutive Winning Streak</h5>\r\n            </div>\r\n          </div>\r\n\r\n          <bar-chart :height=\"350\" ref=\"barChart\" :chart-data=\"state.chartData\">\r\n          </bar-chart>\r\n        </card>\r\n      </div>\r\n\r\n      <div class=\"col-md-12 mt-2 mb-2\">\r\n        <Tableau\r\n          url=\"https://public.tableau.com/shared/HRX9FWBF3?:display_count=y&:origin=viz_share_link\"\r\n          :height=\"1000\"\r\n          :width=\"2000\"\r\n          ref=\"tableau\"\r\n        >\r\n        </Tableau>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport BarChart from \"@/components/Charts/BarChart\";\r\nimport ContestantService from \"../services/ContestantService.js\";\r\nimport \"vue-tableau\";\r\n\r\nexport default {\r\n  components: {\r\n    BarChart,\r\n  },\r\n  data() {\r\n    return {\r\n      occupation: {\r\n        chartData: {},\r\n      },\r\n      state: {\r\n        chartData: {},\r\n      },\r\n      mainText: \"\",\r\n      subText: \"\",\r\n      occupationText: \"\",\r\n      stateText: \"\"\r\n    };\r\n  },\r\n  created() {\r\n    this.getConfigurations();\r\n    this.getWinnersByOccupation();\r\n    this.getWinnersByState();\r\n  },\r\n  methods: {\r\n    getWinnersByOccupation() {\r\n      let params = {\r\n        take: 20,\r\n      };\r\n\r\n      ContestantService.getTopWinnersByOccupation(params)\r\n        .then((response) => {\r\n          if (response) {\r\n            let labels = [];\r\n            let data = [];\r\n\r\n            for (let i = 0; i < response.data.list.length; i++) {\r\n              labels.push(response.data.list[i].occupation);\r\n              data.push(response.data.list[i].totalWinners);\r\n            }\r\n\r\n            this.occupation = {\r\n              chartData: {\r\n                labels: labels,\r\n                datasets: [\r\n                  {\r\n                    label: \"Winners\",\r\n                    data: data,\r\n                  },\r\n                ],\r\n              },\r\n            };\r\n          }\r\n        })\r\n        .catch(() => {});\r\n    },\r\n\r\n    getWinnersByState() {\r\n      let params = {\r\n        take: 20,\r\n      };\r\n\r\n      ContestantService.getTopWinnersByState(params)\r\n        .then((response) => {\r\n          if (response) {\r\n            let labels = [];\r\n            let data = [];\r\n\r\n            for (let i = 0; i < response.data.list.length; i++) {\r\n              labels.push(response.data.list[i].state);\r\n              data.push(response.data.list[i].totalWinners);\r\n            }\r\n\r\n            this.state = {\r\n              chartData: {\r\n                labels: labels,\r\n                datasets: [\r\n                  {\r\n                    label: \"Winners\",\r\n                    data: data,\r\n                  },\r\n                ],\r\n              },\r\n            };\r\n          }\r\n        })\r\n        .catch(() => {});\r\n    },\r\n\r\n    getConfigurations() {\r\n      ContestantService.getConfigurations()\r\n        .then((response) => {\r\n          if (response) {\r\n            for (let i = 0; i < response.data.list.length; i++) {\r\n              if (response.data.list[i].code == \"MAIN-CONTESTANTS\") {\r\n                this.mainText = response.data.list[i].value;\r\n              }\r\n              if (response.data.list[i].code == \"SUB-CONTESTANTS\") {\r\n                this.subText = response.data.list[i].value;\r\n              }\r\n              if (response.data.list[i].code == \"WINNER-OCCUPATION\") {\r\n                this.occupationText = response.data.list[i].value;\r\n              }\r\n              if (response.data.list[i].code == \"WINNER-STATE\") {\r\n                this.stateText = response.data.list[i].value;\r\n              }\r\n            }\r\n          }\r\n        })\r\n        .catch(() => {});\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style></style>\r\n"]}]}