{"remainingRequest":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\src\\components\\BaseNav.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\src\\components\\BaseNav.vue","mtime":1606920603935},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport NavbarToggleButton from \"./NavbarToggleButton\";\r\n\r\nexport default {\r\n  name: \"base-nav\",\r\n  components: {\r\n    NavbarToggleButton,\r\n  },\r\n  props: {\r\n    type: {\r\n      type: String,\r\n      default: \"\",\r\n      description: \"Navbar type (e.g default, primary etc)\",\r\n    },\r\n    title: {\r\n      type: String,\r\n      default: \"\",\r\n      description: \"Title of navbar\",\r\n    },\r\n    contentId: {\r\n      type: [String, Number],\r\n      default: Math.random().toString(),\r\n      description:\r\n        \"Explicit id for the menu. By default it's a generated random number\",\r\n    },\r\n    containerClasses: {\r\n      type: [String, Object, Array],\r\n      default: \"container-fluid\",\r\n    },\r\n    transparent: {\r\n      type: Boolean,\r\n      default: false,\r\n      description: \"Whether navbar is transparent\",\r\n    },\r\n    expand: {\r\n      type: Boolean,\r\n      default: false,\r\n      description: \"Whether navbar should contain `navbar-expand-lg` class\",\r\n    },\r\n    showToggleButton: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      toggled: true,\r\n    };\r\n  },\r\n  methods: {\r\n    closeMenu() {\r\n      this.toggled = false;\r\n    },\r\n  },\r\n};\r\n",{"version":3,"sources":["BaseNav.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BaseNav.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <nav\r\n    class=\"navbar\"\r\n    :class=\"[\r\n            {'navbar-expand-md': expand},\r\n            {'navbar-transparent': transparent},\r\n            {[`bg-${type}`]: type}\r\n         ]\"\r\n  >\r\n    <div :class=\"containerClasses\">\r\n      <navbar-toggle-button v-if=\"showToggleButton\" :toggled=\"toggled\" :target=\"contentId\"\r\n     >\r\n        <slot :close-menu=\"closeMenu\"></slot>\r\n      </navbar-toggle-button>\r\n      <navbar-toggle-button v-if=\"showToggleButton\" >\r\n        <slot name=\"user-info\"></slot>\r\n      </navbar-toggle-button>\r\n\r\n\r\n      <!-- Quan edit -->\r\n      <!-- <slot name=\"brand\">\r\n                <router-link\r\n                        :to=\"$route.path\"\r\n                        class=\"h4 mb-0 text-white text-uppercase d-none d-lg-inline-block\"\r\n                >\r\n                    {{$route.name}}\r\n                </router-link>\r\n      </slot>-->\r\n      <!-- end Quan edit -->\r\n      <div class=\"collapse navbar-collapse\" :id=\"contentId\" v-click-outside=\"closeMenu\">\r\n        <slot :close-menu=\"closeMenu\"></slot>\r\n        <!-- <i class=\"fa fa-user text-white\"></i> -->\r\n      </div>\r\n    </div>\r\n  </nav>\r\n</template>\r\n<script>\r\nimport NavbarToggleButton from \"./NavbarToggleButton\";\r\n\r\nexport default {\r\n  name: \"base-nav\",\r\n  components: {\r\n    NavbarToggleButton,\r\n  },\r\n  props: {\r\n    type: {\r\n      type: String,\r\n      default: \"\",\r\n      description: \"Navbar type (e.g default, primary etc)\",\r\n    },\r\n    title: {\r\n      type: String,\r\n      default: \"\",\r\n      description: \"Title of navbar\",\r\n    },\r\n    contentId: {\r\n      type: [String, Number],\r\n      default: Math.random().toString(),\r\n      description:\r\n        \"Explicit id for the menu. By default it's a generated random number\",\r\n    },\r\n    containerClasses: {\r\n      type: [String, Object, Array],\r\n      default: \"container-fluid\",\r\n    },\r\n    transparent: {\r\n      type: Boolean,\r\n      default: false,\r\n      description: \"Whether navbar is transparent\",\r\n    },\r\n    expand: {\r\n      type: Boolean,\r\n      default: false,\r\n      description: \"Whether navbar should contain `navbar-expand-lg` class\",\r\n    },\r\n    showToggleButton: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      toggled: true,\r\n    };\r\n  },\r\n  methods: {\r\n    closeMenu() {\r\n      this.toggled = false;\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style>\r\n</style>"]}]}