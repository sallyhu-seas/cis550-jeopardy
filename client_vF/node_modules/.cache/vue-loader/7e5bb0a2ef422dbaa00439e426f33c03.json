{"remainingRequest":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/datnguyen/Documents/GitHub/cis550project/client/src/views/Question.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/src/views/Question.vue","mtime":1606886486786},{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport BarChart from \"@/components/Charts/BarChart\";\nimport QuestionService from \"../services/QuestionService.js\";\n\nexport default {\n  components: {\n    BarChart,\n  },\n  data() {\n    return {\n      category: {\n        chartData: {},\n      },\n      answer: {\n        chartData: {},\n      },\n      categoryText: \"\",\n      answerText: \"\",\n    };\n  },\n  created() {\n    this.getConfigurations();\n    this.getQuestionsByCategory();\n    this.getQuestionsByAnswer();\n  },\n  methods: {\n    getQuestionsByCategory() {\n      let params = {\n        take: 20,\n      };\n\n      QuestionService.getTopQuestionsByCategory(params)\n        .then((response) => {\n          if (response) {\n            let labels = [];\n            let data = [];\n\n            for (let i = 0; i < response.data.list.length; i++) {\n              labels.push(response.data.list[i].category);\n              data.push(response.data.list[i].totalQuestions);\n            }\n\n            this.category = {\n              chartData: {\n                labels: labels,\n                datasets: [\n                  {\n                    label: \"Questions\",\n                    data: data,\n                  },\n                ],\n              },\n            };\n          }\n        })\n        .catch(() => {});\n    },\n\n    getQuestionsByAnswer() {\n      let params = {\n        take: 20,\n      };\n\n      QuestionService.getTopQuestionsByAnswer(params)\n        .then((response) => {\n          if (response) {\n            let labels = [];\n            let data = [];\n\n            for (let i = 0; i < response.data.list.length; i++) {\n              labels.push(response.data.list[i].answer);\n              data.push(response.data.list[i].totalQuestions);\n            }\n\n            this.answer = {\n              chartData: {\n                labels: labels,\n                datasets: [\n                  {\n                    label: \"Questions\",\n                    data: data,\n                  },\n                ],\n              },\n            };\n          }\n        })\n        .catch(() => {});\n    },\n\n    getConfigurations() {\n      QuestionService.getConfigurations()\n        .then((response) => {\n          if (response) {\n            for (let i = 0; i < response.data.list.length; i++) {\n              if (response.data.list[i].code == \"QUESTION-CATEGORY\") {\n                this.categoryText = response.data.list[i].value;\n              }\n              if (response.data.list[i].code == \"QUESTION-ANSWER\") {\n                this.answerText = response.data.list[i].value;\n              }\n            }\n          }\n        })\n        .catch(() => {});\n    },\n  },\n};\n",{"version":3,"sources":["Question.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Question.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"container-fluid\">\n    <div class=\"row ml-0 mr-0 bg-banner\" style=\"height: 500px\"></div>\n\n    <div class=\"row ml-0 mr-0\">\n      <div class=\"col-md-12 mt-2 mb-2\">\n        <h3>{{ categoryText }}</h3>\n\n        <card header-classes=\"bg-transparent pt-3\">\n          <div slot=\"header\" class=\"row align-items-center\">\n            <div class=\"col\">\n              <h6 class=\"text-uppercase text-muted ls-1 mb-1\">Category</h6>\n              <h5 class=\"h3 mb-0\">Total questions</h5>\n            </div>\n          </div>\n\n          <bar-chart\n            :height=\"350\"\n            ref=\"barChart\"\n            :chart-data=\"category.chartData\"\n          >\n          </bar-chart>\n        </card>\n      </div>\n\n      <div class=\"col-md-12 mt-2 mb-2\">\n        <h3>{{ answerText }}</h3>\n\n        <card header-classes=\"bg-transparent pt-3\">\n          <div slot=\"header\" class=\"row align-items-center\">\n            <div class=\"col\">\n              <h6 class=\"text-uppercase text-muted ls-1 mb-1\">Answer</h6>\n              <h5 class=\"h3 mb-0\">Total questions</h5>\n            </div>\n          </div>\n\n          <bar-chart\n            :height=\"350\"\n            ref=\"barChart\"\n            :chart-data=\"answer.chartData\"\n          >\n          </bar-chart>\n        </card>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport BarChart from \"@/components/Charts/BarChart\";\nimport QuestionService from \"../services/QuestionService.js\";\n\nexport default {\n  components: {\n    BarChart,\n  },\n  data() {\n    return {\n      category: {\n        chartData: {},\n      },\n      answer: {\n        chartData: {},\n      },\n      categoryText: \"\",\n      answerText: \"\",\n    };\n  },\n  created() {\n    this.getConfigurations();\n    this.getQuestionsByCategory();\n    this.getQuestionsByAnswer();\n  },\n  methods: {\n    getQuestionsByCategory() {\n      let params = {\n        take: 20,\n      };\n\n      QuestionService.getTopQuestionsByCategory(params)\n        .then((response) => {\n          if (response) {\n            let labels = [];\n            let data = [];\n\n            for (let i = 0; i < response.data.list.length; i++) {\n              labels.push(response.data.list[i].category);\n              data.push(response.data.list[i].totalQuestions);\n            }\n\n            this.category = {\n              chartData: {\n                labels: labels,\n                datasets: [\n                  {\n                    label: \"Questions\",\n                    data: data,\n                  },\n                ],\n              },\n            };\n          }\n        })\n        .catch(() => {});\n    },\n\n    getQuestionsByAnswer() {\n      let params = {\n        take: 20,\n      };\n\n      QuestionService.getTopQuestionsByAnswer(params)\n        .then((response) => {\n          if (response) {\n            let labels = [];\n            let data = [];\n\n            for (let i = 0; i < response.data.list.length; i++) {\n              labels.push(response.data.list[i].answer);\n              data.push(response.data.list[i].totalQuestions);\n            }\n\n            this.answer = {\n              chartData: {\n                labels: labels,\n                datasets: [\n                  {\n                    label: \"Questions\",\n                    data: data,\n                  },\n                ],\n              },\n            };\n          }\n        })\n        .catch(() => {});\n    },\n\n    getConfigurations() {\n      QuestionService.getConfigurations()\n        .then((response) => {\n          if (response) {\n            for (let i = 0; i < response.data.list.length; i++) {\n              if (response.data.list[i].code == \"QUESTION-CATEGORY\") {\n                this.categoryText = response.data.list[i].value;\n              }\n              if (response.data.list[i].code == \"QUESTION-ANSWER\") {\n                this.answerText = response.data.list[i].value;\n              }\n            }\n          }\n        })\n        .catch(() => {});\n    },\n  },\n};\n</script>\n<style></style>\n"]}]}