{"remainingRequest":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/datnguyen/Documents/GitHub/cis550project/client/src/components/SidebarPlugin/SidebarItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/src/components/SidebarPlugin/SidebarItem.vue","mtime":1606886486775},{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: \"sidebar-item\",\n  props: {\n    link: {\n      type: Object,\n      default: () => {\n        return {\n          id: \"\",\n          name: \"\",\n          path: \"\",\n          children: []\n        };\n      },\n      description:\n        \"Sidebar link. Can contain name, path, icon and other attributes. See examples for more info\"\n    }\n  },\n  inject: {\n    autoClose: {\n      default: true\n    }\n  },\n  data() {\n    return {\n      children: [],\n      collapsed: true\n    };\n  },\n  methods: {\n    linkClick() {\n      if (\n        this.autoClose &&\n        this.$sidebar &&\n        this.$sidebar.showSidebar === true\n      ) {\n        this.$sidebar.displaySidebar(false);\n      }\n    }\n  }\n};\n",{"version":3,"sources":["SidebarItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SidebarItem.vue","sourceRoot":"src/components/SidebarPlugin","sourcesContent":["<template>\n  <li class=\"nav-item\">\n    <router-link\n      :to=\"link.path\"\n      @click.native=\"linkClick\"\n      class=\"nav-link\"\n      :target=\"link.target\"\n      :href=\"link.path\"\n    >\n      <template>\n        <i :class=\"link.icon\"></i>\n        <span class=\"nav-link-text\">{{ link.name }}</span>\n      </template>\n    </router-link>\n  </li>\n</template>\n<script>\nexport default {\n  name: \"sidebar-item\",\n  props: {\n    link: {\n      type: Object,\n      default: () => {\n        return {\n          id: \"\",\n          name: \"\",\n          path: \"\",\n          children: []\n        };\n      },\n      description:\n        \"Sidebar link. Can contain name, path, icon and other attributes. See examples for more info\"\n    }\n  },\n  inject: {\n    autoClose: {\n      default: true\n    }\n  },\n  data() {\n    return {\n      children: [],\n      collapsed: true\n    };\n  },\n  methods: {\n    linkClick() {\n      if (\n        this.autoClose &&\n        this.$sidebar &&\n        this.$sidebar.showSidebar === true\n      ) {\n        this.$sidebar.displaySidebar(false);\n      }\n    }\n  }\n};\n</script>\n"]}]}