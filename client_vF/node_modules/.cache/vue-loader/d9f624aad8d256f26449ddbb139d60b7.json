{"remainingRequest":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\src\\components\\BaseRadio.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\src\\components\\BaseRadio.vue","mtime":1606920603938},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { randomString } from \"./stringUtils\";\r\nexport default {\r\n  name: \"base-radio\",\r\n  props: {\r\n    name: {\r\n      type: [String, Number],\r\n      description: \"Radio label\"\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      description: \"Whether radio is disabled\"\r\n    },\r\n    value: {},\r\n    inline: {\r\n      type: Boolean,\r\n      description: \"Whether radio is inline\"\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      cbId: \"\"\r\n    };\r\n  },\r\n  computed: {\r\n    model: {\r\n      get() {\r\n        return this.value;\r\n      },\r\n      set(value) {\r\n        this.$emit(\"input\", value);\r\n      }\r\n    },\r\n    inlineClass() {\r\n      if (this.inline) {\r\n        return `form-check-inline`;\r\n      }\r\n      return \"\";\r\n    }\r\n  },\r\n  mounted() {\r\n    this.cbId = randomString()\r\n  }\r\n};\r\n",{"version":3,"sources":["BaseRadio.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BaseRadio.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"custom-control custom-radio\" :class=\"[inlineClass, {disabled: disabled}]\">\r\n    <input :id=\"cbId\"\r\n           class=\"custom-control-input\"\r\n           type=\"radio\"\r\n           :disabled=\"disabled\"\r\n           :value=\"name\"\r\n           v-model=\"model\" />\r\n    <label :for=\"cbId\" class=\"custom-control-label\">\r\n      <slot></slot>\r\n    </label>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { randomString } from \"./stringUtils\";\r\nexport default {\r\n  name: \"base-radio\",\r\n  props: {\r\n    name: {\r\n      type: [String, Number],\r\n      description: \"Radio label\"\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      description: \"Whether radio is disabled\"\r\n    },\r\n    value: {},\r\n    inline: {\r\n      type: Boolean,\r\n      description: \"Whether radio is inline\"\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      cbId: \"\"\r\n    };\r\n  },\r\n  computed: {\r\n    model: {\r\n      get() {\r\n        return this.value;\r\n      },\r\n      set(value) {\r\n        this.$emit(\"input\", value);\r\n      }\r\n    },\r\n    inlineClass() {\r\n      if (this.inline) {\r\n        return `form-check-inline`;\r\n      }\r\n      return \"\";\r\n    }\r\n  },\r\n  mounted() {\r\n    this.cbId = randomString()\r\n  }\r\n};\r\n</script>\r\n"]}]}