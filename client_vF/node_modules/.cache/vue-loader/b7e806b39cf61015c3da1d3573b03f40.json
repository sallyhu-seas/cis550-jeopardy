{"remainingRequest":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\src\\components\\DropdownCustom.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\src\\components\\DropdownCustom.vue","mtime":1606920603948},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sally\\OneDrive\\Documents\\GitHub\\cis550-jeopardy\\client_vF\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  name: \"dropdown-custom\",\r\n  props: {\r\n    direction: {\r\n      type: String,\r\n      default: \"down\",\r\n    },\r\n    title: {\r\n      type: String,\r\n      description: \"Dropdown title\",\r\n    },\r\n    icon: {\r\n      type: String,\r\n      description: \"Icon for dropdown title\",\r\n    },\r\n    position: {\r\n      type: String,\r\n      description: \"Position of dropdown menu (e.g right|left)\",\r\n    },\r\n    menuClasses: {\r\n      type: [String, Object],\r\n      description: \"Dropdown menu classes\",\r\n    },\r\n    hideArrow: {\r\n      type: Boolean,\r\n      description: \"Whether dropdown arrow should be hidden\",\r\n    },\r\n    appendToBody: {\r\n      type: Boolean,\r\n      default: true,\r\n      description: \"Whether dropdown should be appended to document body\",\r\n    },\r\n    tag: {\r\n      type: String,\r\n      default: \"li\",\r\n      description: \"Dropdown html tag (e.g div, li etc)\",\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      isOpen: false,\r\n    };\r\n  },\r\n  methods: {\r\n    toggleDropDown() {\r\n      this.isOpen = !this.isOpen;\r\n      this.$emit(\"change\", this.isOpen);\r\n    },\r\n    closeDropDown() {\r\n      this.isOpen = false;\r\n      this.$emit(\"change\", this.isOpen);\r\n    },\r\n  },\r\n};\r\n",{"version":3,"sources":["DropdownCustom.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DropdownCustom.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <component\r\n    class=\"dropdown font-size-13\"\r\n    :is=\"tag\"\r\n    :class=\"[\r\n      { show: isOpen },\r\n      { dropdown: direction === 'down' },\r\n      { dropup: direction === 'up' },\r\n    ]\"\r\n    aria-haspopup=\"true\"\r\n    :aria-expanded=\"isOpen\"\r\n    @click.stop=\"toggleDropDown\"\r\n    v-click-outside=\"closeDropDown\"\r\n  >\r\n    <slot name=\"title\"></slot>\r\n    <ul\r\n      class=\"dropdown-menu font-size-13\"\r\n      ref=\"menu\"\r\n      :class=\"[\r\n        { 'dropdown-menu-right': position === 'right' },\r\n        { show: isOpen },\r\n        menuClasses,\r\n      ]\"\r\n    >\r\n      <slot name=\"item\"> </slot>\r\n    </ul>\r\n  </component>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"dropdown-custom\",\r\n  props: {\r\n    direction: {\r\n      type: String,\r\n      default: \"down\",\r\n    },\r\n    title: {\r\n      type: String,\r\n      description: \"Dropdown title\",\r\n    },\r\n    icon: {\r\n      type: String,\r\n      description: \"Icon for dropdown title\",\r\n    },\r\n    position: {\r\n      type: String,\r\n      description: \"Position of dropdown menu (e.g right|left)\",\r\n    },\r\n    menuClasses: {\r\n      type: [String, Object],\r\n      description: \"Dropdown menu classes\",\r\n    },\r\n    hideArrow: {\r\n      type: Boolean,\r\n      description: \"Whether dropdown arrow should be hidden\",\r\n    },\r\n    appendToBody: {\r\n      type: Boolean,\r\n      default: true,\r\n      description: \"Whether dropdown should be appended to document body\",\r\n    },\r\n    tag: {\r\n      type: String,\r\n      default: \"li\",\r\n      description: \"Dropdown html tag (e.g div, li etc)\",\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      isOpen: false,\r\n    };\r\n  },\r\n  methods: {\r\n    toggleDropDown() {\r\n      this.isOpen = !this.isOpen;\r\n      this.$emit(\"change\", this.isOpen);\r\n    },\r\n    closeDropDown() {\r\n      this.isOpen = false;\r\n      this.$emit(\"change\", this.isOpen);\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.dropdown {\r\n  list-style-type: none;\r\n}\r\n\r\n.dropdown .dropdown-toggle {\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"]}]}