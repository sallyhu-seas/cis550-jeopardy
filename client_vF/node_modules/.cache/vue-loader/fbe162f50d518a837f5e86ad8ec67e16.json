{"remainingRequest":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/datnguyen/Documents/GitHub/cis550project/client/src/views/Database.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/src/views/Database.vue","mtime":1606888098061},{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport BaseComponent from \"../mixins/BaseComponent.js\";\nimport DateUtils from \"../mixins/DateUtils.js\";\nimport DatabaseService from \"../services/DatabaseService.js\";\n\nexport default {\n  name: \"contestants\",\n  mixins: [BaseComponent, DateUtils],\n  data() {\n    return {\n      //Header\n      headers: [\n        {\n          text: \"No\",\n        },\n        {\n          text: \"Name\",\n        },\n        {\n          text: \"Occupation\",\n        },\n        {\n          text: \"State\",\n        },\n        {\n          text: \"Season\",\n        },\n        {\n          text: \"Show number\",\n        },\n        {\n          text: \"Airdate\",\n        },\n        {\n          text: \"Status\",\n        },\n      ],\n\n      // List\n      listContestants: [],\n      listStates: [\n        {\n          name: \"Alabama\",\n          abbreviation: \"AL\",\n        },\n        {\n          name: \"Alaska\",\n          abbreviation: \"AK\",\n        },\n        {\n          name: \"American Samoa\",\n          abbreviation: \"AS\",\n        },\n        {\n          name: \"Arizona\",\n          abbreviation: \"AZ\",\n        },\n        {\n          name: \"Arkansas\",\n          abbreviation: \"AR\",\n        },\n        {\n          name: \"California\",\n          abbreviation: \"CA\",\n        },\n        {\n          name: \"Colorado\",\n          abbreviation: \"CO\",\n        },\n        {\n          name: \"Connecticut\",\n          abbreviation: \"CT\",\n        },\n        {\n          name: \"Delaware\",\n          abbreviation: \"DE\",\n        },\n        {\n          name: \"District Of Columbia\",\n          abbreviation: \"DC\",\n        },\n        {\n          name: \"Federated States Of Micronesia\",\n          abbreviation: \"FM\",\n        },\n        {\n          name: \"Florida\",\n          abbreviation: \"FL\",\n        },\n        {\n          name: \"Georgia\",\n          abbreviation: \"GA\",\n        },\n        {\n          name: \"Guam\",\n          abbreviation: \"GU\",\n        },\n        {\n          name: \"Hawaii\",\n          abbreviation: \"HI\",\n        },\n        {\n          name: \"Idaho\",\n          abbreviation: \"ID\",\n        },\n        {\n          name: \"Illinois\",\n          abbreviation: \"IL\",\n        },\n        {\n          name: \"Indiana\",\n          abbreviation: \"IN\",\n        },\n        {\n          name: \"Iowa\",\n          abbreviation: \"IA\",\n        },\n        {\n          name: \"Kansas\",\n          abbreviation: \"KS\",\n        },\n        {\n          name: \"Kentucky\",\n          abbreviation: \"KY\",\n        },\n        {\n          name: \"Louisiana\",\n          abbreviation: \"LA\",\n        },\n        {\n          name: \"Maine\",\n          abbreviation: \"ME\",\n        },\n        {\n          name: \"Marshall Islands\",\n          abbreviation: \"MH\",\n        },\n        {\n          name: \"Maryland\",\n          abbreviation: \"MD\",\n        },\n        {\n          name: \"Massachusetts\",\n          abbreviation: \"MA\",\n        },\n        {\n          name: \"Michigan\",\n          abbreviation: \"MI\",\n        },\n        {\n          name: \"Minnesota\",\n          abbreviation: \"MN\",\n        },\n        {\n          name: \"Mississippi\",\n          abbreviation: \"MS\",\n        },\n        {\n          name: \"Missouri\",\n          abbreviation: \"MO\",\n        },\n        {\n          name: \"Montana\",\n          abbreviation: \"MT\",\n        },\n        {\n          name: \"Nebraska\",\n          abbreviation: \"NE\",\n        },\n        {\n          name: \"Nevada\",\n          abbreviation: \"NV\",\n        },\n        {\n          name: \"New Hampshire\",\n          abbreviation: \"NH\",\n        },\n        {\n          name: \"New Jersey\",\n          abbreviation: \"NJ\",\n        },\n        {\n          name: \"New Mexico\",\n          abbreviation: \"NM\",\n        },\n        {\n          name: \"New York\",\n          abbreviation: \"NY\",\n        },\n        {\n          name: \"North Carolina\",\n          abbreviation: \"NC\",\n        },\n        {\n          name: \"North Dakota\",\n          abbreviation: \"ND\",\n        },\n        {\n          name: \"Northern Mariana Islands\",\n          abbreviation: \"MP\",\n        },\n        {\n          name: \"Ohio\",\n          abbreviation: \"OH\",\n        },\n        {\n          name: \"Oklahoma\",\n          abbreviation: \"OK\",\n        },\n        {\n          name: \"Oregon\",\n          abbreviation: \"OR\",\n        },\n        {\n          name: \"Palau\",\n          abbreviation: \"PW\",\n        },\n        {\n          name: \"Pennsylvania\",\n          abbreviation: \"PA\",\n        },\n        {\n          name: \"Puerto Rico\",\n          abbreviation: \"PR\",\n        },\n        {\n          name: \"Rhode Island\",\n          abbreviation: \"RI\",\n        },\n        {\n          name: \"South Carolina\",\n          abbreviation: \"SC\",\n        },\n        {\n          name: \"South Dakota\",\n          abbreviation: \"SD\",\n        },\n        {\n          name: \"Tennessee\",\n          abbreviation: \"TN\",\n        },\n        {\n          name: \"Texas\",\n          abbreviation: \"TX\",\n        },\n        {\n          name: \"Utah\",\n          abbreviation: \"UT\",\n        },\n        {\n          name: \"Vermont\",\n          abbreviation: \"VT\",\n        },\n        {\n          name: \"Virgin Islands\",\n          abbreviation: \"VI\",\n        },\n        {\n          name: \"Virginia\",\n          abbreviation: \"VA\",\n        },\n        {\n          name: \"Washington\",\n          abbreviation: \"WA\",\n        },\n        {\n          name: \"West Virginia\",\n          abbreviation: \"WV\",\n        },\n        {\n          name: \"Wisconsin\",\n          abbreviation: \"WI\",\n        },\n        {\n          name: \"Wyoming\",\n          abbreviation: \"WY\",\n        },\n      ],\n      listSeasons: [],\n      listAirDates: [{}],\n      listIsWinners: [\n        {\n          id: 0,\n          name: \"LOSE\",\n        },\n        {\n          id: 1,\n          name: \"WIN\",\n        },\n      ],\n\n      stateSearch: null,\n      seasonSearch: null,\n      airDateSearch: null,\n      isWinnerSearch: null,\n    };\n  },\n  created() {\n    this.getList();\n    this.getListSeasons();\n  },\n\n  methods: {\n    // -------------------------------------- VIEW ------------------------------------------//\n    commonSearch() {\n      this.currentPage = 1;\n      this.getList();\n    },\n\n    getList() {\n      let params = {\n        state: this.stateSearch,\n        season: this.seasonSearch,\n        airDate: this.airDateSearch,\n        isWinner: this.isWinnerSearch,\n        skip: (this.currentPage - 1) * this.perPage,\n        take: this.perPage,\n      };\n\n      this.showLoading();\n      DatabaseService.getList(params)\n        .then((response) => {\n          if (response) {\n            this.listContestants = response.data.list;\n            this.totalRecords = response.data.totalRecords;\n          }\n        })\n        .catch(() => {\n          this.listContestants = [];\n          this.$notify({\n            type: \"danger\",\n            message: this.$i18n.t(\"common.error_connection\"),\n          });\n        })\n        .finally(() => {\n          this.hideLoading();\n        });\n    },\n\n    getListSeasons() {\n      for (let i = 37; i >= 1; i--) {\n        this.listSeasons.push({\n          id: i,\n          name: \"Season \" + i,\n        });\n      }\n    },\n\n    getListAirDates() {\n      this.listAirDates = [{}];\n      this.airDateSearch = null;\n\n      let params = {\n        season: this.seasonSearch,\n      };\n\n      DatabaseService.getListAirDates(params)\n        .then((response) => {\n          if (response) {\n            this.listAirDates = [];\n            for (let i = 0; i < response.data.list.length; i++) {\n              this.listAirDates.push({\n                id: this.convertDateDbToDateClient(\n                  response.data.list[i].airDate\n                ),\n              });\n            }\n          }\n        })\n        .catch(() => {\n          this.listAirDates = [{}];\n        });\n    },\n\n    removeFilter() {\n      this.stateSearch = null;\n      this.seasonSearch = null;\n      this.airDateSearch = null;\n      this.isWinnerSearch = null;\n    },\n\n    convertIsWinner(item) {\n      switch (item) {\n        case 0:\n          return \"LOSE\";\n        case 1:\n          return \"WIN\";\n        default:\n          return \"undefined\";\n      }\n    },\n\n    onPageChange(page) {\n      this.currentPage = page;\n      this.getList();\n    },\n\n    onChangeRowsPerPage(rowsPerPage) {\n      this.currentPage = 1;\n      this.perPage = rowsPerPage;\n      this.getList();\n    },\n\n    // ------------------------------------END VIEW ------------------------------------------//\n  },\n};\n",{"version":3,"sources":["Database.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"Database.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <div class=\"container-fluid\">\n      <div class=\"row ml-0 mr-0 bg-banner\" style=\"height: 500px\"></div>\n\n      <br />\n      <div class=\"col-md-12\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">\n            <diV class=\"form-group-row\">\n              <label class=\"col-sm-4 mt-1\">States</label>\n              <el-select\n                class=\"select-danger select-custom font-italic col-sm-8 rounded-0\"\n                v-model=\"stateSearch\"\n                :placeholder=\"'State'\"\n                :clearable=\"true\"\n                :filterable=\"true\"\n              >\n                <el-option\n                  v-for=\"item in listStates\"\n                  class=\"select-danger\"\n                  :value=\"item.name\"\n                  :label=\"item.name\"\n                  :key=\"item.name\"\n                ></el-option>\n              </el-select>\n            </diV>\n          </div>\n          <div class=\"col-md-3\">\n            <diV class=\"form-group-row\">\n              <label class=\"col-sm-4 mt-1\">Season</label>\n              <el-select\n                class=\"select-danger select-custom font-italic col-sm-8 rounded-0\"\n                v-model=\"seasonSearch\"\n                :placeholder=\"'Season'\"\n                :clearable=\"true\"\n                :filterable=\"true\"\n                @change=\"getListAirDates()\"\n              >\n                <el-option\n                  v-for=\"item in listSeasons\"\n                  class=\"select-danger\"\n                  :value=\"item.id\"\n                  :label=\"item.name\"\n                  :key=\"item.id\"\n                ></el-option>\n              </el-select>\n            </diV>\n          </div>\n          <div class=\"col-md-3\">\n            <diV class=\"form-group-row\">\n              <label class=\"col-sm-4 mt-1\">Airdate</label>\n              <el-select\n                class=\"select-danger select-custom font-italic col-sm-8 rounded-0\"\n                v-model=\"airDateSearch\"\n                :placeholder=\"'Airdate'\"\n                :clearable=\"true\"\n                :filterable=\"true\"\n              >\n                <el-option\n                  v-for=\"item in listAirDates\"\n                  class=\"select-danger\"\n                  :value=\"item.id\"\n                  :label=\"item.id\"\n                  :key=\"item.id\"\n                ></el-option>\n              </el-select>\n            </diV>\n          </div>\n          <div class=\"col-md-3\">\n            <diV class=\"form-group-row\">\n              <label class=\"col-sm-4 mt-1\">Status</label>\n              <el-select\n                class=\"select-danger select-custom font-italic col-sm-8 rounded-0\"\n                v-model=\"isWinnerSearch\"\n                :placeholder=\"'Status'\"\n                :clearable=\"true\"\n                :filterable=\"true\"\n              >\n                <el-option\n                  v-for=\"item in listIsWinners\"\n                  class=\"select-danger\"\n                  :value=\"item.id\"\n                  :label=\"item.name\"\n                  :key=\"item.id\"\n                ></el-option>\n              </el-select>\n            </diV>\n          </div>\n        </div>\n        <br />\n        <div class=\"row\">\n          <div class=\"col-md-4\"></div>\n          <div class=\"col-md-4 text-center\">\n            <base-button\n              type=\"primary\"\n              style=\"min-width: 120px\"\n              @click=\"commonSearch()\"\n              class=\"border-0 rounded-0 btn-custom\"\n              >{{ $t(\"grid.search\") }}</base-button\n            >\n            <base-button\n              type=\"primary\"\n              style=\"min-width: 120px\"\n              @click=\"removeFilter()\"\n              class=\"border-0 rounded-0 btn-custom\"\n              >{{ $t(\"grid.reset_filter\") }}</base-button\n            >\n          </div>\n        </div>\n        <br />\n      </div>\n\n      <div class=\"scrollbar-table\">\n        <base-table-custom :headers=\"headers\" :items=\"listContestants\">\n          <template v-slot:headers=\"props\">\n            <tr>\n              <th\n                v-for=\"(header, index) in props.headers\"\n                :key=\"index\"\n                class=\"text-center bg-primary-line text-white\"\n              >\n                {{ header.text }}\n              </th>\n            </tr>\n          </template>\n\n          <template v-slot:item=\"props\">\n            <td class=\"text-center\">\n              {{ (currentPage - 1) * perPage + (props.index + 1) }}\n            </td>\n            <td>{{ props.item.name }}</td>\n            <td>{{ props.item.occupation }}</td>\n            <td>{{ props.item.state }}</td>\n            <td class=\"text-right\">{{ props.item.season }}</td>\n            <td class=\"text-right\">{{ props.item.showNum }}</td>\n            <td class=\"text-center\">\n              {{ convertDateDbToDateClient(props.item.airDate) }}\n            </td>\n            <td>{{ convertIsWinner(props.item.isWinner) }}</td>\n          </template>\n          <template v-slot:noRecord v-if=\"totalRecords == 0\">\n            <td :colspan=\"headers.length\" class=\"text-center no-records\">\n              {{ $t(\"grid.no_records\") }}\n            </td>\n          </template>\n        </base-table-custom>\n      </div>\n\n      <base-pagination-custom\n        v-show=\"listContestants.length > 0\"\n        :total=\"totalRecords\"\n        :current-page=\"currentPage\"\n        @pagechanged=\"onPageChange\"\n        @changerowsperpage=\"onChangeRowsPerPage\"\n      ></base-pagination-custom>\n    </div>\n  </div>\n</template>\n<script>\nimport BaseComponent from \"../mixins/BaseComponent.js\";\nimport DateUtils from \"../mixins/DateUtils.js\";\nimport DatabaseService from \"../services/DatabaseService.js\";\n\nexport default {\n  name: \"contestants\",\n  mixins: [BaseComponent, DateUtils],\n  data() {\n    return {\n      //Header\n      headers: [\n        {\n          text: \"No\",\n        },\n        {\n          text: \"Name\",\n        },\n        {\n          text: \"Occupation\",\n        },\n        {\n          text: \"State\",\n        },\n        {\n          text: \"Season\",\n        },\n        {\n          text: \"Show number\",\n        },\n        {\n          text: \"Airdate\",\n        },\n        {\n          text: \"Status\",\n        },\n      ],\n\n      // List\n      listContestants: [],\n      listStates: [\n        {\n          name: \"Alabama\",\n          abbreviation: \"AL\",\n        },\n        {\n          name: \"Alaska\",\n          abbreviation: \"AK\",\n        },\n        {\n          name: \"American Samoa\",\n          abbreviation: \"AS\",\n        },\n        {\n          name: \"Arizona\",\n          abbreviation: \"AZ\",\n        },\n        {\n          name: \"Arkansas\",\n          abbreviation: \"AR\",\n        },\n        {\n          name: \"California\",\n          abbreviation: \"CA\",\n        },\n        {\n          name: \"Colorado\",\n          abbreviation: \"CO\",\n        },\n        {\n          name: \"Connecticut\",\n          abbreviation: \"CT\",\n        },\n        {\n          name: \"Delaware\",\n          abbreviation: \"DE\",\n        },\n        {\n          name: \"District Of Columbia\",\n          abbreviation: \"DC\",\n        },\n        {\n          name: \"Federated States Of Micronesia\",\n          abbreviation: \"FM\",\n        },\n        {\n          name: \"Florida\",\n          abbreviation: \"FL\",\n        },\n        {\n          name: \"Georgia\",\n          abbreviation: \"GA\",\n        },\n        {\n          name: \"Guam\",\n          abbreviation: \"GU\",\n        },\n        {\n          name: \"Hawaii\",\n          abbreviation: \"HI\",\n        },\n        {\n          name: \"Idaho\",\n          abbreviation: \"ID\",\n        },\n        {\n          name: \"Illinois\",\n          abbreviation: \"IL\",\n        },\n        {\n          name: \"Indiana\",\n          abbreviation: \"IN\",\n        },\n        {\n          name: \"Iowa\",\n          abbreviation: \"IA\",\n        },\n        {\n          name: \"Kansas\",\n          abbreviation: \"KS\",\n        },\n        {\n          name: \"Kentucky\",\n          abbreviation: \"KY\",\n        },\n        {\n          name: \"Louisiana\",\n          abbreviation: \"LA\",\n        },\n        {\n          name: \"Maine\",\n          abbreviation: \"ME\",\n        },\n        {\n          name: \"Marshall Islands\",\n          abbreviation: \"MH\",\n        },\n        {\n          name: \"Maryland\",\n          abbreviation: \"MD\",\n        },\n        {\n          name: \"Massachusetts\",\n          abbreviation: \"MA\",\n        },\n        {\n          name: \"Michigan\",\n          abbreviation: \"MI\",\n        },\n        {\n          name: \"Minnesota\",\n          abbreviation: \"MN\",\n        },\n        {\n          name: \"Mississippi\",\n          abbreviation: \"MS\",\n        },\n        {\n          name: \"Missouri\",\n          abbreviation: \"MO\",\n        },\n        {\n          name: \"Montana\",\n          abbreviation: \"MT\",\n        },\n        {\n          name: \"Nebraska\",\n          abbreviation: \"NE\",\n        },\n        {\n          name: \"Nevada\",\n          abbreviation: \"NV\",\n        },\n        {\n          name: \"New Hampshire\",\n          abbreviation: \"NH\",\n        },\n        {\n          name: \"New Jersey\",\n          abbreviation: \"NJ\",\n        },\n        {\n          name: \"New Mexico\",\n          abbreviation: \"NM\",\n        },\n        {\n          name: \"New York\",\n          abbreviation: \"NY\",\n        },\n        {\n          name: \"North Carolina\",\n          abbreviation: \"NC\",\n        },\n        {\n          name: \"North Dakota\",\n          abbreviation: \"ND\",\n        },\n        {\n          name: \"Northern Mariana Islands\",\n          abbreviation: \"MP\",\n        },\n        {\n          name: \"Ohio\",\n          abbreviation: \"OH\",\n        },\n        {\n          name: \"Oklahoma\",\n          abbreviation: \"OK\",\n        },\n        {\n          name: \"Oregon\",\n          abbreviation: \"OR\",\n        },\n        {\n          name: \"Palau\",\n          abbreviation: \"PW\",\n        },\n        {\n          name: \"Pennsylvania\",\n          abbreviation: \"PA\",\n        },\n        {\n          name: \"Puerto Rico\",\n          abbreviation: \"PR\",\n        },\n        {\n          name: \"Rhode Island\",\n          abbreviation: \"RI\",\n        },\n        {\n          name: \"South Carolina\",\n          abbreviation: \"SC\",\n        },\n        {\n          name: \"South Dakota\",\n          abbreviation: \"SD\",\n        },\n        {\n          name: \"Tennessee\",\n          abbreviation: \"TN\",\n        },\n        {\n          name: \"Texas\",\n          abbreviation: \"TX\",\n        },\n        {\n          name: \"Utah\",\n          abbreviation: \"UT\",\n        },\n        {\n          name: \"Vermont\",\n          abbreviation: \"VT\",\n        },\n        {\n          name: \"Virgin Islands\",\n          abbreviation: \"VI\",\n        },\n        {\n          name: \"Virginia\",\n          abbreviation: \"VA\",\n        },\n        {\n          name: \"Washington\",\n          abbreviation: \"WA\",\n        },\n        {\n          name: \"West Virginia\",\n          abbreviation: \"WV\",\n        },\n        {\n          name: \"Wisconsin\",\n          abbreviation: \"WI\",\n        },\n        {\n          name: \"Wyoming\",\n          abbreviation: \"WY\",\n        },\n      ],\n      listSeasons: [],\n      listAirDates: [{}],\n      listIsWinners: [\n        {\n          id: 0,\n          name: \"LOSE\",\n        },\n        {\n          id: 1,\n          name: \"WIN\",\n        },\n      ],\n\n      stateSearch: null,\n      seasonSearch: null,\n      airDateSearch: null,\n      isWinnerSearch: null,\n    };\n  },\n  created() {\n    this.getList();\n    this.getListSeasons();\n  },\n\n  methods: {\n    // -------------------------------------- VIEW ------------------------------------------//\n    commonSearch() {\n      this.currentPage = 1;\n      this.getList();\n    },\n\n    getList() {\n      let params = {\n        state: this.stateSearch,\n        season: this.seasonSearch,\n        airDate: this.airDateSearch,\n        isWinner: this.isWinnerSearch,\n        skip: (this.currentPage - 1) * this.perPage,\n        take: this.perPage,\n      };\n\n      this.showLoading();\n      DatabaseService.getList(params)\n        .then((response) => {\n          if (response) {\n            this.listContestants = response.data.list;\n            this.totalRecords = response.data.totalRecords;\n          }\n        })\n        .catch(() => {\n          this.listContestants = [];\n          this.$notify({\n            type: \"danger\",\n            message: this.$i18n.t(\"common.error_connection\"),\n          });\n        })\n        .finally(() => {\n          this.hideLoading();\n        });\n    },\n\n    getListSeasons() {\n      for (let i = 37; i >= 1; i--) {\n        this.listSeasons.push({\n          id: i,\n          name: \"Season \" + i,\n        });\n      }\n    },\n\n    getListAirDates() {\n      this.listAirDates = [{}];\n      this.airDateSearch = null;\n\n      let params = {\n        season: this.seasonSearch,\n      };\n\n      DatabaseService.getListAirDates(params)\n        .then((response) => {\n          if (response) {\n            this.listAirDates = [];\n            for (let i = 0; i < response.data.list.length; i++) {\n              this.listAirDates.push({\n                id: this.convertDateDbToDateClient(\n                  response.data.list[i].airDate\n                ),\n              });\n            }\n          }\n        })\n        .catch(() => {\n          this.listAirDates = [{}];\n        });\n    },\n\n    removeFilter() {\n      this.stateSearch = null;\n      this.seasonSearch = null;\n      this.airDateSearch = null;\n      this.isWinnerSearch = null;\n    },\n\n    convertIsWinner(item) {\n      switch (item) {\n        case 0:\n          return \"LOSE\";\n        case 1:\n          return \"WIN\";\n        default:\n          return \"undefined\";\n      }\n    },\n\n    onPageChange(page) {\n      this.currentPage = page;\n      this.getList();\n    },\n\n    onChangeRowsPerPage(rowsPerPage) {\n      this.currentPage = 1;\n      this.perPage = rowsPerPage;\n      this.getList();\n    },\n\n    // ------------------------------------END VIEW ------------------------------------------//\n  },\n};\n</script>\n<style></style>\n"]}]}