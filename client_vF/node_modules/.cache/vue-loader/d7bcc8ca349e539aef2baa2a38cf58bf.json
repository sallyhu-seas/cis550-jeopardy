{"remainingRequest":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/datnguyen/Documents/GitHub/cis550project/client/src/components/DropdownCustom.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/src/components/DropdownCustom.vue","mtime":1606886486773},{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/datnguyen/Documents/GitHub/cis550project/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.dropdown {\n  list-style-type: none;\n}\n\n.dropdown .dropdown-toggle {\n  cursor: pointer;\n}\n",{"version":3,"sources":["DropdownCustom.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFA;AACA;AACA;;AAEA;AACA;AACA","file":"DropdownCustom.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <component\n    class=\"dropdown font-size-13\"\n    :is=\"tag\"\n    :class=\"[\n      { show: isOpen },\n      { dropdown: direction === 'down' },\n      { dropup: direction === 'up' },\n    ]\"\n    aria-haspopup=\"true\"\n    :aria-expanded=\"isOpen\"\n    @click.stop=\"toggleDropDown\"\n    v-click-outside=\"closeDropDown\"\n  >\n    <slot name=\"title\"></slot>\n    <ul\n      class=\"dropdown-menu font-size-13\"\n      ref=\"menu\"\n      :class=\"[\n        { 'dropdown-menu-right': position === 'right' },\n        { show: isOpen },\n        menuClasses,\n      ]\"\n    >\n      <slot name=\"item\"> </slot>\n    </ul>\n  </component>\n</template>\n<script>\nexport default {\n  name: \"dropdown-custom\",\n  props: {\n    direction: {\n      type: String,\n      default: \"down\",\n    },\n    title: {\n      type: String,\n      description: \"Dropdown title\",\n    },\n    icon: {\n      type: String,\n      description: \"Icon for dropdown title\",\n    },\n    position: {\n      type: String,\n      description: \"Position of dropdown menu (e.g right|left)\",\n    },\n    menuClasses: {\n      type: [String, Object],\n      description: \"Dropdown menu classes\",\n    },\n    hideArrow: {\n      type: Boolean,\n      description: \"Whether dropdown arrow should be hidden\",\n    },\n    appendToBody: {\n      type: Boolean,\n      default: true,\n      description: \"Whether dropdown should be appended to document body\",\n    },\n    tag: {\n      type: String,\n      default: \"li\",\n      description: \"Dropdown html tag (e.g div, li etc)\",\n    },\n  },\n  data() {\n    return {\n      isOpen: false,\n    };\n  },\n  methods: {\n    toggleDropDown() {\n      this.isOpen = !this.isOpen;\n      this.$emit(\"change\", this.isOpen);\n    },\n    closeDropDown() {\n      this.isOpen = false;\n      this.$emit(\"change\", this.isOpen);\n    },\n  },\n};\n</script>\n<style>\n.dropdown {\n  list-style-type: none;\n}\n\n.dropdown .dropdown-toggle {\n  cursor: pointer;\n}\n</style>\n"]}]}